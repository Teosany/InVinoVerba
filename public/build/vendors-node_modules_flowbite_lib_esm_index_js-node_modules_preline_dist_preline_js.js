(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_flowbite_lib_esm_index_js-node_modules_preline_dist_preline_js"],{

/***/ "./node_modules/@popperjs/core/lib/createPopper.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/createPopper.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createPopper: () => (/* binding */ createPopper),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   popperGenerator: () => (/* binding */ popperGenerator)
/* harmony export */ });
/* harmony import */ var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dom-utils/getCompositeRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-utils/listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/orderModifiers.js */ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js");
/* harmony import */ var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/debounce.js */ "./node_modules/@popperjs/core/lib/utils/debounce.js");
/* harmony import */ var _utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mergeByName.js */ "./node_modules/@popperjs/core/lib/utils/mergeByName.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");









var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(setOptionsAction) {
        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: (0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(reference) ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference) : reference.contextElement ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference.contextElement) : [],
          popper: (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = (0,_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__["default"])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: (0,_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__["default"])(reference, (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(popper), state.options.strategy === 'fixed'),
          popper: (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: (0,_utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__["default"])(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref) {
        var name = _ref.name,
            _ref$options = _ref.options,
            options = _ref$options === void 0 ? {} : _ref$options,
            effect = _ref.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/contains.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/contains.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ contains)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBoundingClientRect)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isLayoutViewport.js */ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");




function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }

  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }

  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;

  if (includeScale && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
    scaleX = element.offsetWidth > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.height) / element.offsetHeight || 1 : 1;
  }

  var _ref = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) : window,
      visualViewport = _ref.visualViewport;

  var addVisualOffsets = !(0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__["default"])() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width: width,
    height: height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x: x,
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getClippingRect)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getViewportRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js");
/* harmony import */ var _getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getDocumentRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js");
/* harmony import */ var _listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
/* harmony import */ var _getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");















function getInnerBoundingClientRect(element, strategy) {
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, false, strategy === 'fixed');
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === _enums_js__WEBPACK_IMPORTED_MODULE_1__.viewport ? (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, strategy)) : (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = (0,_listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"])(element).position) >= 0;
  var clipperElement = canEscapeClipping && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isHTMLElement)(element) ? (0,_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element) : element;

  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) && (0,_contains_js__WEBPACK_IMPORTED_MODULE_11__["default"])(clippingParent, clipperElement) && (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_12__["default"])(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.top, accRect.top);
    accRect.right = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.right, accRect.right);
    accRect.bottom = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.bottom, accRect.bottom);
    accRect.left = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getCompositeRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getNodeScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");









function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.width) / element.offsetWidth || 1;
  var scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var isOffsetParentAnElement = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
  var offsetParentIsScaled = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
  var documentElement = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(offsetParent);
  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(documentElement)) {
      scroll = (0,_getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent);
    }

    if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {
      offsets = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__["default"])(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getComputedStyle)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getComputedStyle(element) {
  return (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element).getComputedStyle(element);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentElement)
/* harmony export */ });
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return (((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getDocumentRect)
/* harmony export */ });
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");




 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var winScroll = (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);
  var y = -winScroll.scrollTop;

  if ((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__["default"])(body || html).direction === 'rtl') {
    x += (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getHTMLElementScroll)
/* harmony export */ });
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getLayoutRect)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
 // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

function getLayoutRect(element) {
  var clientRect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeName)
/* harmony export */ });
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getNodeScroll)
/* harmony export */ });
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getHTMLElementScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js");




function getNodeScroll(node) {
  if (node === (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node) || !(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node)) {
    return (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node);
  } else {
    return (0,_getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node);
  }
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOffsetParent)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _isTableElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isTableElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/userAgent.js */ "./node_modules/@popperjs/core/lib/utils/userAgent.js");








function getTrueOffsetParent(element) {
  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
  (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = /firefox/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__["default"])());
  var isIE = /Trident/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__["default"])());

  if (isIE && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = (0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(currentNode)) {
    currentNode = currentNode.host;
  }

  while ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(currentNode)) < 0) {
    var css = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && (0,_isTableElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent) && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) === 'html' || (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) === 'body' && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getParentNode)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");



function getParentNode(element) {
  if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) // fallback

  );
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getScrollParent)
/* harmony export */ });
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node) && (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node)) {
    return node;
  }

  return getScrollParent((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getViewportRect)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
/* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isLayoutViewport.js */ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");




function getViewportRect(element, strategy) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = (0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])();

    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element),
    y: y
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":
/*!****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindow)
/* harmony export */ });
function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScroll)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

function getWindowScroll(node) {
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getWindowScrollBarX)
/* harmony export */ });
/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)).left + (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element).scrollLeft;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isElement: () => (/* binding */ isElement),
/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),
/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot)
/* harmony export */ });
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");


function isElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isLayoutViewport)
/* harmony export */ });
/* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/userAgent.js */ "./node_modules/@popperjs/core/lib/utils/userAgent.js");

function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__["default"])());
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isScrollParent)
/* harmony export */ });
/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isTableElement)
/* harmony export */ });
/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element)) >= 0;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":
/*!************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ listScrollParents)
/* harmony export */ });
/* harmony import */ var _getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js");
/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");




/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = (0,_getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(target)));
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/enums.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/enums.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   afterMain: () => (/* binding */ afterMain),
/* harmony export */   afterRead: () => (/* binding */ afterRead),
/* harmony export */   afterWrite: () => (/* binding */ afterWrite),
/* harmony export */   auto: () => (/* binding */ auto),
/* harmony export */   basePlacements: () => (/* binding */ basePlacements),
/* harmony export */   beforeMain: () => (/* binding */ beforeMain),
/* harmony export */   beforeRead: () => (/* binding */ beforeRead),
/* harmony export */   beforeWrite: () => (/* binding */ beforeWrite),
/* harmony export */   bottom: () => (/* binding */ bottom),
/* harmony export */   clippingParents: () => (/* binding */ clippingParents),
/* harmony export */   end: () => (/* binding */ end),
/* harmony export */   left: () => (/* binding */ left),
/* harmony export */   main: () => (/* binding */ main),
/* harmony export */   modifierPhases: () => (/* binding */ modifierPhases),
/* harmony export */   placements: () => (/* binding */ placements),
/* harmony export */   popper: () => (/* binding */ popper),
/* harmony export */   read: () => (/* binding */ read),
/* harmony export */   reference: () => (/* binding */ reference),
/* harmony export */   right: () => (/* binding */ right),
/* harmony export */   start: () => (/* binding */ start),
/* harmony export */   top: () => (/* binding */ top),
/* harmony export */   variationPlacements: () => (/* binding */ variationPlacements),
/* harmony export */   viewport: () => (/* binding */ viewport),
/* harmony export */   write: () => (/* binding */ write)
/* harmony export */ });
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom-utils/getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect,
  requires: ['computeStyles']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/arrow.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/arrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom-utils/contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");








 // eslint-disable-next-line import/no-unused-modules

var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return (0,_utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(typeof padding !== 'number' ? padding : (0,_utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_2__.basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(state.placement);
  var axis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(basePlacement);
  var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_2__.left, _enums_js__WEBPACK_IMPORTED_MODULE_2__.right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrowElement);
  var minProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.top : _enums_js__WEBPACK_IMPORTED_MODULE_2__.left;
  var maxProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_2__.right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_7__.within)(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (!(0,_dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__["default"])(state.elements.popper, arrowElement)) {
    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   mapToStyles: () => (/* binding */ mapToStyles)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");







 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x,
      y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(x * dpr) / dpr || 0,
    y: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      variation = _ref2.variation,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets,
      isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x,
      x = _offsets$x === void 0 ? 0 : _offsets$x,
      _offsets$y = offsets.y,
      y = _offsets$y === void 0 ? 0 : _offsets$y;

  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
    x: x,
    y: y
  }) : {
    x: x,
    y: y
  };

  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.left;
  var sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;
  var win = window;

  if (adaptive) {
    var offsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) {
      offsetParent = (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(popper);

      if ((0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent).position !== 'static' && position === 'absolute') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.right) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
      offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
      sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
      offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x,
    y: y
  }, (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) : {
    x: x,
    y: y
  };

  x = _ref4.x;
  y = _ref4.y;

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref5) {
  var state = _ref5.state,
      options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.placement),
    variation: (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__["default"])(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration,
    isFixed: state.options.strategy === 'fixed'
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/flip.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/flip.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getOppositePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getOppositeVariationPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/computeAutoPlacement.js */ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto) {
    return [];
  }

  var oppositePlacement = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(placement);
  return [(0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement), oppositePlacement, (0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto ? (0,_utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);

    var isStartVariation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.start;
    var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.top, _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.right : _enums_js__WEBPACK_IMPORTED_MODULE_1__.left : isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    }

    var altVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/hide.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/hide.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom, _enums_js__WEBPACK_IMPORTED_MODULE_0__.left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyStyles: () => (/* reexport safe */ _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   arrow: () => (/* reexport safe */ _arrow_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   computeStyles: () => (/* reexport safe */ _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   eventListeners: () => (/* reexport safe */ _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   flip: () => (/* reexport safe */ _flip_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   hide: () => (/* reexport safe */ _hide_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   offset: () => (/* reexport safe */ _offset_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   popperOffsets: () => (/* reexport safe */ _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   preventOverflow: () => (/* reexport safe */ _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _arrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _hide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");










/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/offset.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/offset.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   distanceAndSkiddingToXY: () => (/* binding */ distanceAndSkiddingToXY)
/* harmony export */ });
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");

 // eslint-disable-next-line import/no-unused-modules

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);
  var invertDistance = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = _enums_js__WEBPACK_IMPORTED_MODULE_1__.placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = (0,_utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getAltAxis.js */ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js");
/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");
/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");












function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state.placement);
  var variation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement);
  var altAxis = (0,_utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__["default"])(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var _offsetModifierState$;

    var mainSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;
    var altSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = offset + overflow[mainSide];
    var max = offset - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0,_utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__["default"])();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset + maxOffset - offsetModifierValue;
    var preventedOffset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.min)(min, tetherMin) : min, offset, tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.max)(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _offsetModifierState$2;

    var _mainSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;

    var _altSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;

    var _offset = popperOffsets[altAxis];

    var _len = altAxis === 'y' ? 'height' : 'width';

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var isOriginSide = [_enums_js__WEBPACK_IMPORTED_MODULE_5__.top, _enums_js__WEBPACK_IMPORTED_MODULE_5__.left].indexOf(basePlacement) !== -1;

    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

    var _preventedOffset = tether && isOriginSide ? (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper-lite.js":
/*!********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper-lite.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createPopper: () => (/* binding */ createPopper),
/* harmony export */   defaultModifiers: () => (/* binding */ defaultModifiers),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   popperGenerator: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");





var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper.js":
/*!***************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.applyStyles),
/* harmony export */   arrow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.arrow),
/* harmony export */   computeStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.computeStyles),
/* harmony export */   createPopper: () => (/* binding */ createPopper),
/* harmony export */   createPopperLite: () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__.createPopper),
/* harmony export */   defaultModifiers: () => (/* binding */ defaultModifiers),
/* harmony export */   detectOverflow: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   eventListeners: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.eventListeners),
/* harmony export */   flip: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.flip),
/* harmony export */   hide: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.hide),
/* harmony export */   offset: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.offset),
/* harmony export */   popperGenerator: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator),
/* harmony export */   popperOffsets: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.popperOffsets),
/* harmony export */   preventOverflow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.preventOverflow)
/* harmony export */ });
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
/* harmony import */ var _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modifiers/offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
/* harmony import */ var _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modifiers/flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
/* harmony import */ var _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modifiers/preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");
/* harmony import */ var _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modifiers/arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
/* harmony import */ var _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modifiers/hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");
/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");










var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"], _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__["default"], _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__["default"], _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"], _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__["default"], _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__["default"]];
var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator)({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules

 // eslint-disable-next-line import/no-unused-modules



/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeAutoPlacement)
/* harmony export */ });
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");




function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements : _options$allowedAutoP;
  var variation = (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement);
  var placements = variation ? flipVariations ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements : _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements.filter(function (placement) {
    return (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) === variation;
  }) : _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = (0,_detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[(0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeOffsets.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computeOffsets)
/* harmony export */ });
/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
/* harmony import */ var _getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? (0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) : null;
  var variation = placement ? (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? (0,_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/debounce.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/debounce.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ debounce)
/* harmony export */ });
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/detectOverflow.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ detectOverflow)
/* harmony export */ });
/* harmony import */ var _dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getClippingRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js");
/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
/* harmony import */ var _dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
/* harmony import */ var _computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");
/* harmony import */ var _rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
/* harmony import */ var _mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
/* harmony import */ var _expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$strategy = _options.strategy,
      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = (0,_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(typeof padding !== 'number' ? padding : (0,_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements));
  var altContext = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference : _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = (0,_dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(element) ? element : element.contextElement || (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = (0,_dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.elements.reference);
  var popperOffsets = (0,_computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = (0,_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__["default"])(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ expandToHashMap)
/* harmony export */ });
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getAltAxis.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getAltAxis)
/* harmony export */ });
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBasePlacement)
/* harmony export */ });

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getFreshSideObject)
/* harmony export */ });
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getMainAxisFromPlacement)
/* harmony export */ });
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositePlacement)
/* harmony export */ });
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getOppositeVariationPlacement)
/* harmony export */ });
var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getVariation.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getVariation.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getVariation)
/* harmony export */ });
function getVariation(placement) {
  return placement.split('-')[1];
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/math.js":
/*!*******************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/math.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   max: () => (/* binding */ max),
/* harmony export */   min: () => (/* binding */ min),
/* harmony export */   round: () => (/* binding */ round)
/* harmony export */ });
var max = Math.max;
var min = Math.min;
var round = Math.round;

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergeByName.js":
/*!**************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergeByName.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergeByName)
/* harmony export */ });
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergePaddingObject)
/* harmony export */ });
/* harmony import */ var _getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");

function mergePaddingObject(paddingObject) {
  return Object.assign({}, (0,_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(), paddingObject);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/orderModifiers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ orderModifiers)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rectToClientRect)
/* harmony export */ });
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/userAgent.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/userAgent.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUAString)
/* harmony export */ });
function getUAString() {
  var uaData = navigator.userAgentData;

  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function (item) {
      return item.brand + "/" + item.version;
    }).join(' ');
  }

  return navigator.userAgent;
}

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/within.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/within.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   within: () => (/* binding */ within),
/* harmony export */   withinMaxClamp: () => (/* binding */ withinMaxClamp)
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");

function within(min, value, max) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(min, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(value, max));
}
function withinMaxClamp(min, value, max) {
  var v = within(min, value, max);
  return v > max ? max : v;
}

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/accordion/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/accordion/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initAccordions: () => (/* binding */ initAccordions)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    alwaysOpen: false,
    activeClasses: 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white',
    inactiveClasses: 'text-gray-500 dark:text-gray-400',
    onOpen: function () { },
    onClose: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Accordion = /** @class */ (function () {
    function Accordion(accordionEl, items, options, instanceOptions) {
        if (accordionEl === void 0) { accordionEl = null; }
        if (items === void 0) { items = []; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : accordionEl.id;
        this._accordionEl = accordionEl;
        this._items = items;
        this._options = __assign(__assign({}, Default), options);
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Accordion', this, this._instanceId, instanceOptions.override);
    }
    Accordion.prototype.init = function () {
        var _this = this;
        if (this._items.length && !this._initialized) {
            // show accordion item based on click
            this._items.forEach(function (item) {
                if (item.active) {
                    _this.open(item.id);
                }
                var clickHandler = function () {
                    _this.toggle(item.id);
                };
                item.triggerEl.addEventListener('click', clickHandler);
                // Store the clickHandler in a property of the item for removal later
                item.clickHandler = clickHandler;
            });
            this._initialized = true;
        }
    };
    Accordion.prototype.destroy = function () {
        if (this._items.length && this._initialized) {
            this._items.forEach(function (item) {
                item.triggerEl.removeEventListener('click', item.clickHandler);
                // Clean up by deleting the clickHandler property from the item
                delete item.clickHandler;
            });
            this._initialized = false;
        }
    };
    Accordion.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Accordion', this._instanceId);
    };
    Accordion.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Accordion.prototype.getItem = function (id) {
        return this._items.filter(function (item) { return item.id === id; })[0];
    };
    Accordion.prototype.open = function (id) {
        var _a, _b;
        var _this = this;
        var item = this.getItem(id);
        // don't hide other accordions if always open
        if (!this._options.alwaysOpen) {
            this._items.map(function (i) {
                var _a, _b;
                if (i !== item) {
                    (_a = i.triggerEl.classList).remove.apply(_a, _this._options.activeClasses.split(' '));
                    (_b = i.triggerEl.classList).add.apply(_b, _this._options.inactiveClasses.split(' '));
                    i.targetEl.classList.add('hidden');
                    i.triggerEl.setAttribute('aria-expanded', 'false');
                    i.active = false;
                    // rotate icon if set
                    if (i.iconEl) {
                        i.iconEl.classList.add('rotate-180');
                    }
                }
            });
        }
        // show active item
        (_a = item.triggerEl.classList).add.apply(_a, this._options.activeClasses.split(' '));
        (_b = item.triggerEl.classList).remove.apply(_b, this._options.inactiveClasses.split(' '));
        item.triggerEl.setAttribute('aria-expanded', 'true');
        item.targetEl.classList.remove('hidden');
        item.active = true;
        // rotate icon if set
        if (item.iconEl) {
            item.iconEl.classList.remove('rotate-180');
        }
        // callback function
        this._options.onOpen(this, item);
    };
    Accordion.prototype.toggle = function (id) {
        var item = this.getItem(id);
        if (item.active) {
            this.close(id);
        }
        else {
            this.open(id);
        }
        // callback function
        this._options.onToggle(this, item);
    };
    Accordion.prototype.close = function (id) {
        var _a, _b;
        var item = this.getItem(id);
        (_a = item.triggerEl.classList).remove.apply(_a, this._options.activeClasses.split(' '));
        (_b = item.triggerEl.classList).add.apply(_b, this._options.inactiveClasses.split(' '));
        item.targetEl.classList.add('hidden');
        item.triggerEl.setAttribute('aria-expanded', 'false');
        item.active = false;
        // rotate icon if set
        if (item.iconEl) {
            item.iconEl.classList.add('rotate-180');
        }
        // callback function
        this._options.onClose(this, item);
    };
    Accordion.prototype.updateOnOpen = function (callback) {
        this._options.onOpen = callback;
    };
    Accordion.prototype.updateOnClose = function (callback) {
        this._options.onClose = callback;
    };
    Accordion.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Accordion;
}());
function initAccordions() {
    document.querySelectorAll('[data-accordion]').forEach(function ($accordionEl) {
        var alwaysOpen = $accordionEl.getAttribute('data-accordion');
        var activeClasses = $accordionEl.getAttribute('data-active-classes');
        var inactiveClasses = $accordionEl.getAttribute('data-inactive-classes');
        var items = [];
        $accordionEl
            .querySelectorAll('[data-accordion-target]')
            .forEach(function ($triggerEl) {
            // Consider only items that directly belong to $accordionEl
            // (to make nested accordions work).
            if ($triggerEl.closest('[data-accordion]') === $accordionEl) {
                var item = {
                    id: $triggerEl.getAttribute('data-accordion-target'),
                    triggerEl: $triggerEl,
                    targetEl: document.querySelector($triggerEl.getAttribute('data-accordion-target')),
                    iconEl: $triggerEl.querySelector('[data-accordion-icon]'),
                    active: $triggerEl.getAttribute('aria-expanded') === 'true'
                        ? true
                        : false,
                };
                items.push(item);
            }
        });
        new Accordion($accordionEl, items, {
            alwaysOpen: alwaysOpen === 'open' ? true : false,
            activeClasses: activeClasses
                ? activeClasses
                : Default.activeClasses,
            inactiveClasses: inactiveClasses
                ? inactiveClasses
                : Default.inactiveClasses,
        });
    });
}
if (typeof window !== 'undefined') {
    window.Accordion = Accordion;
    window.initAccordions = initAccordions;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Accordion);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/accordion/interface.js":
/*!*************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/accordion/interface.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/accordion/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/accordion/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/carousel/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/carousel/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initCarousels: () => (/* binding */ initCarousels)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    defaultPosition: 0,
    indicators: {
        items: [],
        activeClasses: 'bg-white dark:bg-gray-800',
        inactiveClasses: 'bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800',
    },
    interval: 3000,
    onNext: function () { },
    onPrev: function () { },
    onChange: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Carousel = /** @class */ (function () {
    function Carousel(carouselEl, items, options, instanceOptions) {
        if (carouselEl === void 0) { carouselEl = null; }
        if (items === void 0) { items = []; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : carouselEl.id;
        this._carouselEl = carouselEl;
        this._items = items;
        this._options = __assign(__assign(__assign({}, Default), options), { indicators: __assign(__assign({}, Default.indicators), options.indicators) });
        this._activeItem = this.getItem(this._options.defaultPosition);
        this._indicators = this._options.indicators.items;
        this._intervalDuration = this._options.interval;
        this._intervalInstance = null;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Carousel', this, this._instanceId, instanceOptions.override);
    }
    /**
     * initialize carousel and items based on active one
     */
    Carousel.prototype.init = function () {
        var _this = this;
        if (this._items.length && !this._initialized) {
            this._items.map(function (item) {
                item.el.classList.add('absolute', 'inset-0', 'transition-transform', 'transform');
            });
            // if no active item is set then first position is default
            if (this.getActiveItem()) {
                this.slideTo(this.getActiveItem().position);
            }
            else {
                this.slideTo(0);
            }
            this._indicators.map(function (indicator, position) {
                indicator.el.addEventListener('click', function () {
                    _this.slideTo(position);
                });
            });
            this._initialized = true;
        }
    };
    Carousel.prototype.destroy = function () {
        if (this._initialized) {
            this._initialized = false;
        }
    };
    Carousel.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Carousel', this._instanceId);
    };
    Carousel.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Carousel.prototype.getItem = function (position) {
        return this._items[position];
    };
    /**
     * Slide to the element based on id
     * @param {*} position
     */
    Carousel.prototype.slideTo = function (position) {
        var nextItem = this._items[position];
        var rotationItems = {
            left: nextItem.position === 0
                ? this._items[this._items.length - 1]
                : this._items[nextItem.position - 1],
            middle: nextItem,
            right: nextItem.position === this._items.length - 1
                ? this._items[0]
                : this._items[nextItem.position + 1],
        };
        this._rotate(rotationItems);
        this._setActiveItem(nextItem);
        if (this._intervalInstance) {
            this.pause();
            this.cycle();
        }
        this._options.onChange(this);
    };
    /**
     * Based on the currently active item it will go to the next position
     */
    Carousel.prototype.next = function () {
        var activeItem = this.getActiveItem();
        var nextItem = null;
        // check if last item
        if (activeItem.position === this._items.length - 1) {
            nextItem = this._items[0];
        }
        else {
            nextItem = this._items[activeItem.position + 1];
        }
        this.slideTo(nextItem.position);
        // callback function
        this._options.onNext(this);
    };
    /**
     * Based on the currently active item it will go to the previous position
     */
    Carousel.prototype.prev = function () {
        var activeItem = this.getActiveItem();
        var prevItem = null;
        // check if first item
        if (activeItem.position === 0) {
            prevItem = this._items[this._items.length - 1];
        }
        else {
            prevItem = this._items[activeItem.position - 1];
        }
        this.slideTo(prevItem.position);
        // callback function
        this._options.onPrev(this);
    };
    /**
     * This method applies the transform classes based on the left, middle, and right rotation carousel items
     * @param {*} rotationItems
     */
    Carousel.prototype._rotate = function (rotationItems) {
        // reset
        this._items.map(function (item) {
            item.el.classList.add('hidden');
        });
        // Handling the case when there is only one item
        if (this._items.length === 1) {
            rotationItems.middle.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-10');
            rotationItems.middle.el.classList.add('translate-x-0', 'z-20');
            return;
        }
        // left item (previously active)
        rotationItems.left.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-20');
        rotationItems.left.el.classList.add('-translate-x-full', 'z-10');
        // currently active item
        rotationItems.middle.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-10');
        rotationItems.middle.el.classList.add('translate-x-0', 'z-30');
        // right item (upcoming active)
        rotationItems.right.el.classList.remove('-translate-x-full', 'translate-x-full', 'translate-x-0', 'hidden', 'z-30');
        rotationItems.right.el.classList.add('translate-x-full', 'z-20');
    };
    /**
     * Set an interval to cycle through the carousel items
     */
    Carousel.prototype.cycle = function () {
        var _this = this;
        if (typeof window !== 'undefined') {
            this._intervalInstance = window.setInterval(function () {
                _this.next();
            }, this._intervalDuration);
        }
    };
    /**
     * Clears the cycling interval
     */
    Carousel.prototype.pause = function () {
        clearInterval(this._intervalInstance);
    };
    /**
     * Get the currently active item
     */
    Carousel.prototype.getActiveItem = function () {
        return this._activeItem;
    };
    /**
     * Set the currently active item and data attribute
     * @param {*} position
     */
    Carousel.prototype._setActiveItem = function (item) {
        var _a, _b;
        var _this = this;
        this._activeItem = item;
        var position = item.position;
        // update the indicators if available
        if (this._indicators.length) {
            this._indicators.map(function (indicator) {
                var _a, _b;
                indicator.el.setAttribute('aria-current', 'false');
                (_a = indicator.el.classList).remove.apply(_a, _this._options.indicators.activeClasses.split(' '));
                (_b = indicator.el.classList).add.apply(_b, _this._options.indicators.inactiveClasses.split(' '));
            });
            (_a = this._indicators[position].el.classList).add.apply(_a, this._options.indicators.activeClasses.split(' '));
            (_b = this._indicators[position].el.classList).remove.apply(_b, this._options.indicators.inactiveClasses.split(' '));
            this._indicators[position].el.setAttribute('aria-current', 'true');
        }
    };
    Carousel.prototype.updateOnNext = function (callback) {
        this._options.onNext = callback;
    };
    Carousel.prototype.updateOnPrev = function (callback) {
        this._options.onPrev = callback;
    };
    Carousel.prototype.updateOnChange = function (callback) {
        this._options.onChange = callback;
    };
    return Carousel;
}());
function initCarousels() {
    document.querySelectorAll('[data-carousel]').forEach(function ($carouselEl) {
        var interval = $carouselEl.getAttribute('data-carousel-interval');
        var slide = $carouselEl.getAttribute('data-carousel') === 'slide'
            ? true
            : false;
        var items = [];
        var defaultPosition = 0;
        if ($carouselEl.querySelectorAll('[data-carousel-item]').length) {
            Array.from($carouselEl.querySelectorAll('[data-carousel-item]')).map(function ($carouselItemEl, position) {
                items.push({
                    position: position,
                    el: $carouselItemEl,
                });
                if ($carouselItemEl.getAttribute('data-carousel-item') ===
                    'active') {
                    defaultPosition = position;
                }
            });
        }
        var indicators = [];
        if ($carouselEl.querySelectorAll('[data-carousel-slide-to]').length) {
            Array.from($carouselEl.querySelectorAll('[data-carousel-slide-to]')).map(function ($indicatorEl) {
                indicators.push({
                    position: parseInt($indicatorEl.getAttribute('data-carousel-slide-to')),
                    el: $indicatorEl,
                });
            });
        }
        var carousel = new Carousel($carouselEl, items, {
            defaultPosition: defaultPosition,
            indicators: {
                items: indicators,
            },
            interval: interval ? interval : Default.interval,
        });
        if (slide) {
            carousel.cycle();
        }
        // check for controls
        var carouselNextEl = $carouselEl.querySelector('[data-carousel-next]');
        var carouselPrevEl = $carouselEl.querySelector('[data-carousel-prev]');
        if (carouselNextEl) {
            carouselNextEl.addEventListener('click', function () {
                carousel.next();
            });
        }
        if (carouselPrevEl) {
            carouselPrevEl.addEventListener('click', function () {
                carousel.prev();
            });
        }
    });
}
if (typeof window !== 'undefined') {
    window.Carousel = Carousel;
    window.initCarousels = initCarousels;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Carousel);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/carousel/interface.js":
/*!************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/carousel/interface.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/carousel/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/carousel/types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/clipboard/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/clipboard/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initCopyClipboards: () => (/* binding */ initCopyClipboards)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    htmlEntities: false,
    contentType: 'input',
    onCopy: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var CopyClipboard = /** @class */ (function () {
    function CopyClipboard(triggerEl, targetEl, options, instanceOptions) {
        if (triggerEl === void 0) { triggerEl = null; }
        if (targetEl === void 0) { targetEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._triggerEl = triggerEl;
        this._targetEl = targetEl;
        this._options = __assign(__assign({}, Default), options);
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('CopyClipboard', this, this._instanceId, instanceOptions.override);
    }
    CopyClipboard.prototype.init = function () {
        var _this = this;
        if (this._targetEl && this._triggerEl && !this._initialized) {
            this._triggerElClickHandler = function () {
                _this.copy();
            };
            // clicking on the trigger element should copy the value of the target element
            if (this._triggerEl) {
                this._triggerEl.addEventListener('click', this._triggerElClickHandler);
            }
            this._initialized = true;
        }
    };
    CopyClipboard.prototype.destroy = function () {
        if (this._triggerEl && this._targetEl && this._initialized) {
            if (this._triggerEl) {
                this._triggerEl.removeEventListener('click', this._triggerElClickHandler);
            }
            this._initialized = false;
        }
    };
    CopyClipboard.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('CopyClipboard', this._instanceId);
    };
    CopyClipboard.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    CopyClipboard.prototype.getTargetValue = function () {
        if (this._options.contentType === 'input') {
            return this._targetEl.value;
        }
        if (this._options.contentType === 'innerHTML') {
            return this._targetEl.innerHTML;
        }
        if (this._options.contentType === 'textContent') {
            return this._targetEl.textContent.replace(/\s+/g, ' ').trim();
        }
    };
    CopyClipboard.prototype.copy = function () {
        var textToCopy = this.getTargetValue();
        // Check if HTMLEntities option is enabled
        if (this._options.htmlEntities) {
            // Encode the text using HTML entities
            textToCopy = this.decodeHTML(textToCopy);
        }
        // Create a temporary textarea element
        var tempTextArea = document.createElement('textarea');
        tempTextArea.value = textToCopy;
        document.body.appendChild(tempTextArea);
        // Select the text inside the textarea and copy it to the clipboard
        tempTextArea.select();
        document.execCommand('copy');
        // Remove the temporary textarea
        document.body.removeChild(tempTextArea);
        // Callback function
        this._options.onCopy(this);
        return textToCopy;
    };
    // Function to encode text into HTML entities
    CopyClipboard.prototype.decodeHTML = function (html) {
        var textarea = document.createElement('textarea');
        textarea.innerHTML = html;
        return textarea.textContent;
    };
    CopyClipboard.prototype.updateOnCopyCallback = function (callback) {
        this._options.onCopy = callback;
    };
    return CopyClipboard;
}());
function initCopyClipboards() {
    document
        .querySelectorAll('[data-copy-to-clipboard-target]')
        .forEach(function ($triggerEl) {
        var targetId = $triggerEl.getAttribute('data-copy-to-clipboard-target');
        var $targetEl = document.getElementById(targetId);
        var contentType = $triggerEl.getAttribute('data-copy-to-clipboard-content-type');
        var htmlEntities = $triggerEl.getAttribute('data-copy-to-clipboard-html-entities');
        // check if the target element exists
        if ($targetEl) {
            if (!_dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].instanceExists('CopyClipboard', $targetEl.getAttribute('id'))) {
                new CopyClipboard($triggerEl, $targetEl, {
                    htmlEntities: htmlEntities && htmlEntities === 'true'
                        ? true
                        : Default.htmlEntities,
                    contentType: contentType
                        ? contentType
                        : Default.contentType,
                });
            }
        }
        else {
            console.error("The target element with id \"".concat(targetId, "\" does not exist. Please check the data-copy-to-clipboard-target attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.CopyClipboard = CopyClipboard;
    window.initClipboards = initCopyClipboards;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CopyClipboard);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/clipboard/interface.js":
/*!*************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/clipboard/interface.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/clipboard/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/clipboard/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/collapse/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/collapse/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initCollapses: () => (/* binding */ initCollapses)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    onCollapse: function () { },
    onExpand: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Collapse = /** @class */ (function () {
    function Collapse(targetEl, triggerEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (triggerEl === void 0) { triggerEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._triggerEl = triggerEl;
        this._options = __assign(__assign({}, Default), options);
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Collapse', this, this._instanceId, instanceOptions.override);
    }
    Collapse.prototype.init = function () {
        var _this = this;
        if (this._triggerEl && this._targetEl && !this._initialized) {
            if (this._triggerEl.hasAttribute('aria-expanded')) {
                this._visible =
                    this._triggerEl.getAttribute('aria-expanded') === 'true';
            }
            else {
                // fix until v2 not to break previous single collapses which became dismiss
                this._visible = !this._targetEl.classList.contains('hidden');
            }
            this._clickHandler = function () {
                _this.toggle();
            };
            this._triggerEl.addEventListener('click', this._clickHandler);
            this._initialized = true;
        }
    };
    Collapse.prototype.destroy = function () {
        if (this._triggerEl && this._initialized) {
            this._triggerEl.removeEventListener('click', this._clickHandler);
            this._initialized = false;
        }
    };
    Collapse.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Collapse', this._instanceId);
    };
    Collapse.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Collapse.prototype.collapse = function () {
        this._targetEl.classList.add('hidden');
        if (this._triggerEl) {
            this._triggerEl.setAttribute('aria-expanded', 'false');
        }
        this._visible = false;
        // callback function
        this._options.onCollapse(this);
    };
    Collapse.prototype.expand = function () {
        this._targetEl.classList.remove('hidden');
        if (this._triggerEl) {
            this._triggerEl.setAttribute('aria-expanded', 'true');
        }
        this._visible = true;
        // callback function
        this._options.onExpand(this);
    };
    Collapse.prototype.toggle = function () {
        if (this._visible) {
            this.collapse();
        }
        else {
            this.expand();
        }
        // callback function
        this._options.onToggle(this);
    };
    Collapse.prototype.updateOnCollapse = function (callback) {
        this._options.onCollapse = callback;
    };
    Collapse.prototype.updateOnExpand = function (callback) {
        this._options.onExpand = callback;
    };
    Collapse.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Collapse;
}());
function initCollapses() {
    document
        .querySelectorAll('[data-collapse-toggle]')
        .forEach(function ($triggerEl) {
        var targetId = $triggerEl.getAttribute('data-collapse-toggle');
        var $targetEl = document.getElementById(targetId);
        // check if the target element exists
        if ($targetEl) {
            if (!_dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].instanceExists('Collapse', $targetEl.getAttribute('id'))) {
                new Collapse($targetEl, $triggerEl);
            }
            else {
                // if instance exists already for the same target element then create a new one with a different trigger element
                new Collapse($targetEl, $triggerEl, {}, {
                    id: $targetEl.getAttribute('id') +
                        '_' +
                        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"]._generateRandomId(),
                });
            }
        }
        else {
            console.error("The target element with id \"".concat(targetId, "\" does not exist. Please check the data-collapse-toggle attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Collapse = Collapse;
    window.initCollapses = initCollapses;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Collapse);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/collapse/interface.js":
/*!************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/collapse/interface.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/collapse/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/collapse/types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dial/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dial/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initDials: () => (/* binding */ initDials)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    triggerType: 'hover',
    onShow: function () { },
    onHide: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Dial = /** @class */ (function () {
    function Dial(parentEl, triggerEl, targetEl, options, instanceOptions) {
        if (parentEl === void 0) { parentEl = null; }
        if (triggerEl === void 0) { triggerEl = null; }
        if (targetEl === void 0) { targetEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._parentEl = parentEl;
        this._triggerEl = triggerEl;
        this._targetEl = targetEl;
        this._options = __assign(__assign({}, Default), options);
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Dial', this, this._instanceId, instanceOptions.override);
    }
    Dial.prototype.init = function () {
        var _this = this;
        if (this._triggerEl && this._targetEl && !this._initialized) {
            var triggerEventTypes = this._getTriggerEventTypes(this._options.triggerType);
            this._showEventHandler = function () {
                _this.show();
            };
            triggerEventTypes.showEvents.forEach(function (ev) {
                _this._triggerEl.addEventListener(ev, _this._showEventHandler);
                _this._targetEl.addEventListener(ev, _this._showEventHandler);
            });
            this._hideEventHandler = function () {
                if (!_this._parentEl.matches(':hover')) {
                    _this.hide();
                }
            };
            triggerEventTypes.hideEvents.forEach(function (ev) {
                _this._parentEl.addEventListener(ev, _this._hideEventHandler);
            });
            this._initialized = true;
        }
    };
    Dial.prototype.destroy = function () {
        var _this = this;
        if (this._initialized) {
            var triggerEventTypes = this._getTriggerEventTypes(this._options.triggerType);
            triggerEventTypes.showEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._showEventHandler);
                _this._targetEl.removeEventListener(ev, _this._showEventHandler);
            });
            triggerEventTypes.hideEvents.forEach(function (ev) {
                _this._parentEl.removeEventListener(ev, _this._hideEventHandler);
            });
            this._initialized = false;
        }
    };
    Dial.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Dial', this._instanceId);
    };
    Dial.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Dial.prototype.hide = function () {
        this._targetEl.classList.add('hidden');
        if (this._triggerEl) {
            this._triggerEl.setAttribute('aria-expanded', 'false');
        }
        this._visible = false;
        // callback function
        this._options.onHide(this);
    };
    Dial.prototype.show = function () {
        this._targetEl.classList.remove('hidden');
        if (this._triggerEl) {
            this._triggerEl.setAttribute('aria-expanded', 'true');
        }
        this._visible = true;
        // callback function
        this._options.onShow(this);
    };
    Dial.prototype.toggle = function () {
        if (this._visible) {
            this.hide();
        }
        else {
            this.show();
        }
    };
    Dial.prototype.isHidden = function () {
        return !this._visible;
    };
    Dial.prototype.isVisible = function () {
        return this._visible;
    };
    Dial.prototype._getTriggerEventTypes = function (triggerType) {
        switch (triggerType) {
            case 'hover':
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
            case 'click':
                return {
                    showEvents: ['click', 'focus'],
                    hideEvents: ['focusout', 'blur'],
                };
            case 'none':
                return {
                    showEvents: [],
                    hideEvents: [],
                };
            default:
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
        }
    };
    Dial.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Dial.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Dial.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Dial;
}());
function initDials() {
    document.querySelectorAll('[data-dial-init]').forEach(function ($parentEl) {
        var $triggerEl = $parentEl.querySelector('[data-dial-toggle]');
        if ($triggerEl) {
            var dialId = $triggerEl.getAttribute('data-dial-toggle');
            var $dialEl = document.getElementById(dialId);
            if ($dialEl) {
                var triggerType = $triggerEl.getAttribute('data-dial-trigger');
                new Dial($parentEl, $triggerEl, $dialEl, {
                    triggerType: triggerType
                        ? triggerType
                        : Default.triggerType,
                });
            }
            else {
                console.error("Dial with id ".concat(dialId, " does not exist. Are you sure that the data-dial-toggle attribute points to the correct modal id?"));
            }
        }
        else {
            console.error("Dial with id ".concat($parentEl.id, " does not have a trigger element. Are you sure that the data-dial-toggle attribute exists?"));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Dial = Dial;
    window.initDials = initDials;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dial);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dial/interface.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dial/interface.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dial/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dial/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dismiss/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dismiss/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initDismisses: () => (/* binding */ initDismisses)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    transition: 'transition-opacity',
    duration: 300,
    timing: 'ease-out',
    onHide: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Dismiss = /** @class */ (function () {
    function Dismiss(targetEl, triggerEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (triggerEl === void 0) { triggerEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._triggerEl = triggerEl;
        this._options = __assign(__assign({}, Default), options);
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Dismiss', this, this._instanceId, instanceOptions.override);
    }
    Dismiss.prototype.init = function () {
        var _this = this;
        if (this._triggerEl && this._targetEl && !this._initialized) {
            this._clickHandler = function () {
                _this.hide();
            };
            this._triggerEl.addEventListener('click', this._clickHandler);
            this._initialized = true;
        }
    };
    Dismiss.prototype.destroy = function () {
        if (this._triggerEl && this._initialized) {
            this._triggerEl.removeEventListener('click', this._clickHandler);
            this._initialized = false;
        }
    };
    Dismiss.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Dismiss', this._instanceId);
    };
    Dismiss.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Dismiss.prototype.hide = function () {
        var _this = this;
        this._targetEl.classList.add(this._options.transition, "duration-".concat(this._options.duration), this._options.timing, 'opacity-0');
        setTimeout(function () {
            _this._targetEl.classList.add('hidden');
        }, this._options.duration);
        // callback function
        this._options.onHide(this, this._targetEl);
    };
    Dismiss.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    return Dismiss;
}());
function initDismisses() {
    document.querySelectorAll('[data-dismiss-target]').forEach(function ($triggerEl) {
        var targetId = $triggerEl.getAttribute('data-dismiss-target');
        var $dismissEl = document.querySelector(targetId);
        if ($dismissEl) {
            new Dismiss($dismissEl, $triggerEl);
        }
        else {
            console.error("The dismiss element with id \"".concat(targetId, "\" does not exist. Please check the data-dismiss-target attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Dismiss = Dismiss;
    window.initDismisses = initDismisses;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dismiss);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dismiss/interface.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dismiss/interface.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dismiss/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dismiss/types.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/drawer/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/drawer/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initDrawers: () => (/* binding */ initDrawers)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    placement: 'left',
    bodyScrolling: false,
    backdrop: true,
    edge: false,
    edgeOffset: 'bottom-[60px]',
    backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-30',
    onShow: function () { },
    onHide: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Drawer = /** @class */ (function () {
    function Drawer(targetEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._eventListenerInstances = [];
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._options = __assign(__assign({}, Default), options);
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Drawer', this, this._instanceId, instanceOptions.override);
    }
    Drawer.prototype.init = function () {
        var _this = this;
        // set initial accessibility attributes
        if (this._targetEl && !this._initialized) {
            this._targetEl.setAttribute('aria-hidden', 'true');
            this._targetEl.classList.add('transition-transform');
            // set base placement classes
            this._getPlacementClasses(this._options.placement).base.map(function (c) {
                _this._targetEl.classList.add(c);
            });
            this._handleEscapeKey = function (event) {
                if (event.key === 'Escape') {
                    // if 'Escape' key is pressed
                    if (_this.isVisible()) {
                        // if the Drawer is visible
                        _this.hide(); // hide the Drawer
                    }
                }
            };
            // add keyboard event listener to document
            document.addEventListener('keydown', this._handleEscapeKey);
            this._initialized = true;
        }
    };
    Drawer.prototype.destroy = function () {
        if (this._initialized) {
            this.removeAllEventListenerInstances();
            this._destroyBackdropEl();
            // Remove the keyboard event listener
            document.removeEventListener('keydown', this._handleEscapeKey);
            this._initialized = false;
        }
    };
    Drawer.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Drawer', this._instanceId);
    };
    Drawer.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Drawer.prototype.hide = function () {
        var _this = this;
        // based on the edge option show placement classes
        if (this._options.edge) {
            this._getPlacementClasses(this._options.placement + '-edge').active.map(function (c) {
                _this._targetEl.classList.remove(c);
            });
            this._getPlacementClasses(this._options.placement + '-edge').inactive.map(function (c) {
                _this._targetEl.classList.add(c);
            });
        }
        else {
            this._getPlacementClasses(this._options.placement).active.map(function (c) {
                _this._targetEl.classList.remove(c);
            });
            this._getPlacementClasses(this._options.placement).inactive.map(function (c) {
                _this._targetEl.classList.add(c);
            });
        }
        // set accessibility attributes
        this._targetEl.setAttribute('aria-hidden', 'true');
        this._targetEl.removeAttribute('aria-modal');
        this._targetEl.removeAttribute('role');
        // enable body scroll
        if (!this._options.bodyScrolling) {
            document.body.classList.remove('overflow-hidden');
        }
        // destroy backdrop
        if (this._options.backdrop) {
            this._destroyBackdropEl();
        }
        this._visible = false;
        // callback function
        this._options.onHide(this);
    };
    Drawer.prototype.show = function () {
        var _this = this;
        if (this._options.edge) {
            this._getPlacementClasses(this._options.placement + '-edge').active.map(function (c) {
                _this._targetEl.classList.add(c);
            });
            this._getPlacementClasses(this._options.placement + '-edge').inactive.map(function (c) {
                _this._targetEl.classList.remove(c);
            });
        }
        else {
            this._getPlacementClasses(this._options.placement).active.map(function (c) {
                _this._targetEl.classList.add(c);
            });
            this._getPlacementClasses(this._options.placement).inactive.map(function (c) {
                _this._targetEl.classList.remove(c);
            });
        }
        // set accessibility attributes
        this._targetEl.setAttribute('aria-modal', 'true');
        this._targetEl.setAttribute('role', 'dialog');
        this._targetEl.removeAttribute('aria-hidden');
        // disable body scroll
        if (!this._options.bodyScrolling) {
            document.body.classList.add('overflow-hidden');
        }
        // show backdrop
        if (this._options.backdrop) {
            this._createBackdrop();
        }
        this._visible = true;
        // callback function
        this._options.onShow(this);
    };
    Drawer.prototype.toggle = function () {
        if (this.isVisible()) {
            this.hide();
        }
        else {
            this.show();
        }
    };
    Drawer.prototype._createBackdrop = function () {
        var _a;
        var _this = this;
        if (!this._visible) {
            var backdropEl = document.createElement('div');
            backdropEl.setAttribute('drawer-backdrop', '');
            (_a = backdropEl.classList).add.apply(_a, this._options.backdropClasses.split(' '));
            document.querySelector('body').append(backdropEl);
            backdropEl.addEventListener('click', function () {
                _this.hide();
            });
        }
    };
    Drawer.prototype._destroyBackdropEl = function () {
        if (this._visible &&
            document.querySelector('[drawer-backdrop]') !== null) {
            document.querySelector('[drawer-backdrop]').remove();
        }
    };
    Drawer.prototype._getPlacementClasses = function (placement) {
        switch (placement) {
            case 'top':
                return {
                    base: ['top-0', 'left-0', 'right-0'],
                    active: ['transform-none'],
                    inactive: ['-translate-y-full'],
                };
            case 'right':
                return {
                    base: ['right-0', 'top-0'],
                    active: ['transform-none'],
                    inactive: ['translate-x-full'],
                };
            case 'bottom':
                return {
                    base: ['bottom-0', 'left-0', 'right-0'],
                    active: ['transform-none'],
                    inactive: ['translate-y-full'],
                };
            case 'left':
                return {
                    base: ['left-0', 'top-0'],
                    active: ['transform-none'],
                    inactive: ['-translate-x-full'],
                };
            case 'bottom-edge':
                return {
                    base: ['left-0', 'top-0'],
                    active: ['transform-none'],
                    inactive: ['translate-y-full', this._options.edgeOffset],
                };
            default:
                return {
                    base: ['left-0', 'top-0'],
                    active: ['transform-none'],
                    inactive: ['-translate-x-full'],
                };
        }
    };
    Drawer.prototype.isHidden = function () {
        return !this._visible;
    };
    Drawer.prototype.isVisible = function () {
        return this._visible;
    };
    Drawer.prototype.addEventListenerInstance = function (element, type, handler) {
        this._eventListenerInstances.push({
            element: element,
            type: type,
            handler: handler,
        });
    };
    Drawer.prototype.removeAllEventListenerInstances = function () {
        this._eventListenerInstances.map(function (eventListenerInstance) {
            eventListenerInstance.element.removeEventListener(eventListenerInstance.type, eventListenerInstance.handler);
        });
        this._eventListenerInstances = [];
    };
    Drawer.prototype.getAllEventListenerInstances = function () {
        return this._eventListenerInstances;
    };
    Drawer.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Drawer.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Drawer.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Drawer;
}());
function initDrawers() {
    document.querySelectorAll('[data-drawer-target]').forEach(function ($triggerEl) {
        // mandatory
        var drawerId = $triggerEl.getAttribute('data-drawer-target');
        var $drawerEl = document.getElementById(drawerId);
        if ($drawerEl) {
            var placement = $triggerEl.getAttribute('data-drawer-placement');
            var bodyScrolling = $triggerEl.getAttribute('data-drawer-body-scrolling');
            var backdrop = $triggerEl.getAttribute('data-drawer-backdrop');
            var edge = $triggerEl.getAttribute('data-drawer-edge');
            var edgeOffset = $triggerEl.getAttribute('data-drawer-edge-offset');
            new Drawer($drawerEl, {
                placement: placement ? placement : Default.placement,
                bodyScrolling: bodyScrolling
                    ? bodyScrolling === 'true'
                        ? true
                        : false
                    : Default.bodyScrolling,
                backdrop: backdrop
                    ? backdrop === 'true'
                        ? true
                        : false
                    : Default.backdrop,
                edge: edge ? (edge === 'true' ? true : false) : Default.edge,
                edgeOffset: edgeOffset ? edgeOffset : Default.edgeOffset,
            });
        }
        else {
            console.error("Drawer with id ".concat(drawerId, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
        }
    });
    document.querySelectorAll('[data-drawer-toggle]').forEach(function ($triggerEl) {
        var drawerId = $triggerEl.getAttribute('data-drawer-toggle');
        var $drawerEl = document.getElementById(drawerId);
        if ($drawerEl) {
            var drawer_1 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Drawer', drawerId);
            if (drawer_1) {
                var toggleDrawer = function () {
                    drawer_1.toggle();
                };
                $triggerEl.addEventListener('click', toggleDrawer);
                drawer_1.addEventListenerInstance($triggerEl, 'click', toggleDrawer);
            }
            else {
                console.error("Drawer with id ".concat(drawerId, " has not been initialized. Please initialize it using the data-drawer-target attribute."));
            }
        }
        else {
            console.error("Drawer with id ".concat(drawerId, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
        }
    });
    document
        .querySelectorAll('[data-drawer-dismiss], [data-drawer-hide]')
        .forEach(function ($triggerEl) {
        var drawerId = $triggerEl.getAttribute('data-drawer-dismiss')
            ? $triggerEl.getAttribute('data-drawer-dismiss')
            : $triggerEl.getAttribute('data-drawer-hide');
        var $drawerEl = document.getElementById(drawerId);
        if ($drawerEl) {
            var drawer_2 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Drawer', drawerId);
            if (drawer_2) {
                var hideDrawer = function () {
                    drawer_2.hide();
                };
                $triggerEl.addEventListener('click', hideDrawer);
                drawer_2.addEventListenerInstance($triggerEl, 'click', hideDrawer);
            }
            else {
                console.error("Drawer with id ".concat(drawerId, " has not been initialized. Please initialize it using the data-drawer-target attribute."));
            }
        }
        else {
            console.error("Drawer with id ".concat(drawerId, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id"));
        }
    });
    document.querySelectorAll('[data-drawer-show]').forEach(function ($triggerEl) {
        var drawerId = $triggerEl.getAttribute('data-drawer-show');
        var $drawerEl = document.getElementById(drawerId);
        if ($drawerEl) {
            var drawer_3 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Drawer', drawerId);
            if (drawer_3) {
                var showDrawer = function () {
                    drawer_3.show();
                };
                $triggerEl.addEventListener('click', showDrawer);
                drawer_3.addEventListenerInstance($triggerEl, 'click', showDrawer);
            }
            else {
                console.error("Drawer with id ".concat(drawerId, " has not been initialized. Please initialize it using the data-drawer-target attribute."));
            }
        }
        else {
            console.error("Drawer with id ".concat(drawerId, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Drawer = Drawer;
    window.initDrawers = initDrawers;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Drawer);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/drawer/interface.js":
/*!**********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/drawer/interface.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/drawer/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/drawer/types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dropdown/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dropdown/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initDropdowns: () => (/* binding */ initDropdowns)
/* harmony export */ });
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
/* eslint-disable @typescript-eslint/no-empty-function */


var Default = {
    placement: 'bottom',
    triggerType: 'click',
    offsetSkidding: 0,
    offsetDistance: 10,
    delay: 300,
    ignoreClickOutsideClass: false,
    onShow: function () { },
    onHide: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Dropdown = /** @class */ (function () {
    function Dropdown(targetElement, triggerElement, options, instanceOptions) {
        if (targetElement === void 0) { targetElement = null; }
        if (triggerElement === void 0) { triggerElement = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetElement.id;
        this._targetEl = targetElement;
        this._triggerEl = triggerElement;
        this._options = __assign(__assign({}, Default), options);
        this._popperInstance = null;
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Dropdown', this, this._instanceId, instanceOptions.override);
    }
    Dropdown.prototype.init = function () {
        if (this._triggerEl && this._targetEl && !this._initialized) {
            this._popperInstance = this._createPopperInstance();
            this._setupEventListeners();
            this._initialized = true;
        }
    };
    Dropdown.prototype.destroy = function () {
        var _this = this;
        var triggerEvents = this._getTriggerEvents();
        // Remove click event listeners for trigger element
        if (this._options.triggerType === 'click') {
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._clickHandler);
            });
        }
        // Remove hover event listeners for trigger and target elements
        if (this._options.triggerType === 'hover') {
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._hoverShowTriggerElHandler);
                _this._targetEl.removeEventListener(ev, _this._hoverShowTargetElHandler);
            });
            triggerEvents.hideEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._hoverHideHandler);
                _this._targetEl.removeEventListener(ev, _this._hoverHideHandler);
            });
        }
        this._popperInstance.destroy();
        this._initialized = false;
    };
    Dropdown.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Dropdown', this._instanceId);
    };
    Dropdown.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Dropdown.prototype._setupEventListeners = function () {
        var _this = this;
        var triggerEvents = this._getTriggerEvents();
        this._clickHandler = function () {
            _this.toggle();
        };
        // click event handling for trigger element
        if (this._options.triggerType === 'click') {
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.addEventListener(ev, _this._clickHandler);
            });
        }
        this._hoverShowTriggerElHandler = function (ev) {
            if (ev.type === 'click') {
                _this.toggle();
            }
            else {
                setTimeout(function () {
                    _this.show();
                }, _this._options.delay);
            }
        };
        this._hoverShowTargetElHandler = function () {
            _this.show();
        };
        this._hoverHideHandler = function () {
            setTimeout(function () {
                if (!_this._targetEl.matches(':hover')) {
                    _this.hide();
                }
            }, _this._options.delay);
        };
        // hover event handling for trigger element
        if (this._options.triggerType === 'hover') {
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.addEventListener(ev, _this._hoverShowTriggerElHandler);
                _this._targetEl.addEventListener(ev, _this._hoverShowTargetElHandler);
            });
            triggerEvents.hideEvents.forEach(function (ev) {
                _this._triggerEl.addEventListener(ev, _this._hoverHideHandler);
                _this._targetEl.addEventListener(ev, _this._hoverHideHandler);
            });
        }
    };
    Dropdown.prototype._createPopperInstance = function () {
        return (0,_popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper)(this._triggerEl, this._targetEl, {
            placement: this._options.placement,
            modifiers: [
                {
                    name: 'offset',
                    options: {
                        offset: [
                            this._options.offsetSkidding,
                            this._options.offsetDistance,
                        ],
                    },
                },
            ],
        });
    };
    Dropdown.prototype._setupClickOutsideListener = function () {
        var _this = this;
        this._clickOutsideEventListener = function (ev) {
            _this._handleClickOutside(ev, _this._targetEl);
        };
        document.body.addEventListener('click', this._clickOutsideEventListener, true);
    };
    Dropdown.prototype._removeClickOutsideListener = function () {
        document.body.removeEventListener('click', this._clickOutsideEventListener, true);
    };
    Dropdown.prototype._handleClickOutside = function (ev, targetEl) {
        var clickedEl = ev.target;
        // Ignore clicks on the trigger element (ie. a datepicker input)
        var ignoreClickOutsideClass = this._options.ignoreClickOutsideClass;
        var isIgnored = false;
        if (ignoreClickOutsideClass) {
            var ignoredClickOutsideEls = document.querySelectorAll(".".concat(ignoreClickOutsideClass));
            ignoredClickOutsideEls.forEach(function (el) {
                if (el.contains(clickedEl)) {
                    isIgnored = true;
                    return;
                }
            });
        }
        // Ignore clicks on the target element (ie. dropdown itself)
        if (clickedEl !== targetEl &&
            !targetEl.contains(clickedEl) &&
            !this._triggerEl.contains(clickedEl) &&
            !isIgnored &&
            this.isVisible()) {
            this.hide();
        }
    };
    Dropdown.prototype._getTriggerEvents = function () {
        switch (this._options.triggerType) {
            case 'hover':
                return {
                    showEvents: ['mouseenter', 'click'],
                    hideEvents: ['mouseleave'],
                };
            case 'click':
                return {
                    showEvents: ['click'],
                    hideEvents: [],
                };
            case 'none':
                return {
                    showEvents: [],
                    hideEvents: [],
                };
            default:
                return {
                    showEvents: ['click'],
                    hideEvents: [],
                };
        }
    };
    Dropdown.prototype.toggle = function () {
        if (this.isVisible()) {
            this.hide();
        }
        else {
            this.show();
        }
        this._options.onToggle(this);
    };
    Dropdown.prototype.isVisible = function () {
        return this._visible;
    };
    Dropdown.prototype.show = function () {
        this._targetEl.classList.remove('hidden');
        this._targetEl.classList.add('block');
        // Enable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: true },
            ], false) })); });
        this._setupClickOutsideListener();
        // Update its position
        this._popperInstance.update();
        this._visible = true;
        // callback function
        this._options.onShow(this);
    };
    Dropdown.prototype.hide = function () {
        this._targetEl.classList.remove('block');
        this._targetEl.classList.add('hidden');
        // Disable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: false },
            ], false) })); });
        this._visible = false;
        this._removeClickOutsideListener();
        // callback function
        this._options.onHide(this);
    };
    Dropdown.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Dropdown.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Dropdown.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Dropdown;
}());
function initDropdowns() {
    document
        .querySelectorAll('[data-dropdown-toggle]')
        .forEach(function ($triggerEl) {
        var dropdownId = $triggerEl.getAttribute('data-dropdown-toggle');
        var $dropdownEl = document.getElementById(dropdownId);
        if ($dropdownEl) {
            var placement = $triggerEl.getAttribute('data-dropdown-placement');
            var offsetSkidding = $triggerEl.getAttribute('data-dropdown-offset-skidding');
            var offsetDistance = $triggerEl.getAttribute('data-dropdown-offset-distance');
            var triggerType = $triggerEl.getAttribute('data-dropdown-trigger');
            var delay = $triggerEl.getAttribute('data-dropdown-delay');
            var ignoreClickOutsideClass = $triggerEl.getAttribute('data-dropdown-ignore-click-outside-class');
            new Dropdown($dropdownEl, $triggerEl, {
                placement: placement ? placement : Default.placement,
                triggerType: triggerType
                    ? triggerType
                    : Default.triggerType,
                offsetSkidding: offsetSkidding
                    ? parseInt(offsetSkidding)
                    : Default.offsetSkidding,
                offsetDistance: offsetDistance
                    ? parseInt(offsetDistance)
                    : Default.offsetDistance,
                delay: delay ? parseInt(delay) : Default.delay,
                ignoreClickOutsideClass: ignoreClickOutsideClass
                    ? ignoreClickOutsideClass
                    : Default.ignoreClickOutsideClass,
            });
        }
        else {
            console.error("The dropdown element with id \"".concat(dropdownId, "\" does not exist. Please check the data-dropdown-toggle attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Dropdown = Dropdown;
    window.initDropdowns = initDropdowns;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dropdown);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dropdown/interface.js":
/*!************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dropdown/interface.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/dropdown/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/dropdown/types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initFlowbite: () => (/* binding */ initFlowbite)
/* harmony export */ });
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion */ "./node_modules/flowbite/lib/esm/components/accordion/index.js");
/* harmony import */ var _carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./carousel */ "./node_modules/flowbite/lib/esm/components/carousel/index.js");
/* harmony import */ var _clipboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clipboard */ "./node_modules/flowbite/lib/esm/components/clipboard/index.js");
/* harmony import */ var _collapse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collapse */ "./node_modules/flowbite/lib/esm/components/collapse/index.js");
/* harmony import */ var _dial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dial */ "./node_modules/flowbite/lib/esm/components/dial/index.js");
/* harmony import */ var _dismiss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dismiss */ "./node_modules/flowbite/lib/esm/components/dismiss/index.js");
/* harmony import */ var _drawer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./drawer */ "./node_modules/flowbite/lib/esm/components/drawer/index.js");
/* harmony import */ var _dropdown__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dropdown */ "./node_modules/flowbite/lib/esm/components/dropdown/index.js");
/* harmony import */ var _input_counter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./input-counter */ "./node_modules/flowbite/lib/esm/components/input-counter/index.js");
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modal */ "./node_modules/flowbite/lib/esm/components/modal/index.js");
/* harmony import */ var _popover__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./popover */ "./node_modules/flowbite/lib/esm/components/popover/index.js");
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tabs */ "./node_modules/flowbite/lib/esm/components/tabs/index.js");
/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tooltip */ "./node_modules/flowbite/lib/esm/components/tooltip/index.js");













function initFlowbite() {
    (0,_accordion__WEBPACK_IMPORTED_MODULE_0__.initAccordions)();
    (0,_collapse__WEBPACK_IMPORTED_MODULE_3__.initCollapses)();
    (0,_carousel__WEBPACK_IMPORTED_MODULE_1__.initCarousels)();
    (0,_dismiss__WEBPACK_IMPORTED_MODULE_5__.initDismisses)();
    (0,_dropdown__WEBPACK_IMPORTED_MODULE_7__.initDropdowns)();
    (0,_modal__WEBPACK_IMPORTED_MODULE_9__.initModals)();
    (0,_drawer__WEBPACK_IMPORTED_MODULE_6__.initDrawers)();
    (0,_tabs__WEBPACK_IMPORTED_MODULE_11__.initTabs)();
    (0,_tooltip__WEBPACK_IMPORTED_MODULE_12__.initTooltips)();
    (0,_popover__WEBPACK_IMPORTED_MODULE_10__.initPopovers)();
    (0,_dial__WEBPACK_IMPORTED_MODULE_4__.initDials)();
    (0,_input_counter__WEBPACK_IMPORTED_MODULE_8__.initInputCounters)();
    (0,_clipboard__WEBPACK_IMPORTED_MODULE_2__.initCopyClipboards)();
}
if (typeof window !== 'undefined') {
    window.initFlowbite = initFlowbite;
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/input-counter/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/input-counter/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initInputCounters: () => (/* binding */ initInputCounters)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    minValue: null,
    maxValue: null,
    onIncrement: function () { },
    onDecrement: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var InputCounter = /** @class */ (function () {
    function InputCounter(targetEl, incrementEl, decrementEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (incrementEl === void 0) { incrementEl = null; }
        if (decrementEl === void 0) { decrementEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._incrementEl = incrementEl;
        this._decrementEl = decrementEl;
        this._options = __assign(__assign({}, Default), options);
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('InputCounter', this, this._instanceId, instanceOptions.override);
    }
    InputCounter.prototype.init = function () {
        var _this = this;
        if (this._targetEl && !this._initialized) {
            this._inputHandler = function (event) {
                {
                    var target = event.target;
                    // check if the value is numeric
                    if (!/^\d*$/.test(target.value)) {
                        // Regex to check if the value is numeric
                        target.value = target.value.replace(/[^\d]/g, ''); // Remove non-numeric characters
                    }
                    // check for max value
                    if (_this._options.maxValue !== null &&
                        parseInt(target.value) > _this._options.maxValue) {
                        target.value = _this._options.maxValue.toString();
                    }
                    // check for min value
                    if (_this._options.minValue !== null &&
                        parseInt(target.value) < _this._options.minValue) {
                        target.value = _this._options.minValue.toString();
                    }
                }
            };
            this._incrementClickHandler = function () {
                _this.increment();
            };
            this._decrementClickHandler = function () {
                _this.decrement();
            };
            // Add event listener to restrict input to numeric values only
            this._targetEl.addEventListener('input', this._inputHandler);
            if (this._incrementEl) {
                this._incrementEl.addEventListener('click', this._incrementClickHandler);
            }
            if (this._decrementEl) {
                this._decrementEl.addEventListener('click', this._decrementClickHandler);
            }
            this._initialized = true;
        }
    };
    InputCounter.prototype.destroy = function () {
        if (this._targetEl && this._initialized) {
            this._targetEl.removeEventListener('input', this._inputHandler);
            if (this._incrementEl) {
                this._incrementEl.removeEventListener('click', this._incrementClickHandler);
            }
            if (this._decrementEl) {
                this._decrementEl.removeEventListener('click', this._decrementClickHandler);
            }
            this._initialized = false;
        }
    };
    InputCounter.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('InputCounter', this._instanceId);
    };
    InputCounter.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    InputCounter.prototype.getCurrentValue = function () {
        return parseInt(this._targetEl.value) || 0;
    };
    InputCounter.prototype.increment = function () {
        // don't increment if the value is already at the maximum value
        if (this._options.maxValue !== null &&
            this.getCurrentValue() >= this._options.maxValue) {
            return;
        }
        this._targetEl.value = (this.getCurrentValue() + 1).toString();
        this._options.onIncrement(this);
    };
    InputCounter.prototype.decrement = function () {
        // don't decrement if the value is already at the minimum value
        if (this._options.minValue !== null &&
            this.getCurrentValue() <= this._options.minValue) {
            return;
        }
        this._targetEl.value = (this.getCurrentValue() - 1).toString();
        this._options.onDecrement(this);
    };
    InputCounter.prototype.updateOnIncrement = function (callback) {
        this._options.onIncrement = callback;
    };
    InputCounter.prototype.updateOnDecrement = function (callback) {
        this._options.onDecrement = callback;
    };
    return InputCounter;
}());
function initInputCounters() {
    document.querySelectorAll('[data-input-counter]').forEach(function ($targetEl) {
        var targetId = $targetEl.id;
        var $incrementEl = document.querySelector('[data-input-counter-increment="' + targetId + '"]');
        var $decrementEl = document.querySelector('[data-input-counter-decrement="' + targetId + '"]');
        var minValue = $targetEl.getAttribute('data-input-counter-min');
        var maxValue = $targetEl.getAttribute('data-input-counter-max');
        // check if the target element exists
        if ($targetEl) {
            if (!_dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].instanceExists('InputCounter', $targetEl.getAttribute('id'))) {
                new InputCounter($targetEl, $incrementEl ? $incrementEl : null, $decrementEl ? $decrementEl : null, {
                    minValue: minValue ? parseInt(minValue) : null,
                    maxValue: maxValue ? parseInt(maxValue) : null,
                });
            }
        }
        else {
            console.error("The target element with id \"".concat(targetId, "\" does not exist. Please check the data-input-counter attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.InputCounter = InputCounter;
    window.initInputCounters = initInputCounters;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputCounter);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/input-counter/interface.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/input-counter/interface.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/input-counter/types.js":
/*!*************************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/input-counter/types.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/modal/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/modal/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initModals: () => (/* binding */ initModals)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    placement: 'center',
    backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',
    backdrop: 'dynamic',
    closable: true,
    onHide: function () { },
    onShow: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Modal = /** @class */ (function () {
    function Modal(targetEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._eventListenerInstances = [];
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._options = __assign(__assign({}, Default), options);
        this._isHidden = true;
        this._backdropEl = null;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Modal', this, this._instanceId, instanceOptions.override);
    }
    Modal.prototype.init = function () {
        var _this = this;
        if (this._targetEl && !this._initialized) {
            this._getPlacementClasses().map(function (c) {
                _this._targetEl.classList.add(c);
            });
            this._initialized = true;
        }
    };
    Modal.prototype.destroy = function () {
        if (this._initialized) {
            this.removeAllEventListenerInstances();
            this._destroyBackdropEl();
            this._initialized = false;
        }
    };
    Modal.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Modal', this._instanceId);
    };
    Modal.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Modal.prototype._createBackdrop = function () {
        var _a;
        if (this._isHidden) {
            var backdropEl = document.createElement('div');
            backdropEl.setAttribute('modal-backdrop', '');
            (_a = backdropEl.classList).add.apply(_a, this._options.backdropClasses.split(' '));
            document.querySelector('body').append(backdropEl);
            this._backdropEl = backdropEl;
        }
    };
    Modal.prototype._destroyBackdropEl = function () {
        if (!this._isHidden) {
            document.querySelector('[modal-backdrop]').remove();
        }
    };
    Modal.prototype._setupModalCloseEventListeners = function () {
        var _this = this;
        if (this._options.backdrop === 'dynamic') {
            this._clickOutsideEventListener = function (ev) {
                _this._handleOutsideClick(ev.target);
            };
            this._targetEl.addEventListener('click', this._clickOutsideEventListener, true);
        }
        this._keydownEventListener = function (ev) {
            if (ev.key === 'Escape') {
                _this.hide();
            }
        };
        document.body.addEventListener('keydown', this._keydownEventListener, true);
    };
    Modal.prototype._removeModalCloseEventListeners = function () {
        if (this._options.backdrop === 'dynamic') {
            this._targetEl.removeEventListener('click', this._clickOutsideEventListener, true);
        }
        document.body.removeEventListener('keydown', this._keydownEventListener, true);
    };
    Modal.prototype._handleOutsideClick = function (target) {
        if (target === this._targetEl ||
            (target === this._backdropEl && this.isVisible())) {
            this.hide();
        }
    };
    Modal.prototype._getPlacementClasses = function () {
        switch (this._options.placement) {
            // top
            case 'top-left':
                return ['justify-start', 'items-start'];
            case 'top-center':
                return ['justify-center', 'items-start'];
            case 'top-right':
                return ['justify-end', 'items-start'];
            // center
            case 'center-left':
                return ['justify-start', 'items-center'];
            case 'center':
                return ['justify-center', 'items-center'];
            case 'center-right':
                return ['justify-end', 'items-center'];
            // bottom
            case 'bottom-left':
                return ['justify-start', 'items-end'];
            case 'bottom-center':
                return ['justify-center', 'items-end'];
            case 'bottom-right':
                return ['justify-end', 'items-end'];
            default:
                return ['justify-center', 'items-center'];
        }
    };
    Modal.prototype.toggle = function () {
        if (this._isHidden) {
            this.show();
        }
        else {
            this.hide();
        }
        // callback function
        this._options.onToggle(this);
    };
    Modal.prototype.show = function () {
        if (this.isHidden) {
            this._targetEl.classList.add('flex');
            this._targetEl.classList.remove('hidden');
            this._targetEl.setAttribute('aria-modal', 'true');
            this._targetEl.setAttribute('role', 'dialog');
            this._targetEl.removeAttribute('aria-hidden');
            this._createBackdrop();
            this._isHidden = false;
            // Add keyboard event listener to the document
            if (this._options.closable) {
                this._setupModalCloseEventListeners();
            }
            // prevent body scroll
            document.body.classList.add('overflow-hidden');
            // callback function
            this._options.onShow(this);
        }
    };
    Modal.prototype.hide = function () {
        if (this.isVisible) {
            this._targetEl.classList.add('hidden');
            this._targetEl.classList.remove('flex');
            this._targetEl.setAttribute('aria-hidden', 'true');
            this._targetEl.removeAttribute('aria-modal');
            this._targetEl.removeAttribute('role');
            this._destroyBackdropEl();
            this._isHidden = true;
            // re-apply body scroll
            document.body.classList.remove('overflow-hidden');
            if (this._options.closable) {
                this._removeModalCloseEventListeners();
            }
            // callback function
            this._options.onHide(this);
        }
    };
    Modal.prototype.isVisible = function () {
        return !this._isHidden;
    };
    Modal.prototype.isHidden = function () {
        return this._isHidden;
    };
    Modal.prototype.addEventListenerInstance = function (element, type, handler) {
        this._eventListenerInstances.push({
            element: element,
            type: type,
            handler: handler,
        });
    };
    Modal.prototype.removeAllEventListenerInstances = function () {
        this._eventListenerInstances.map(function (eventListenerInstance) {
            eventListenerInstance.element.removeEventListener(eventListenerInstance.type, eventListenerInstance.handler);
        });
        this._eventListenerInstances = [];
    };
    Modal.prototype.getAllEventListenerInstances = function () {
        return this._eventListenerInstances;
    };
    Modal.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Modal.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Modal.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Modal;
}());
function initModals() {
    // initiate modal based on data-modal-target
    document.querySelectorAll('[data-modal-target]').forEach(function ($triggerEl) {
        var modalId = $triggerEl.getAttribute('data-modal-target');
        var $modalEl = document.getElementById(modalId);
        if ($modalEl) {
            var placement = $modalEl.getAttribute('data-modal-placement');
            var backdrop = $modalEl.getAttribute('data-modal-backdrop');
            new Modal($modalEl, {
                placement: placement ? placement : Default.placement,
                backdrop: backdrop ? backdrop : Default.backdrop,
            });
        }
        else {
            console.error("Modal with id ".concat(modalId, " does not exist. Are you sure that the data-modal-target attribute points to the correct modal id?."));
        }
    });
    // toggle modal visibility
    document.querySelectorAll('[data-modal-toggle]').forEach(function ($triggerEl) {
        var modalId = $triggerEl.getAttribute('data-modal-toggle');
        var $modalEl = document.getElementById(modalId);
        if ($modalEl) {
            var modal_1 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Modal', modalId);
            if (modal_1) {
                var toggleModal = function () {
                    modal_1.toggle();
                };
                $triggerEl.addEventListener('click', toggleModal);
                modal_1.addEventListenerInstance($triggerEl, 'click', toggleModal);
            }
            else {
                console.error("Modal with id ".concat(modalId, " has not been initialized. Please initialize it using the data-modal-target attribute."));
            }
        }
        else {
            console.error("Modal with id ".concat(modalId, " does not exist. Are you sure that the data-modal-toggle attribute points to the correct modal id?"));
        }
    });
    // show modal on click if exists based on id
    document.querySelectorAll('[data-modal-show]').forEach(function ($triggerEl) {
        var modalId = $triggerEl.getAttribute('data-modal-show');
        var $modalEl = document.getElementById(modalId);
        if ($modalEl) {
            var modal_2 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Modal', modalId);
            if (modal_2) {
                var showModal = function () {
                    modal_2.show();
                };
                $triggerEl.addEventListener('click', showModal);
                modal_2.addEventListenerInstance($triggerEl, 'click', showModal);
            }
            else {
                console.error("Modal with id ".concat(modalId, " has not been initialized. Please initialize it using the data-modal-target attribute."));
            }
        }
        else {
            console.error("Modal with id ".concat(modalId, " does not exist. Are you sure that the data-modal-show attribute points to the correct modal id?"));
        }
    });
    // hide modal on click if exists based on id
    document.querySelectorAll('[data-modal-hide]').forEach(function ($triggerEl) {
        var modalId = $triggerEl.getAttribute('data-modal-hide');
        var $modalEl = document.getElementById(modalId);
        if ($modalEl) {
            var modal_3 = _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].getInstance('Modal', modalId);
            if (modal_3) {
                var hideModal = function () {
                    modal_3.hide();
                };
                $triggerEl.addEventListener('click', hideModal);
                modal_3.addEventListenerInstance($triggerEl, 'click', hideModal);
            }
            else {
                console.error("Modal with id ".concat(modalId, " has not been initialized. Please initialize it using the data-modal-target attribute."));
            }
        }
        else {
            console.error("Modal with id ".concat(modalId, " does not exist. Are you sure that the data-modal-hide attribute points to the correct modal id?"));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Modal = Modal;
    window.initModals = initModals;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modal);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/modal/interface.js":
/*!*********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/modal/interface.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/modal/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/modal/types.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/popover/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/popover/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initPopovers: () => (/* binding */ initPopovers)
/* harmony export */ });
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
/* eslint-disable @typescript-eslint/no-empty-function */


var Default = {
    placement: 'top',
    offset: 10,
    triggerType: 'hover',
    onShow: function () { },
    onHide: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Popover = /** @class */ (function () {
    function Popover(targetEl, triggerEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (triggerEl === void 0) { triggerEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._triggerEl = triggerEl;
        this._options = __assign(__assign({}, Default), options);
        this._popperInstance = null;
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Popover', this, instanceOptions.id ? instanceOptions.id : this._targetEl.id, instanceOptions.override);
    }
    Popover.prototype.init = function () {
        if (this._triggerEl && this._targetEl && !this._initialized) {
            this._setupEventListeners();
            this._popperInstance = this._createPopperInstance();
            this._initialized = true;
        }
    };
    Popover.prototype.destroy = function () {
        var _this = this;
        if (this._initialized) {
            // remove event listeners associated with the trigger element and target element
            var triggerEvents = this._getTriggerEvents();
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._showHandler);
                _this._targetEl.removeEventListener(ev, _this._showHandler);
            });
            triggerEvents.hideEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._hideHandler);
                _this._targetEl.removeEventListener(ev, _this._hideHandler);
            });
            // remove event listeners for keydown
            this._removeKeydownListener();
            // remove event listeners for click outside
            this._removeClickOutsideListener();
            // destroy the Popper instance if you have one (assuming this._popperInstance is the Popper instance)
            if (this._popperInstance) {
                this._popperInstance.destroy();
            }
            this._initialized = false;
        }
    };
    Popover.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Popover', this._instanceId);
    };
    Popover.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Popover.prototype._setupEventListeners = function () {
        var _this = this;
        var triggerEvents = this._getTriggerEvents();
        this._showHandler = function () {
            _this.show();
        };
        this._hideHandler = function () {
            setTimeout(function () {
                if (!_this._targetEl.matches(':hover')) {
                    _this.hide();
                }
            }, 100);
        };
        triggerEvents.showEvents.forEach(function (ev) {
            _this._triggerEl.addEventListener(ev, _this._showHandler);
            _this._targetEl.addEventListener(ev, _this._showHandler);
        });
        triggerEvents.hideEvents.forEach(function (ev) {
            _this._triggerEl.addEventListener(ev, _this._hideHandler);
            _this._targetEl.addEventListener(ev, _this._hideHandler);
        });
    };
    Popover.prototype._createPopperInstance = function () {
        return (0,_popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper)(this._triggerEl, this._targetEl, {
            placement: this._options.placement,
            modifiers: [
                {
                    name: 'offset',
                    options: {
                        offset: [0, this._options.offset],
                    },
                },
            ],
        });
    };
    Popover.prototype._getTriggerEvents = function () {
        switch (this._options.triggerType) {
            case 'hover':
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
            case 'click':
                return {
                    showEvents: ['click', 'focus'],
                    hideEvents: ['focusout', 'blur'],
                };
            case 'none':
                return {
                    showEvents: [],
                    hideEvents: [],
                };
            default:
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
        }
    };
    Popover.prototype._setupKeydownListener = function () {
        var _this = this;
        this._keydownEventListener = function (ev) {
            if (ev.key === 'Escape') {
                _this.hide();
            }
        };
        document.body.addEventListener('keydown', this._keydownEventListener, true);
    };
    Popover.prototype._removeKeydownListener = function () {
        document.body.removeEventListener('keydown', this._keydownEventListener, true);
    };
    Popover.prototype._setupClickOutsideListener = function () {
        var _this = this;
        this._clickOutsideEventListener = function (ev) {
            _this._handleClickOutside(ev, _this._targetEl);
        };
        document.body.addEventListener('click', this._clickOutsideEventListener, true);
    };
    Popover.prototype._removeClickOutsideListener = function () {
        document.body.removeEventListener('click', this._clickOutsideEventListener, true);
    };
    Popover.prototype._handleClickOutside = function (ev, targetEl) {
        var clickedEl = ev.target;
        if (clickedEl !== targetEl &&
            !targetEl.contains(clickedEl) &&
            !this._triggerEl.contains(clickedEl) &&
            this.isVisible()) {
            this.hide();
        }
    };
    Popover.prototype.isVisible = function () {
        return this._visible;
    };
    Popover.prototype.toggle = function () {
        if (this.isVisible()) {
            this.hide();
        }
        else {
            this.show();
        }
        this._options.onToggle(this);
    };
    Popover.prototype.show = function () {
        this._targetEl.classList.remove('opacity-0', 'invisible');
        this._targetEl.classList.add('opacity-100', 'visible');
        // Enable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: true },
            ], false) })); });
        // handle click outside
        this._setupClickOutsideListener();
        // handle esc keydown
        this._setupKeydownListener();
        // Update its position
        this._popperInstance.update();
        // set visibility to true
        this._visible = true;
        // callback function
        this._options.onShow(this);
    };
    Popover.prototype.hide = function () {
        this._targetEl.classList.remove('opacity-100', 'visible');
        this._targetEl.classList.add('opacity-0', 'invisible');
        // Disable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: false },
            ], false) })); });
        // handle click outside
        this._removeClickOutsideListener();
        // handle esc keydown
        this._removeKeydownListener();
        // set visibility to false
        this._visible = false;
        // callback function
        this._options.onHide(this);
    };
    Popover.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Popover.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Popover.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Popover;
}());
function initPopovers() {
    document.querySelectorAll('[data-popover-target]').forEach(function ($triggerEl) {
        var popoverID = $triggerEl.getAttribute('data-popover-target');
        var $popoverEl = document.getElementById(popoverID);
        if ($popoverEl) {
            var triggerType = $triggerEl.getAttribute('data-popover-trigger');
            var placement = $triggerEl.getAttribute('data-popover-placement');
            var offset = $triggerEl.getAttribute('data-popover-offset');
            new Popover($popoverEl, $triggerEl, {
                placement: placement ? placement : Default.placement,
                offset: offset ? parseInt(offset) : Default.offset,
                triggerType: triggerType
                    ? triggerType
                    : Default.triggerType,
            });
        }
        else {
            console.error("The popover element with id \"".concat(popoverID, "\" does not exist. Please check the data-popover-target attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Popover = Popover;
    window.initPopovers = initPopovers;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Popover);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/popover/interface.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/popover/interface.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/popover/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/popover/types.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tabs/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tabs/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initTabs: () => (/* binding */ initTabs)
/* harmony export */ });
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var Default = {
    defaultTabId: null,
    activeClasses: 'text-blue-600 hover:text-blue-600 dark:text-blue-500 dark:hover:text-blue-500 border-blue-600 dark:border-blue-500',
    inactiveClasses: 'dark:border-transparent text-gray-500 hover:text-gray-600 dark:text-gray-400 border-gray-100 hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300',
    onShow: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Tabs = /** @class */ (function () {
    function Tabs(tabsEl, items, options, instanceOptions) {
        if (tabsEl === void 0) { tabsEl = null; }
        if (items === void 0) { items = []; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id ? instanceOptions.id : tabsEl.id;
        this._tabsEl = tabsEl;
        this._items = items;
        this._activeTab = options ? this.getTab(options.defaultTabId) : null;
        this._options = __assign(__assign({}, Default), options);
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Tabs', this, this._tabsEl.id, true);
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Tabs', this, this._instanceId, instanceOptions.override);
    }
    Tabs.prototype.init = function () {
        var _this = this;
        if (this._items.length && !this._initialized) {
            // set the first tab as active if not set by explicitly
            if (!this._activeTab) {
                this.setActiveTab(this._items[0]);
            }
            // force show the first default tab
            this.show(this._activeTab.id, true);
            // show tab content based on click
            this._items.map(function (tab) {
                tab.triggerEl.addEventListener('click', function (event) {
                    event.preventDefault();
                    _this.show(tab.id);
                });
            });
        }
    };
    Tabs.prototype.destroy = function () {
        if (this._initialized) {
            this._initialized = false;
        }
    };
    Tabs.prototype.removeInstance = function () {
        this.destroy();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Tabs', this._instanceId);
    };
    Tabs.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Tabs.prototype.getActiveTab = function () {
        return this._activeTab;
    };
    Tabs.prototype.setActiveTab = function (tab) {
        this._activeTab = tab;
    };
    Tabs.prototype.getTab = function (id) {
        return this._items.filter(function (t) { return t.id === id; })[0];
    };
    Tabs.prototype.show = function (id, forceShow) {
        var _a, _b;
        var _this = this;
        if (forceShow === void 0) { forceShow = false; }
        var tab = this.getTab(id);
        // don't do anything if already active
        if (tab === this._activeTab && !forceShow) {
            return;
        }
        // hide other tabs
        this._items.map(function (t) {
            var _a, _b;
            if (t !== tab) {
                (_a = t.triggerEl.classList).remove.apply(_a, _this._options.activeClasses.split(' '));
                (_b = t.triggerEl.classList).add.apply(_b, _this._options.inactiveClasses.split(' '));
                t.targetEl.classList.add('hidden');
                t.triggerEl.setAttribute('aria-selected', 'false');
            }
        });
        // show active tab
        (_a = tab.triggerEl.classList).add.apply(_a, this._options.activeClasses.split(' '));
        (_b = tab.triggerEl.classList).remove.apply(_b, this._options.inactiveClasses.split(' '));
        tab.triggerEl.setAttribute('aria-selected', 'true');
        tab.targetEl.classList.remove('hidden');
        this.setActiveTab(tab);
        // callback function
        this._options.onShow(this, tab);
    };
    Tabs.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    return Tabs;
}());
function initTabs() {
    document.querySelectorAll('[data-tabs-toggle]').forEach(function ($parentEl) {
        var tabItems = [];
        var activeClasses = $parentEl.getAttribute('data-tabs-active-classes');
        var inactiveClasses = $parentEl.getAttribute('data-tabs-inactive-classes');
        var defaultTabId = null;
        $parentEl
            .querySelectorAll('[role="tab"]')
            .forEach(function ($triggerEl) {
            var isActive = $triggerEl.getAttribute('aria-selected') === 'true';
            var tab = {
                id: $triggerEl.getAttribute('data-tabs-target'),
                triggerEl: $triggerEl,
                targetEl: document.querySelector($triggerEl.getAttribute('data-tabs-target')),
            };
            tabItems.push(tab);
            if (isActive) {
                defaultTabId = tab.id;
            }
        });
        new Tabs($parentEl, tabItems, {
            defaultTabId: defaultTabId,
            activeClasses: activeClasses
                ? activeClasses
                : Default.activeClasses,
            inactiveClasses: inactiveClasses
                ? inactiveClasses
                : Default.inactiveClasses,
        });
    });
}
if (typeof window !== 'undefined') {
    window.Tabs = Tabs;
    window.initTabs = initTabs;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tabs);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tabs/interface.js":
/*!********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tabs/interface.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tabs/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tabs/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tooltip/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tooltip/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   initTooltips: () => (/* binding */ initTooltips)
/* harmony export */ });
/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
/* harmony import */ var _dom_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/instances */ "./node_modules/flowbite/lib/esm/dom/instances.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
/* eslint-disable @typescript-eslint/no-empty-function */


var Default = {
    placement: 'top',
    triggerType: 'hover',
    onShow: function () { },
    onHide: function () { },
    onToggle: function () { },
};
var DefaultInstanceOptions = {
    id: null,
    override: true,
};
var Tooltip = /** @class */ (function () {
    function Tooltip(targetEl, triggerEl, options, instanceOptions) {
        if (targetEl === void 0) { targetEl = null; }
        if (triggerEl === void 0) { triggerEl = null; }
        if (options === void 0) { options = Default; }
        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }
        this._instanceId = instanceOptions.id
            ? instanceOptions.id
            : targetEl.id;
        this._targetEl = targetEl;
        this._triggerEl = triggerEl;
        this._options = __assign(__assign({}, Default), options);
        this._popperInstance = null;
        this._visible = false;
        this._initialized = false;
        this.init();
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].addInstance('Tooltip', this, this._instanceId, instanceOptions.override);
    }
    Tooltip.prototype.init = function () {
        if (this._triggerEl && this._targetEl && !this._initialized) {
            this._setupEventListeners();
            this._popperInstance = this._createPopperInstance();
            this._initialized = true;
        }
    };
    Tooltip.prototype.destroy = function () {
        var _this = this;
        if (this._initialized) {
            // remove event listeners associated with the trigger element
            var triggerEvents = this._getTriggerEvents();
            triggerEvents.showEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._showHandler);
            });
            triggerEvents.hideEvents.forEach(function (ev) {
                _this._triggerEl.removeEventListener(ev, _this._hideHandler);
            });
            // remove event listeners for keydown
            this._removeKeydownListener();
            // remove event listeners for click outside
            this._removeClickOutsideListener();
            // destroy the Popper instance if you have one (assuming this._popperInstance is the Popper instance)
            if (this._popperInstance) {
                this._popperInstance.destroy();
            }
            this._initialized = false;
        }
    };
    Tooltip.prototype.removeInstance = function () {
        _dom_instances__WEBPACK_IMPORTED_MODULE_0__["default"].removeInstance('Tooltip', this._instanceId);
    };
    Tooltip.prototype.destroyAndRemoveInstance = function () {
        this.destroy();
        this.removeInstance();
    };
    Tooltip.prototype._setupEventListeners = function () {
        var _this = this;
        var triggerEvents = this._getTriggerEvents();
        this._showHandler = function () {
            _this.show();
        };
        this._hideHandler = function () {
            _this.hide();
        };
        triggerEvents.showEvents.forEach(function (ev) {
            _this._triggerEl.addEventListener(ev, _this._showHandler);
        });
        triggerEvents.hideEvents.forEach(function (ev) {
            _this._triggerEl.addEventListener(ev, _this._hideHandler);
        });
    };
    Tooltip.prototype._createPopperInstance = function () {
        return (0,_popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper)(this._triggerEl, this._targetEl, {
            placement: this._options.placement,
            modifiers: [
                {
                    name: 'offset',
                    options: {
                        offset: [0, 8],
                    },
                },
            ],
        });
    };
    Tooltip.prototype._getTriggerEvents = function () {
        switch (this._options.triggerType) {
            case 'hover':
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
            case 'click':
                return {
                    showEvents: ['click', 'focus'],
                    hideEvents: ['focusout', 'blur'],
                };
            case 'none':
                return {
                    showEvents: [],
                    hideEvents: [],
                };
            default:
                return {
                    showEvents: ['mouseenter', 'focus'],
                    hideEvents: ['mouseleave', 'blur'],
                };
        }
    };
    Tooltip.prototype._setupKeydownListener = function () {
        var _this = this;
        this._keydownEventListener = function (ev) {
            if (ev.key === 'Escape') {
                _this.hide();
            }
        };
        document.body.addEventListener('keydown', this._keydownEventListener, true);
    };
    Tooltip.prototype._removeKeydownListener = function () {
        document.body.removeEventListener('keydown', this._keydownEventListener, true);
    };
    Tooltip.prototype._setupClickOutsideListener = function () {
        var _this = this;
        this._clickOutsideEventListener = function (ev) {
            _this._handleClickOutside(ev, _this._targetEl);
        };
        document.body.addEventListener('click', this._clickOutsideEventListener, true);
    };
    Tooltip.prototype._removeClickOutsideListener = function () {
        document.body.removeEventListener('click', this._clickOutsideEventListener, true);
    };
    Tooltip.prototype._handleClickOutside = function (ev, targetEl) {
        var clickedEl = ev.target;
        if (clickedEl !== targetEl &&
            !targetEl.contains(clickedEl) &&
            !this._triggerEl.contains(clickedEl) &&
            this.isVisible()) {
            this.hide();
        }
    };
    Tooltip.prototype.isVisible = function () {
        return this._visible;
    };
    Tooltip.prototype.toggle = function () {
        if (this.isVisible()) {
            this.hide();
        }
        else {
            this.show();
        }
    };
    Tooltip.prototype.show = function () {
        this._targetEl.classList.remove('opacity-0', 'invisible');
        this._targetEl.classList.add('opacity-100', 'visible');
        // Enable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: true },
            ], false) })); });
        // handle click outside
        this._setupClickOutsideListener();
        // handle esc keydown
        this._setupKeydownListener();
        // Update its position
        this._popperInstance.update();
        // set visibility
        this._visible = true;
        // callback function
        this._options.onShow(this);
    };
    Tooltip.prototype.hide = function () {
        this._targetEl.classList.remove('opacity-100', 'visible');
        this._targetEl.classList.add('opacity-0', 'invisible');
        // Disable the event listeners
        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [
                { name: 'eventListeners', enabled: false },
            ], false) })); });
        // handle click outside
        this._removeClickOutsideListener();
        // handle esc keydown
        this._removeKeydownListener();
        // set visibility
        this._visible = false;
        // callback function
        this._options.onHide(this);
    };
    Tooltip.prototype.updateOnShow = function (callback) {
        this._options.onShow = callback;
    };
    Tooltip.prototype.updateOnHide = function (callback) {
        this._options.onHide = callback;
    };
    Tooltip.prototype.updateOnToggle = function (callback) {
        this._options.onToggle = callback;
    };
    return Tooltip;
}());
function initTooltips() {
    document.querySelectorAll('[data-tooltip-target]').forEach(function ($triggerEl) {
        var tooltipId = $triggerEl.getAttribute('data-tooltip-target');
        var $tooltipEl = document.getElementById(tooltipId);
        if ($tooltipEl) {
            var triggerType = $triggerEl.getAttribute('data-tooltip-trigger');
            var placement = $triggerEl.getAttribute('data-tooltip-placement');
            new Tooltip($tooltipEl, $triggerEl, {
                placement: placement ? placement : Default.placement,
                triggerType: triggerType
                    ? triggerType
                    : Default.triggerType,
            });
        }
        else {
            console.error("The tooltip element with id \"".concat(tooltipId, "\" does not exist. Please check the data-tooltip-target attribute."));
        }
    });
}
if (typeof window !== 'undefined') {
    window.Tooltip = Tooltip;
    window.initTooltips = initTooltips;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tooltip);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tooltip/interface.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tooltip/interface.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=interface.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/components/tooltip/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/components/tooltip/types.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/dom/events.js":
/*!*****************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/dom/events.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var Events = /** @class */ (function () {
    function Events(eventType, eventFunctions) {
        if (eventFunctions === void 0) { eventFunctions = []; }
        this._eventType = eventType;
        this._eventFunctions = eventFunctions;
    }
    Events.prototype.init = function () {
        var _this = this;
        this._eventFunctions.forEach(function (eventFunction) {
            if (typeof window !== 'undefined') {
                window.addEventListener(_this._eventType, eventFunction);
            }
        });
    };
    return Events;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Events);
//# sourceMappingURL=events.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/dom/instances.js":
/*!********************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/dom/instances.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var Instances = /** @class */ (function () {
    function Instances() {
        this._instances = {
            Accordion: {},
            Carousel: {},
            Collapse: {},
            Dial: {},
            Dismiss: {},
            Drawer: {},
            Dropdown: {},
            Modal: {},
            Popover: {},
            Tabs: {},
            Tooltip: {},
            InputCounter: {},
            CopyClipboard: {},
        };
    }
    Instances.prototype.addInstance = function (component, instance, id, override) {
        if (override === void 0) { override = false; }
        if (!this._instances[component]) {
            console.warn("Flowbite: Component ".concat(component, " does not exist."));
            return false;
        }
        if (this._instances[component][id] && !override) {
            console.warn("Flowbite: Instance with ID ".concat(id, " already exists."));
            return;
        }
        if (override && this._instances[component][id]) {
            this._instances[component][id].destroyAndRemoveInstance();
        }
        this._instances[component][id ? id : this._generateRandomId()] =
            instance;
    };
    Instances.prototype.getAllInstances = function () {
        return this._instances;
    };
    Instances.prototype.getInstances = function (component) {
        if (!this._instances[component]) {
            console.warn("Flowbite: Component ".concat(component, " does not exist."));
            return false;
        }
        return this._instances[component];
    };
    Instances.prototype.getInstance = function (component, id) {
        if (!this._componentAndInstanceCheck(component, id)) {
            return;
        }
        if (!this._instances[component][id]) {
            console.warn("Flowbite: Instance with ID ".concat(id, " does not exist."));
            return;
        }
        return this._instances[component][id];
    };
    Instances.prototype.destroyAndRemoveInstance = function (component, id) {
        if (!this._componentAndInstanceCheck(component, id)) {
            return;
        }
        this.destroyInstanceObject(component, id);
        this.removeInstance(component, id);
    };
    Instances.prototype.removeInstance = function (component, id) {
        if (!this._componentAndInstanceCheck(component, id)) {
            return;
        }
        delete this._instances[component][id];
    };
    Instances.prototype.destroyInstanceObject = function (component, id) {
        if (!this._componentAndInstanceCheck(component, id)) {
            return;
        }
        this._instances[component][id].destroy();
    };
    Instances.prototype.instanceExists = function (component, id) {
        if (!this._instances[component]) {
            return false;
        }
        if (!this._instances[component][id]) {
            return false;
        }
        return true;
    };
    Instances.prototype._generateRandomId = function () {
        return Math.random().toString(36).substr(2, 9);
    };
    Instances.prototype._componentAndInstanceCheck = function (component, id) {
        if (!this._instances[component]) {
            console.warn("Flowbite: Component ".concat(component, " does not exist."));
            return false;
        }
        if (!this._instances[component][id]) {
            console.warn("Flowbite: Instance with ID ".concat(id, " does not exist."));
            return false;
        }
        return true;
    };
    return Instances;
}());
var instances = new Instances();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instances);
if (typeof window !== 'undefined') {
    window.FlowbiteInstances = instances;
}
//# sourceMappingURL=instances.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/dom/types.js":
/*!****************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/dom/types.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);

//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/flowbite/lib/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/flowbite/lib/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordion: () => (/* reexport safe */ _components_accordion__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   Carousel: () => (/* reexport safe */ _components_carousel__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   Collapse: () => (/* reexport safe */ _components_collapse__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   CopyClipboard: () => (/* reexport safe */ _components_clipboard__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   Dial: () => (/* reexport safe */ _components_dial__WEBPACK_IMPORTED_MODULE_11__["default"]),
/* harmony export */   Dismiss: () => (/* reexport safe */ _components_dismiss__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   Drawer: () => (/* reexport safe */ _components_drawer__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   Dropdown: () => (/* reexport safe */ _components_dropdown__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   InputCounter: () => (/* reexport safe */ _components_input_counter__WEBPACK_IMPORTED_MODULE_12__["default"]),
/* harmony export */   Modal: () => (/* reexport safe */ _components_modal__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   Popover: () => (/* reexport safe */ _components_popover__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   Tabs: () => (/* reexport safe */ _components_tabs__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   Tooltip: () => (/* reexport safe */ _components_tooltip__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   initAccordions: () => (/* reexport safe */ _components_accordion__WEBPACK_IMPORTED_MODULE_1__.initAccordions),
/* harmony export */   initCarousels: () => (/* reexport safe */ _components_carousel__WEBPACK_IMPORTED_MODULE_3__.initCarousels),
/* harmony export */   initCollapses: () => (/* reexport safe */ _components_collapse__WEBPACK_IMPORTED_MODULE_2__.initCollapses),
/* harmony export */   initCopyClipboards: () => (/* reexport safe */ _components_clipboard__WEBPACK_IMPORTED_MODULE_13__.initCopyClipboards),
/* harmony export */   initDials: () => (/* reexport safe */ _components_dial__WEBPACK_IMPORTED_MODULE_11__.initDials),
/* harmony export */   initDismisses: () => (/* reexport safe */ _components_dismiss__WEBPACK_IMPORTED_MODULE_4__.initDismisses),
/* harmony export */   initDrawers: () => (/* reexport safe */ _components_drawer__WEBPACK_IMPORTED_MODULE_7__.initDrawers),
/* harmony export */   initDropdowns: () => (/* reexport safe */ _components_dropdown__WEBPACK_IMPORTED_MODULE_5__.initDropdowns),
/* harmony export */   initFlowbite: () => (/* reexport safe */ _components_index__WEBPACK_IMPORTED_MODULE_14__.initFlowbite),
/* harmony export */   initInputCounters: () => (/* reexport safe */ _components_input_counter__WEBPACK_IMPORTED_MODULE_12__.initInputCounters),
/* harmony export */   initModals: () => (/* reexport safe */ _components_modal__WEBPACK_IMPORTED_MODULE_6__.initModals),
/* harmony export */   initPopovers: () => (/* reexport safe */ _components_popover__WEBPACK_IMPORTED_MODULE_10__.initPopovers),
/* harmony export */   initTabs: () => (/* reexport safe */ _components_tabs__WEBPACK_IMPORTED_MODULE_8__.initTabs),
/* harmony export */   initTooltips: () => (/* reexport safe */ _components_tooltip__WEBPACK_IMPORTED_MODULE_9__.initTooltips)
/* harmony export */ });
/* harmony import */ var _dom_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/events */ "./node_modules/flowbite/lib/esm/dom/events.js");
/* harmony import */ var _components_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/accordion */ "./node_modules/flowbite/lib/esm/components/accordion/index.js");
/* harmony import */ var _components_collapse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/collapse */ "./node_modules/flowbite/lib/esm/components/collapse/index.js");
/* harmony import */ var _components_carousel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/carousel */ "./node_modules/flowbite/lib/esm/components/carousel/index.js");
/* harmony import */ var _components_dismiss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/dismiss */ "./node_modules/flowbite/lib/esm/components/dismiss/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/dropdown */ "./node_modules/flowbite/lib/esm/components/dropdown/index.js");
/* harmony import */ var _components_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/modal */ "./node_modules/flowbite/lib/esm/components/modal/index.js");
/* harmony import */ var _components_drawer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/drawer */ "./node_modules/flowbite/lib/esm/components/drawer/index.js");
/* harmony import */ var _components_tabs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/tabs */ "./node_modules/flowbite/lib/esm/components/tabs/index.js");
/* harmony import */ var _components_tooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/tooltip */ "./node_modules/flowbite/lib/esm/components/tooltip/index.js");
/* harmony import */ var _components_popover__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/popover */ "./node_modules/flowbite/lib/esm/components/popover/index.js");
/* harmony import */ var _components_dial__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/dial */ "./node_modules/flowbite/lib/esm/components/dial/index.js");
/* harmony import */ var _components_input_counter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/input-counter */ "./node_modules/flowbite/lib/esm/components/input-counter/index.js");
/* harmony import */ var _components_clipboard__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/clipboard */ "./node_modules/flowbite/lib/esm/components/clipboard/index.js");
/* harmony import */ var _components_index__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/index */ "./node_modules/flowbite/lib/esm/components/index.js");
/* harmony import */ var _components_accordion_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/accordion/types */ "./node_modules/flowbite/lib/esm/components/accordion/types.js");
/* harmony import */ var _components_carousel_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/carousel/types */ "./node_modules/flowbite/lib/esm/components/carousel/types.js");
/* harmony import */ var _components_collapse_types__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/collapse/types */ "./node_modules/flowbite/lib/esm/components/collapse/types.js");
/* harmony import */ var _components_dial_types__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/dial/types */ "./node_modules/flowbite/lib/esm/components/dial/types.js");
/* harmony import */ var _components_dismiss_types__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/dismiss/types */ "./node_modules/flowbite/lib/esm/components/dismiss/types.js");
/* harmony import */ var _components_drawer_types__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/drawer/types */ "./node_modules/flowbite/lib/esm/components/drawer/types.js");
/* harmony import */ var _components_dropdown_types__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/dropdown/types */ "./node_modules/flowbite/lib/esm/components/dropdown/types.js");
/* harmony import */ var _components_modal_types__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/modal/types */ "./node_modules/flowbite/lib/esm/components/modal/types.js");
/* harmony import */ var _components_popover_types__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/popover/types */ "./node_modules/flowbite/lib/esm/components/popover/types.js");
/* harmony import */ var _components_tabs_types__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/tabs/types */ "./node_modules/flowbite/lib/esm/components/tabs/types.js");
/* harmony import */ var _components_tooltip_types__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/tooltip/types */ "./node_modules/flowbite/lib/esm/components/tooltip/types.js");
/* harmony import */ var _components_input_counter_types__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/input-counter/types */ "./node_modules/flowbite/lib/esm/components/input-counter/types.js");
/* harmony import */ var _components_clipboard_types__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/clipboard/types */ "./node_modules/flowbite/lib/esm/components/clipboard/types.js");
/* harmony import */ var _dom_types__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./dom/types */ "./node_modules/flowbite/lib/esm/dom/types.js");
/* harmony import */ var _components_accordion_interface__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/accordion/interface */ "./node_modules/flowbite/lib/esm/components/accordion/interface.js");
/* harmony import */ var _components_carousel_interface__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/carousel/interface */ "./node_modules/flowbite/lib/esm/components/carousel/interface.js");
/* harmony import */ var _components_collapse_interface__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/collapse/interface */ "./node_modules/flowbite/lib/esm/components/collapse/interface.js");
/* harmony import */ var _components_dial_interface__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/dial/interface */ "./node_modules/flowbite/lib/esm/components/dial/interface.js");
/* harmony import */ var _components_dismiss_interface__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/dismiss/interface */ "./node_modules/flowbite/lib/esm/components/dismiss/interface.js");
/* harmony import */ var _components_drawer_interface__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/drawer/interface */ "./node_modules/flowbite/lib/esm/components/drawer/interface.js");
/* harmony import */ var _components_dropdown_interface__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/dropdown/interface */ "./node_modules/flowbite/lib/esm/components/dropdown/interface.js");
/* harmony import */ var _components_modal_interface__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/modal/interface */ "./node_modules/flowbite/lib/esm/components/modal/interface.js");
/* harmony import */ var _components_popover_interface__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/popover/interface */ "./node_modules/flowbite/lib/esm/components/popover/interface.js");
/* harmony import */ var _components_tabs_interface__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/tabs/interface */ "./node_modules/flowbite/lib/esm/components/tabs/interface.js");
/* harmony import */ var _components_tooltip_interface__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/tooltip/interface */ "./node_modules/flowbite/lib/esm/components/tooltip/interface.js");
/* harmony import */ var _components_input_counter_interface__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/input-counter/interface */ "./node_modules/flowbite/lib/esm/components/input-counter/interface.js");
/* harmony import */ var _components_clipboard_interface__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/clipboard/interface */ "./node_modules/flowbite/lib/esm/components/clipboard/interface.js");















// setup events for data attributes
var events = new _dom_events__WEBPACK_IMPORTED_MODULE_0__["default"]('load', [
    _components_accordion__WEBPACK_IMPORTED_MODULE_1__.initAccordions,
    _components_collapse__WEBPACK_IMPORTED_MODULE_2__.initCollapses,
    _components_carousel__WEBPACK_IMPORTED_MODULE_3__.initCarousels,
    _components_dismiss__WEBPACK_IMPORTED_MODULE_4__.initDismisses,
    _components_dropdown__WEBPACK_IMPORTED_MODULE_5__.initDropdowns,
    _components_modal__WEBPACK_IMPORTED_MODULE_6__.initModals,
    _components_drawer__WEBPACK_IMPORTED_MODULE_7__.initDrawers,
    _components_tabs__WEBPACK_IMPORTED_MODULE_8__.initTabs,
    _components_tooltip__WEBPACK_IMPORTED_MODULE_9__.initTooltips,
    _components_popover__WEBPACK_IMPORTED_MODULE_10__.initPopovers,
    _components_dial__WEBPACK_IMPORTED_MODULE_11__.initDials,
    _components_input_counter__WEBPACK_IMPORTED_MODULE_12__.initInputCounters,
    _components_clipboard__WEBPACK_IMPORTED_MODULE_13__.initCopyClipboards,
]);
events.init();
// export all components













// export all types














// export all interfaces













// export init functions













// export all init functions

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/preline/dist/preline.js":
/*!**********************************************!*\
  !*** ./node_modules/preline/dist/preline.js ***!
  \**********************************************/
/***/ ((module) => {

!function(t,e){if(true)module.exports=e();else { var o, n; }}(self,(()=>(()=>{"use strict";var t={492:(t,e,n)=>{n.r(e),n.d(e,{afterMain:()=>S,afterRead:()=>w,afterWrite:()=>T,applyStyles:()=>P,arrow:()=>Q,auto:()=>l,basePlacements:()=>a,beforeMain:()=>b,beforeRead:()=>y,beforeWrite:()=>x,bottom:()=>i,clippingParents:()=>d,computeStyles:()=>nt,createPopper:()=>Pt,createPopperBase:()=>_t,createPopperLite:()=>Bt,detectOverflow:()=>gt,end:()=>u,eventListeners:()=>it,flip:()=>wt,hide:()=>St,left:()=>s,main:()=>C,modifierPhases:()=>E,offset:()=>xt,placements:()=>v,popper:()=>h,popperGenerator:()=>kt,popperOffsets:()=>It,preventOverflow:()=>Tt,read:()=>g,reference:()=>f,right:()=>r,start:()=>c,top:()=>o,variationPlacements:()=>m,viewport:()=>p,write:()=>I});var o="top",i="bottom",r="right",s="left",l="auto",a=[o,i,r,s],c="start",u="end",d="clippingParents",p="viewport",h="popper",f="reference",m=a.reduce((function(t,e){return t.concat([e+"-"+c,e+"-"+u])}),[]),v=[].concat(a,[l]).reduce((function(t,e){return t.concat([e,e+"-"+c,e+"-"+u])}),[]),y="beforeRead",g="read",w="afterRead",b="beforeMain",C="main",S="afterMain",x="beforeWrite",I="write",T="afterWrite",E=[y,g,w,b,C,S,x,I,T];function O(t){return t?(t.nodeName||"").toLowerCase():null}function L(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function A(t){return t instanceof L(t).Element||t instanceof Element}function k(t){return t instanceof L(t).HTMLElement||t instanceof HTMLElement}function _(t){return"undefined"!=typeof ShadowRoot&&(t instanceof L(t).ShadowRoot||t instanceof ShadowRoot)}const P={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var n=e.styles[t]||{},o=e.attributes[t]||{},i=e.elements[t];k(i)&&O(i)&&(Object.assign(i.style,n),Object.keys(o).forEach((function(t){var e=o[t];!1===e?i.removeAttribute(t):i.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,n={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,n.popper),e.styles=n,e.elements.arrow&&Object.assign(e.elements.arrow.style,n.arrow),function(){Object.keys(e.elements).forEach((function(t){var o=e.elements[t],i=e.attributes[t]||{},r=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:n[t]).reduce((function(t,e){return t[e]="",t}),{});k(o)&&O(o)&&(Object.assign(o.style,r),Object.keys(i).forEach((function(t){o.removeAttribute(t)})))}))}},requires:["computeStyles"]};function B(t){return t.split("-")[0]}var q=Math.max,N=Math.min,j=Math.round;function $(){var t=navigator.userAgentData;return null!=t&&t.brands&&Array.isArray(t.brands)?t.brands.map((function(t){return t.brand+"/"+t.version})).join(" "):navigator.userAgent}function D(){return!/^((?!chrome|android).)*safari/i.test($())}function H(t,e,n){void 0===e&&(e=!1),void 0===n&&(n=!1);var o=t.getBoundingClientRect(),i=1,r=1;e&&k(t)&&(i=t.offsetWidth>0&&j(o.width)/t.offsetWidth||1,r=t.offsetHeight>0&&j(o.height)/t.offsetHeight||1);var s=(A(t)?L(t):window).visualViewport,l=!D()&&n,a=(o.left+(l&&s?s.offsetLeft:0))/i,c=(o.top+(l&&s?s.offsetTop:0))/r,u=o.width/i,d=o.height/r;return{width:u,height:d,top:c,right:a+u,bottom:c+d,left:a,x:a,y:c}}function M(t){var e=H(t),n=t.offsetWidth,o=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-o)<=1&&(o=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:o}}function R(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&_(n)){var o=e;do{if(o&&t.isSameNode(o))return!0;o=o.parentNode||o.host}while(o)}return!1}function W(t){return L(t).getComputedStyle(t)}function V(t){return["table","td","th"].indexOf(O(t))>=0}function F(t){return((A(t)?t.ownerDocument:t.document)||window.document).documentElement}function U(t){return"html"===O(t)?t:t.assignedSlot||t.parentNode||(_(t)?t.host:null)||F(t)}function J(t){return k(t)&&"fixed"!==W(t).position?t.offsetParent:null}function Y(t){for(var e=L(t),n=J(t);n&&V(n)&&"static"===W(n).position;)n=J(n);return n&&("html"===O(n)||"body"===O(n)&&"static"===W(n).position)?e:n||function(t){var e=/firefox/i.test($());if(/Trident/i.test($())&&k(t)&&"fixed"===W(t).position)return null;var n=U(t);for(_(n)&&(n=n.host);k(n)&&["html","body"].indexOf(O(n))<0;){var o=W(n);if("none"!==o.transform||"none"!==o.perspective||"paint"===o.contain||-1!==["transform","perspective"].indexOf(o.willChange)||e&&"filter"===o.willChange||e&&o.filter&&"none"!==o.filter)return n;n=n.parentNode}return null}(t)||e}function K(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function G(t,e,n){return q(t,N(e,n))}function z(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function X(t,e){return e.reduce((function(e,n){return e[n]=t,e}),{})}const Q={name:"arrow",enabled:!0,phase:"main",fn:function(t){var e,n=t.state,l=t.name,c=t.options,u=n.elements.arrow,d=n.modifiersData.popperOffsets,p=B(n.placement),h=K(p),f=[s,r].indexOf(p)>=0?"height":"width";if(u&&d){var m=function(t,e){return z("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:X(t,a))}(c.padding,n),v=M(u),y="y"===h?o:s,g="y"===h?i:r,w=n.rects.reference[f]+n.rects.reference[h]-d[h]-n.rects.popper[f],b=d[h]-n.rects.reference[h],C=Y(u),S=C?"y"===h?C.clientHeight||0:C.clientWidth||0:0,x=w/2-b/2,I=m[y],T=S-v[f]-m[g],E=S/2-v[f]/2+x,O=G(I,E,T),L=h;n.modifiersData[l]=((e={})[L]=O,e.centerOffset=O-E,e)}},effect:function(t){var e=t.state,n=t.options.element,o=void 0===n?"[data-popper-arrow]":n;null!=o&&("string"!=typeof o||(o=e.elements.popper.querySelector(o)))&&R(e.elements.popper,o)&&(e.elements.arrow=o)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Z(t){return t.split("-")[1]}var tt={top:"auto",right:"auto",bottom:"auto",left:"auto"};function et(t){var e,n=t.popper,l=t.popperRect,a=t.placement,c=t.variation,d=t.offsets,p=t.position,h=t.gpuAcceleration,f=t.adaptive,m=t.roundOffsets,v=t.isFixed,y=d.x,g=void 0===y?0:y,w=d.y,b=void 0===w?0:w,C="function"==typeof m?m({x:g,y:b}):{x:g,y:b};g=C.x,b=C.y;var S=d.hasOwnProperty("x"),x=d.hasOwnProperty("y"),I=s,T=o,E=window;if(f){var O=Y(n),A="clientHeight",k="clientWidth";if(O===L(n)&&"static"!==W(O=F(n)).position&&"absolute"===p&&(A="scrollHeight",k="scrollWidth"),a===o||(a===s||a===r)&&c===u)T=i,b-=(v&&O===E&&E.visualViewport?E.visualViewport.height:O[A])-l.height,b*=h?1:-1;if(a===s||(a===o||a===i)&&c===u)I=r,g-=(v&&O===E&&E.visualViewport?E.visualViewport.width:O[k])-l.width,g*=h?1:-1}var _,P=Object.assign({position:p},f&&tt),B=!0===m?function(t,e){var n=t.x,o=t.y,i=e.devicePixelRatio||1;return{x:j(n*i)/i||0,y:j(o*i)/i||0}}({x:g,y:b},L(n)):{x:g,y:b};return g=B.x,b=B.y,h?Object.assign({},P,((_={})[T]=x?"0":"",_[I]=S?"0":"",_.transform=(E.devicePixelRatio||1)<=1?"translate("+g+"px, "+b+"px)":"translate3d("+g+"px, "+b+"px, 0)",_)):Object.assign({},P,((e={})[T]=x?b+"px":"",e[I]=S?g+"px":"",e.transform="",e))}const nt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,n=t.options,o=n.gpuAcceleration,i=void 0===o||o,r=n.adaptive,s=void 0===r||r,l=n.roundOffsets,a=void 0===l||l,c={placement:B(e.placement),variation:Z(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:i,isFixed:"fixed"===e.options.strategy};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,et(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:s,roundOffsets:a})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,et(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:a})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}};var ot={passive:!0};const it={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,n=t.instance,o=t.options,i=o.scroll,r=void 0===i||i,s=o.resize,l=void 0===s||s,a=L(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return r&&c.forEach((function(t){t.addEventListener("scroll",n.update,ot)})),l&&a.addEventListener("resize",n.update,ot),function(){r&&c.forEach((function(t){t.removeEventListener("scroll",n.update,ot)})),l&&a.removeEventListener("resize",n.update,ot)}},data:{}};var rt={left:"right",right:"left",bottom:"top",top:"bottom"};function st(t){return t.replace(/left|right|bottom|top/g,(function(t){return rt[t]}))}var lt={start:"end",end:"start"};function at(t){return t.replace(/start|end/g,(function(t){return lt[t]}))}function ct(t){var e=L(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function ut(t){return H(F(t)).left+ct(t).scrollLeft}function dt(t){var e=W(t),n=e.overflow,o=e.overflowX,i=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+i+o)}function pt(t){return["html","body","#document"].indexOf(O(t))>=0?t.ownerDocument.body:k(t)&&dt(t)?t:pt(U(t))}function ht(t,e){var n;void 0===e&&(e=[]);var o=pt(t),i=o===(null==(n=t.ownerDocument)?void 0:n.body),r=L(o),s=i?[r].concat(r.visualViewport||[],dt(o)?o:[]):o,l=e.concat(s);return i?l:l.concat(ht(U(s)))}function ft(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function mt(t,e,n){return e===p?ft(function(t,e){var n=L(t),o=F(t),i=n.visualViewport,r=o.clientWidth,s=o.clientHeight,l=0,a=0;if(i){r=i.width,s=i.height;var c=D();(c||!c&&"fixed"===e)&&(l=i.offsetLeft,a=i.offsetTop)}return{width:r,height:s,x:l+ut(t),y:a}}(t,n)):A(e)?function(t,e){var n=H(t,!1,"fixed"===e);return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}(e,n):ft(function(t){var e,n=F(t),o=ct(t),i=null==(e=t.ownerDocument)?void 0:e.body,r=q(n.scrollWidth,n.clientWidth,i?i.scrollWidth:0,i?i.clientWidth:0),s=q(n.scrollHeight,n.clientHeight,i?i.scrollHeight:0,i?i.clientHeight:0),l=-o.scrollLeft+ut(t),a=-o.scrollTop;return"rtl"===W(i||n).direction&&(l+=q(n.clientWidth,i?i.clientWidth:0)-r),{width:r,height:s,x:l,y:a}}(F(t)))}function vt(t,e,n,o){var i="clippingParents"===e?function(t){var e=ht(U(t)),n=["absolute","fixed"].indexOf(W(t).position)>=0&&k(t)?Y(t):t;return A(n)?e.filter((function(t){return A(t)&&R(t,n)&&"body"!==O(t)})):[]}(t):[].concat(e),r=[].concat(i,[n]),s=r[0],l=r.reduce((function(e,n){var i=mt(t,n,o);return e.top=q(i.top,e.top),e.right=N(i.right,e.right),e.bottom=N(i.bottom,e.bottom),e.left=q(i.left,e.left),e}),mt(t,s,o));return l.width=l.right-l.left,l.height=l.bottom-l.top,l.x=l.left,l.y=l.top,l}function yt(t){var e,n=t.reference,l=t.element,a=t.placement,d=a?B(a):null,p=a?Z(a):null,h=n.x+n.width/2-l.width/2,f=n.y+n.height/2-l.height/2;switch(d){case o:e={x:h,y:n.y-l.height};break;case i:e={x:h,y:n.y+n.height};break;case r:e={x:n.x+n.width,y:f};break;case s:e={x:n.x-l.width,y:f};break;default:e={x:n.x,y:n.y}}var m=d?K(d):null;if(null!=m){var v="y"===m?"height":"width";switch(p){case c:e[m]=e[m]-(n[v]/2-l[v]/2);break;case u:e[m]=e[m]+(n[v]/2-l[v]/2)}}return e}function gt(t,e){void 0===e&&(e={});var n=e,s=n.placement,l=void 0===s?t.placement:s,c=n.strategy,u=void 0===c?t.strategy:c,m=n.boundary,v=void 0===m?d:m,y=n.rootBoundary,g=void 0===y?p:y,w=n.elementContext,b=void 0===w?h:w,C=n.altBoundary,S=void 0!==C&&C,x=n.padding,I=void 0===x?0:x,T=z("number"!=typeof I?I:X(I,a)),E=b===h?f:h,O=t.rects.popper,L=t.elements[S?E:b],k=vt(A(L)?L:L.contextElement||F(t.elements.popper),v,g,u),_=H(t.elements.reference),P=yt({reference:_,element:O,strategy:"absolute",placement:l}),B=ft(Object.assign({},O,P)),q=b===h?B:_,N={top:k.top-q.top+T.top,bottom:q.bottom-k.bottom+T.bottom,left:k.left-q.left+T.left,right:q.right-k.right+T.right},j=t.modifiersData.offset;if(b===h&&j){var $=j[l];Object.keys(N).forEach((function(t){var e=[r,i].indexOf(t)>=0?1:-1,n=[o,i].indexOf(t)>=0?"y":"x";N[t]+=$[n]*e}))}return N}const wt={name:"flip",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,u=t.name;if(!e.modifiersData[u]._skip){for(var d=n.mainAxis,p=void 0===d||d,h=n.altAxis,f=void 0===h||h,y=n.fallbackPlacements,g=n.padding,w=n.boundary,b=n.rootBoundary,C=n.altBoundary,S=n.flipVariations,x=void 0===S||S,I=n.allowedAutoPlacements,T=e.options.placement,E=B(T),O=y||(E===T||!x?[st(T)]:function(t){if(B(t)===l)return[];var e=st(t);return[at(t),e,at(e)]}(T)),L=[T].concat(O).reduce((function(t,n){return t.concat(B(n)===l?function(t,e){void 0===e&&(e={});var n=e,o=n.placement,i=n.boundary,r=n.rootBoundary,s=n.padding,l=n.flipVariations,c=n.allowedAutoPlacements,u=void 0===c?v:c,d=Z(o),p=d?l?m:m.filter((function(t){return Z(t)===d})):a,h=p.filter((function(t){return u.indexOf(t)>=0}));0===h.length&&(h=p);var f=h.reduce((function(e,n){return e[n]=gt(t,{placement:n,boundary:i,rootBoundary:r,padding:s})[B(n)],e}),{});return Object.keys(f).sort((function(t,e){return f[t]-f[e]}))}(e,{placement:n,boundary:w,rootBoundary:b,padding:g,flipVariations:x,allowedAutoPlacements:I}):n)}),[]),A=e.rects.reference,k=e.rects.popper,_=new Map,P=!0,q=L[0],N=0;N<L.length;N++){var j=L[N],$=B(j),D=Z(j)===c,H=[o,i].indexOf($)>=0,M=H?"width":"height",R=gt(e,{placement:j,boundary:w,rootBoundary:b,altBoundary:C,padding:g}),W=H?D?r:s:D?i:o;A[M]>k[M]&&(W=st(W));var V=st(W),F=[];if(p&&F.push(R[$]<=0),f&&F.push(R[W]<=0,R[V]<=0),F.every((function(t){return t}))){q=j,P=!1;break}_.set(j,F)}if(P)for(var U=function(t){var e=L.find((function(e){var n=_.get(e);if(n)return n.slice(0,t).every((function(t){return t}))}));if(e)return q=e,"break"},J=x?3:1;J>0;J--){if("break"===U(J))break}e.placement!==q&&(e.modifiersData[u]._skip=!0,e.placement=q,e.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function bt(t,e,n){return void 0===n&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function Ct(t){return[o,r,i,s].some((function(e){return t[e]>=0}))}const St={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,n=t.name,o=e.rects.reference,i=e.rects.popper,r=e.modifiersData.preventOverflow,s=gt(e,{elementContext:"reference"}),l=gt(e,{altBoundary:!0}),a=bt(s,o),c=bt(l,i,r),u=Ct(a),d=Ct(c);e.modifiersData[n]={referenceClippingOffsets:a,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:d},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":d})}};const xt={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var e=t.state,n=t.options,i=t.name,l=n.offset,a=void 0===l?[0,0]:l,c=v.reduce((function(t,n){return t[n]=function(t,e,n){var i=B(t),l=[s,o].indexOf(i)>=0?-1:1,a="function"==typeof n?n(Object.assign({},e,{placement:t})):n,c=a[0],u=a[1];return c=c||0,u=(u||0)*l,[s,r].indexOf(i)>=0?{x:u,y:c}:{x:c,y:u}}(n,e.rects,a),t}),{}),u=c[e.placement],d=u.x,p=u.y;null!=e.modifiersData.popperOffsets&&(e.modifiersData.popperOffsets.x+=d,e.modifiersData.popperOffsets.y+=p),e.modifiersData[i]=c}};const It={name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,n=t.name;e.modifiersData[n]=yt({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}};const Tt={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var e=t.state,n=t.options,l=t.name,a=n.mainAxis,u=void 0===a||a,d=n.altAxis,p=void 0!==d&&d,h=n.boundary,f=n.rootBoundary,m=n.altBoundary,v=n.padding,y=n.tether,g=void 0===y||y,w=n.tetherOffset,b=void 0===w?0:w,C=gt(e,{boundary:h,rootBoundary:f,padding:v,altBoundary:m}),S=B(e.placement),x=Z(e.placement),I=!x,T=K(S),E="x"===T?"y":"x",O=e.modifiersData.popperOffsets,L=e.rects.reference,A=e.rects.popper,k="function"==typeof b?b(Object.assign({},e.rects,{placement:e.placement})):b,_="number"==typeof k?{mainAxis:k,altAxis:k}:Object.assign({mainAxis:0,altAxis:0},k),P=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,j={x:0,y:0};if(O){if(u){var $,D="y"===T?o:s,H="y"===T?i:r,R="y"===T?"height":"width",W=O[T],V=W+C[D],F=W-C[H],U=g?-A[R]/2:0,J=x===c?L[R]:A[R],z=x===c?-A[R]:-L[R],X=e.elements.arrow,Q=g&&X?M(X):{width:0,height:0},tt=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},et=tt[D],nt=tt[H],ot=G(0,L[R],Q[R]),it=I?L[R]/2-U-ot-et-_.mainAxis:J-ot-et-_.mainAxis,rt=I?-L[R]/2+U+ot+nt+_.mainAxis:z+ot+nt+_.mainAxis,st=e.elements.arrow&&Y(e.elements.arrow),lt=st?"y"===T?st.clientTop||0:st.clientLeft||0:0,at=null!=($=null==P?void 0:P[T])?$:0,ct=W+rt-at,ut=G(g?N(V,W+it-at-lt):V,W,g?q(F,ct):F);O[T]=ut,j[T]=ut-W}if(p){var dt,pt="x"===T?o:s,ht="x"===T?i:r,ft=O[E],mt="y"===E?"height":"width",vt=ft+C[pt],yt=ft-C[ht],wt=-1!==[o,s].indexOf(S),bt=null!=(dt=null==P?void 0:P[E])?dt:0,Ct=wt?vt:ft-L[mt]-A[mt]-bt+_.altAxis,St=wt?ft+L[mt]+A[mt]-bt-_.altAxis:yt,xt=g&&wt?function(t,e,n){var o=G(t,e,n);return o>n?n:o}(Ct,ft,St):G(g?Ct:vt,ft,g?St:yt);O[E]=xt,j[E]=xt-ft}e.modifiersData[l]=j}},requiresIfExists:["offset"]};function Et(t,e,n){void 0===n&&(n=!1);var o,i,r=k(e),s=k(e)&&function(t){var e=t.getBoundingClientRect(),n=j(e.width)/t.offsetWidth||1,o=j(e.height)/t.offsetHeight||1;return 1!==n||1!==o}(e),l=F(e),a=H(t,s,n),c={scrollLeft:0,scrollTop:0},u={x:0,y:0};return(r||!r&&!n)&&(("body"!==O(e)||dt(l))&&(c=(o=e)!==L(o)&&k(o)?{scrollLeft:(i=o).scrollLeft,scrollTop:i.scrollTop}:ct(o)),k(e)?((u=H(e,!0)).x+=e.clientLeft,u.y+=e.clientTop):l&&(u.x=ut(l))),{x:a.left+c.scrollLeft-u.x,y:a.top+c.scrollTop-u.y,width:a.width,height:a.height}}function Ot(t){var e=new Map,n=new Set,o=[];function i(t){n.add(t.name),[].concat(t.requires||[],t.requiresIfExists||[]).forEach((function(t){if(!n.has(t)){var o=e.get(t);o&&i(o)}})),o.push(t)}return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){n.has(t.name)||i(t)})),o}var Lt={placement:"bottom",modifiers:[],strategy:"absolute"};function At(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function kt(t){void 0===t&&(t={});var e=t,n=e.defaultModifiers,o=void 0===n?[]:n,i=e.defaultOptions,r=void 0===i?Lt:i;return function(t,e,n){void 0===n&&(n=r);var i,s,l={placement:"bottom",orderedModifiers:[],options:Object.assign({},Lt,r),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},a=[],c=!1,u={state:l,setOptions:function(n){var i="function"==typeof n?n(l.options):n;d(),l.options=Object.assign({},r,l.options,i),l.scrollParents={reference:A(t)?ht(t):t.contextElement?ht(t.contextElement):[],popper:ht(e)};var s,c,p=function(t){var e=Ot(t);return E.reduce((function(t,n){return t.concat(e.filter((function(t){return t.phase===n})))}),[])}((s=[].concat(o,l.options.modifiers),c=s.reduce((function(t,e){var n=t[e.name];return t[e.name]=n?Object.assign({},n,e,{options:Object.assign({},n.options,e.options),data:Object.assign({},n.data,e.data)}):e,t}),{}),Object.keys(c).map((function(t){return c[t]}))));return l.orderedModifiers=p.filter((function(t){return t.enabled})),l.orderedModifiers.forEach((function(t){var e=t.name,n=t.options,o=void 0===n?{}:n,i=t.effect;if("function"==typeof i){var r=i({state:l,name:e,instance:u,options:o}),s=function(){};a.push(r||s)}})),u.update()},forceUpdate:function(){if(!c){var t=l.elements,e=t.reference,n=t.popper;if(At(e,n)){l.rects={reference:Et(e,Y(n),"fixed"===l.options.strategy),popper:M(n)},l.reset=!1,l.placement=l.options.placement,l.orderedModifiers.forEach((function(t){return l.modifiersData[t.name]=Object.assign({},t.data)}));for(var o=0;o<l.orderedModifiers.length;o++)if(!0!==l.reset){var i=l.orderedModifiers[o],r=i.fn,s=i.options,a=void 0===s?{}:s,d=i.name;"function"==typeof r&&(l=r({state:l,options:a,name:d,instance:u})||l)}else l.reset=!1,o=-1}}},update:(i=function(){return new Promise((function(t){u.forceUpdate(),t(l)}))},function(){return s||(s=new Promise((function(t){Promise.resolve().then((function(){s=void 0,t(i())}))}))),s}),destroy:function(){d(),c=!0}};if(!At(t,e))return u;function d(){a.forEach((function(t){return t()})),a=[]}return u.setOptions(n).then((function(t){!c&&n.onFirstUpdate&&n.onFirstUpdate(t)})),u}}var _t=kt(),Pt=kt({defaultModifiers:[it,It,nt,P,xt,wt,Tt,Q,St]}),Bt=kt({defaultModifiers:[it,It,nt,P]})},190:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BREAKPOINTS=e.COMBO_BOX_ACCESSIBILITY_KEY_SET=e.SELECT_ACCESSIBILITY_KEY_SET=e.TABS_ACCESSIBILITY_KEY_SET=e.OVERLAY_ACCESSIBILITY_KEY_SET=e.DROPDOWN_ACCESSIBILITY_KEY_SET=e.POSITIONS=void 0,e.POSITIONS={auto:"auto","auto-start":"auto-start","auto-end":"auto-end",top:"top","top-left":"top-start","top-right":"top-end",bottom:"bottom","bottom-left":"bottom-start","bottom-right":"bottom-end",right:"right","right-start":"right-start","right-end":"right-end",left:"left","left-start":"left-start","left-end":"left-end"},e.DROPDOWN_ACCESSIBILITY_KEY_SET=["Escape","ArrowUp","ArrowDown","Home","End","Enter"],e.OVERLAY_ACCESSIBILITY_KEY_SET=["Escape","Tab"],e.TABS_ACCESSIBILITY_KEY_SET=["ArrowUp","ArrowLeft","ArrowDown","ArrowRight","Home","End"],e.SELECT_ACCESSIBILITY_KEY_SET=["ArrowUp","ArrowLeft","ArrowDown","ArrowRight","Home","End","Escape","Enter","Tab"],e.COMBO_BOX_ACCESSIBILITY_KEY_SET=["ArrowUp","ArrowLeft","ArrowDown","ArrowRight","Home","End","Escape","Enter"],e.BREAKPOINTS={sm:640,md:768,lg:1024,xl:1280,"2xl":1536}},460:function(t,e,n){
/*
 * HSAccordion
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var r=n(969),s=function(t){function e(e,n,o){var i=t.call(this,e,n,o)||this;return i.toggle=i.el.querySelector(".hs-accordion-toggle")||null,i.content=i.el.querySelector(".hs-accordion-content")||null,i.group=i.el.closest(".hs-accordion-group")||null,i.isAlwaysOpened=i.group.hasAttribute("data-hs-accordion-always-open")||!1,i.toggle&&i.content&&i.init(),i}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsAccordionCollection,this),this.toggle.addEventListener("click",(function(){t.el.classList.contains("active")?t.hide():t.show()}))},e.prototype.show=function(){var t=this;this.group&&!this.isAlwaysOpened&&this.group.querySelector(".hs-accordion.active")&&this.group.querySelector(".hs-accordion.active")!==this.el&&window.$hsAccordionCollection.find((function(e){return e.element.el===t.group.querySelector(".hs-accordion.active")})).element.hide();if(this.el.classList.contains("active"))return!1;this.el.classList.add("active"),this.content.style.display="block",this.content.style.height="0",setTimeout((function(){t.content.style.height="".concat(t.content.scrollHeight,"px")})),(0,r.afterTransition)(this.content,(function(){t.content.style.display="block",t.content.style.height="",t.fireEvent("open",t.el),(0,r.dispatch)("open.hs.accordion",t.el,t.el)}))},e.prototype.hide=function(){var t=this;if(!this.el.classList.contains("active"))return!1;this.el.classList.remove("active"),this.content.style.height="".concat(this.content.scrollHeight,"px"),setTimeout((function(){t.content.style.height="0"})),(0,r.afterTransition)(this.content,(function(){t.content.style.display="",t.content.style.height="0",t.fireEvent("close",t.el),(0,r.dispatch)("close.hs.accordion",t.el,t.el)}))},e.getInstance=function(t,e){var n=window.$hsAccordionCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.show=function(t){var e=window.$hsAccordionCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&"block"!==e.element.content.style.display&&e.element.show()},e.hide=function(t){var e=window.$hsAccordionCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&"block"===e.element.content.style.display&&e.element.hide()},e.autoInit=function(){window.$hsAccordionCollection||(window.$hsAccordionCollection=[]),document.querySelectorAll(".hs-accordion:not(.--prevent-on-load-init)").forEach((function(t){window.$hsAccordionCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e.on=function(t,e,n){var o=window.$hsAccordionCollection.find((function(t){return t.element.el===("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),"undefined"!=typeof window&&(window.HSAccordion=s),e.default=s},737:(t,e)=>{
/*
 * HSBasePlugin
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,n){this.el=t,this.options=e,this.events=n,this.el=t,this.options=e,this.events={}}return t.prototype.createCollection=function(t,e){var n;t.push({id:(null===(n=null==e?void 0:e.el)||void 0===n?void 0:n.id)||t.length+1,element:e})},t.prototype.fireEvent=function(t,e){if(void 0===e&&(e=null),this.events.hasOwnProperty(t))return this.events[t](e)},t.prototype.on=function(t,e){this.events[t]=e},t}();e.default=n},629:function(t,e,n){
/*
 * HSCarousel
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=function(t){function e(e,n){var o,i,s,l=t.call(this,e,n)||this,a=e.getAttribute("data-hs-carousel"),c=a?JSON.parse(a):{},u=r(r({},c),n);return l.currentIndex=u.currentIndex||0,l.loadingClasses=u.loadingClasses?"".concat(u.loadingClasses).split(","):null,l.loadingClassesRemove=(null===(o=l.loadingClasses)||void 0===o?void 0:o[0])?l.loadingClasses[0].split(" "):"opacity-0",l.loadingClassesAdd=(null===(i=l.loadingClasses)||void 0===i?void 0:i[1])?l.loadingClasses[1].split(" "):"",l.afterLoadingClassesAdd=(null===(s=l.loadingClasses)||void 0===s?void 0:s[2])?l.loadingClasses[2].split(" "):"",l.isAutoPlay=void 0!==u.isAutoPlay&&u.isAutoPlay,l.speed=u.speed||4e3,l.isInfiniteLoop=void 0===u.isInfiniteLoop||u.isInfiniteLoop,l.inner=l.el.querySelector(".hs-carousel-body")||null,l.slides=l.el.querySelectorAll(".hs-carousel-slide")||[],l.prev=l.el.querySelector(".hs-carousel-prev")||null,l.next=l.el.querySelector(".hs-carousel-next")||null,l.dots=l.el.querySelectorAll(".hs-carousel-pagination > *")||null,l.sliderWidth=l.inner.parentElement.clientWidth,l.touchX={start:0,end:0},l.init(),l}return i(e,t),e.prototype.init=function(){var t,e,n=this;this.createCollection(window.$hsCarouselCollection,this),this.inner&&(this.calculateWidth(),this.loadingClassesRemove&&("string"==typeof this.loadingClassesRemove?this.inner.classList.remove(this.loadingClassesRemove):(t=this.inner.classList).remove.apply(t,this.loadingClassesRemove)),this.loadingClassesAdd&&("string"==typeof this.loadingClassesAdd?this.inner.classList.add(this.loadingClassesAdd):(e=this.inner.classList).add.apply(e,this.loadingClassesAdd))),this.prev&&this.prev.addEventListener("click",(function(){n.goToPrev(),n.isAutoPlay&&(n.resetTimer(),n.setTimer())})),this.next&&this.next.addEventListener("click",(function(){n.goToNext(),n.isAutoPlay&&(n.resetTimer(),n.setTimer())})),this.dots&&this.dots.forEach((function(t,e){return t.addEventListener("click",(function(){n.goTo(e),n.isAutoPlay&&(n.resetTimer(),n.setTimer())}))})),this.slides.length&&(this.addCurrentClass(),this.isInfiniteLoop||this.addDisabledClass(),this.isAutoPlay&&this.autoPlay()),this.inner&&this.afterLoadingClassesAdd&&setTimeout((function(){var t;"string"==typeof n.afterLoadingClassesAdd?n.inner.classList.add(n.afterLoadingClassesAdd):(t=n.inner.classList).add.apply(t,n.afterLoadingClassesAdd)})),this.el.classList.add("init"),this.el.addEventListener("touchstart",(function(t){n.touchX.start=t.changedTouches[0].screenX})),this.el.addEventListener("touchend",(function(t){n.touchX.end=t.changedTouches[0].screenX,n.detectDirection()})),this.observeResize()},e.prototype.observeResize=function(){var t=this;new ResizeObserver((function(){return t.recalculateWidth()})).observe(document.querySelector("body"))},e.prototype.calculateWidth=function(){var t=this;this.inner.style.width="".concat(this.sliderWidth*this.slides.length,"px"),this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.slides.forEach((function(e){e.style.width="".concat(t.sliderWidth,"px")}))},e.prototype.addCurrentClass=function(){var t=this;this.slides.forEach((function(e,n){n===t.currentIndex?e.classList.add("active"):e.classList.remove("active")})),this.dots&&this.dots.forEach((function(e,n){n===t.currentIndex?e.classList.add("active"):e.classList.remove("active")}))},e.prototype.addDisabledClass=function(){if(!this.prev||!this.next)return!1;0===this.currentIndex?(this.next.classList.remove("disabled"),this.prev.classList.add("disabled")):this.currentIndex===this.slides.length-1?(this.prev.classList.remove("disabled"),this.next.classList.add("disabled")):(this.prev.classList.remove("disabled"),this.next.classList.remove("disabled"))},e.prototype.autoPlay=function(){this.setTimer()},e.prototype.setTimer=function(){var t=this;this.timer=setInterval((function(){t.currentIndex===t.slides.length-1?t.goTo(0):t.goToNext()}),this.speed)},e.prototype.resetTimer=function(){clearInterval(this.timer)},e.prototype.detectDirection=function(){var t=this.touchX,e=t.start,n=t.end;n<e&&this.goToNext(),n>e&&this.goToPrev()},e.prototype.recalculateWidth=function(){this.sliderWidth=this.inner.parentElement.clientWidth,this.calculateWidth()},e.prototype.goToPrev=function(){0===this.currentIndex&&this.isInfiniteLoop?(this.currentIndex=this.slides.length-1,this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.addCurrentClass()):0!==this.currentIndex&&(this.currentIndex-=1,this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.addCurrentClass(),this.addDisabledClass())},e.prototype.goToNext=function(){this.currentIndex===this.slides.length-1&&this.isInfiniteLoop?(this.currentIndex=0,this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.addCurrentClass()):this.currentIndex<this.slides.length-1&&(this.currentIndex+=1,this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.addCurrentClass(),this.addDisabledClass())},e.prototype.goTo=function(t){this.currentIndex=t,this.inner.style.transform="translate(-".concat(this.currentIndex*this.sliderWidth,"px, 0px)"),this.addCurrentClass(),this.isInfiniteLoop||this.addDisabledClass()},e.getInstance=function(t,e){var n=window.$hsCarouselCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsCarouselCollection||(window.$hsCarouselCollection=[]),document.querySelectorAll("[data-hs-carousel]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsCarouselCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),window.addEventListener("resize",(function(){if(!window.$hsCarouselCollection)return!1;window.$hsCarouselCollection.forEach((function(t){t.element.recalculateWidth()}))})),"undefined"!=typeof window&&(window.HSCarousel=s),e.default=s},652:function(t,e,n){
/*
 * HSCollapse
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var r=n(969),s=function(t){function e(e,n,o){var i=t.call(this,e,n,o)||this;return i.contentId=i.el.dataset.hsCollapse,i.content=document.querySelector(i.contentId),i.animationInProcess=!1,i.content&&i.init(),i}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsCollapseCollection,this),this.el.addEventListener("click",(function(){t.content.classList.contains("open")?t.hide():t.show()}))},e.prototype.hideAllMegaMenuItems=function(){this.content.querySelectorAll(".hs-mega-menu-content.block").forEach((function(t){t.classList.remove("block"),t.classList.add("hidden")}))},e.prototype.show=function(){var t=this;if(this.animationInProcess||this.el.classList.contains("open"))return!1;this.animationInProcess=!0,this.el.classList.add("open"),this.content.classList.add("open"),this.content.classList.remove("hidden"),this.content.style.height="0",setTimeout((function(){t.content.style.height="".concat(t.content.scrollHeight,"px"),t.fireEvent("beforeOpen",t.el),(0,r.dispatch)("beforeOpen.hs.collapse",t.el,t.el)})),(0,r.afterTransition)(this.content,(function(){t.content.style.height="",t.fireEvent("open",t.el),(0,r.dispatch)("open.hs.collapse",t.el,t.el),t.animationInProcess=!1}))},e.prototype.hide=function(){var t=this;if(this.animationInProcess||!this.el.classList.contains("open"))return!1;this.animationInProcess=!0,this.el.classList.remove("open"),this.content.style.height="".concat(this.content.scrollHeight,"px"),setTimeout((function(){t.content.style.height="0"})),this.content.classList.remove("open"),(0,r.afterTransition)(this.content,(function(){t.content.classList.add("hidden"),t.content.style.height="",t.fireEvent("hide",t.el),(0,r.dispatch)("hide.hs.collapse",t.el,t.el),t.animationInProcess=!1})),this.content.querySelectorAll(".hs-mega-menu-content.block").length&&this.hideAllMegaMenuItems()},e.getInstance=function(t,e){void 0===e&&(e=!1);var n=window.$hsCollapseCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.autoInit=function(){window.$hsCollapseCollection||(window.$hsCollapseCollection=[]),document.querySelectorAll(".hs-collapse-toggle:not(.--prevent-on-load-init)").forEach((function(t){window.$hsCollapseCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e.show=function(t){var e=window.$hsCollapseCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.content.classList.contains("hidden")&&e.element.show()},e.hide=function(t){var e=window.$hsCollapseCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&!e.element.content.classList.contains("hidden")&&e.element.hide()},e.on=function(t,e,n){var o=window.$hsCollapseCollection.find((function(t){return t.element.el===("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),"undefined"!=typeof window&&(window.HSCollapse=s),e.default=s},23:function(t,e,n){
/*
 * HSComboBox
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},s=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{a(o.next(t))}catch(t){r(t)}}function l(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}a((o=o.apply(t,e||[])).next())}))},l=this&&this.__generator||function(t,e){var n,o,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function l(l){return function(a){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,l[0]&&(s=0)),s;)try{if(n=1,o&&(i=2&l[0]?o.return:l[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,l[1])).done)return i;switch(o=0,i&&(l=[2&l[0],i.value]),l[0]){case 0:case 1:i=l;break;case 4:return s.label++,{value:l[1],done:!1};case 5:s.label++,o=l[1],l=[0];continue;case 7:l=s.ops.pop(),s.trys.pop();continue;default:if(!(i=s.trys,(i=i.length>0&&i[i.length-1])||6!==l[0]&&2!==l[0])){s=0;continue}if(3===l[0]&&(!i||l[1]>i[0]&&l[1]<i[3])){s.label=l[1];break}if(6===l[0]&&s.label<i[1]){s.label=i[1],i=l;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(l);break}i[2]&&s.ops.pop(),s.trys.pop();continue}l=e.call(t,s)}catch(t){l=[6,t],o=0}finally{n=i=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,a])}}},a=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var o,i=0,r=e.length;i<r;i++)!o&&i in e||(o||(o=Array.prototype.slice.call(e,0,i)),o[i]=e[i]);return t.concat(o||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0});var c=n(969),u=n(737),d=n(190),p=function(t){function e(e,n){var o,i,s,l,a,c,u,d,p,h,f,m,v,y,g,w,b,C,S,x,I,T,E=t.call(this,e,n)||this,O=e.getAttribute("data-hs-combo-box"),L=O?JSON.parse(O):{},A=r(r({},L),n);return E.gap=5,E.viewport=null!==(o="string"==typeof(null==A?void 0:A.viewport)?document.querySelector(null==A?void 0:A.viewport):null==A?void 0:A.viewport)&&void 0!==o?o:null,E.preventVisibility=null!==(i=null==A?void 0:A.preventVisibility)&&void 0!==i&&i,E.apiUrl=null!==(s=null==A?void 0:A.apiUrl)&&void 0!==s?s:null,E.apiDataPart=null!==(l=null==A?void 0:A.apiDataPart)&&void 0!==l?l:null,E.apiQuery=null!==(a=null==A?void 0:A.apiQuery)&&void 0!==a?a:null,E.apiSearchQuery=null!==(c=null==A?void 0:A.apiSearchQuery)&&void 0!==c?c:null,E.apiHeaders=null!==(u=null==A?void 0:A.apiHeaders)&&void 0!==u?u:{},E.apiGroupField=null!==(d=null==A?void 0:A.apiGroupField)&&void 0!==d?d:null,E.outputItemTemplate=null!==(p=null==A?void 0:A.outputItemTemplate)&&void 0!==p?p:'<div class="cursor-pointer py-2 px-4 w-full text-sm text-gray-800 hover:bg-gray-100 rounded-lg focus:outline-none focus:bg-gray-100 dark:bg-slate-900 dark:hover:bg-slate-800 dark:text-gray-200 dark:focus:bg-slate-800" data-hs-combo-box-output-item>\n\t\t\t<div class="flex justify-between items-center w-full">\n\t\t\t\t<span data-hs-combo-box-search-text></span>\n\t\t\t\t<span class="hidden hs-combo-box-selected:block">\n\t\t\t\t\t<svg class="flex-shrink-0 size-3.5 text-blue-600 dark:text-blue-500" xmlns="http:.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n\t\t\t\t\t\t<polyline points="20 6 9 17 4 12"></polyline>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>',E.outputEmptyTemplate=null!==(h=null==A?void 0:A.outputEmptyTemplate)&&void 0!==h?h:'<div class="py-2 px-4 w-full text-sm text-gray-800 rounded-lg dark:bg-slate-900 dark:text-gray-200">Nothing found...</div>',E.outputLoaderTemplate=null!==(f=null==A?void 0:A.outputLoaderTemplate)&&void 0!==f?f:'<div class="flex justify-center items-center py-2 px-4 text-sm text-gray-800 rounded-lg bg-white dark:bg-slate-900 dark:text-gray-200">\n\t\t\t\t<div class="animate-spin inline-block size-6 border-[3px] border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500" role="status" aria-label="loading">\n\t\t\t\t\t<span class="sr-only">Loading...</span>\n\t\t\t\t</div>\n\t\t\t</div>',E.groupingType=null!==(m=null==A?void 0:A.groupingType)&&void 0!==m?m:null,E.groupingTitleTemplate=null!==(v=null==A?void 0:A.groupingTitleTemplate)&&void 0!==v?v:"default"===E.groupingType?'<div class="block mb-1 text-xs font-semibold uppercase text-blue-600 dark:text-blue-500"></div>':'<button type="button" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-semibold whitespace-nowrap rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"></button>',E.tabsWrapperTemplate=null!==(y=null==A?void 0:A.tabsWrapperTemplate)&&void 0!==y?y:'<div class="overflow-x-auto p-4"></div>',E.preventSelection=null!==(g=null==A?void 0:A.preventSelection)&&void 0!==g&&g,E.isOpenOnFocus=null!==(w=null==A?void 0:A.isOpenOnFocus)&&void 0!==w&&w,E.input=null!==(b=E.el.querySelector("[data-hs-combo-box-input]"))&&void 0!==b?b:null,E.output=null!==(C=E.el.querySelector("[data-hs-combo-box-output]"))&&void 0!==C?C:null,E.itemsWrapper=null!==(S=E.el.querySelector("[data-hs-combo-box-output-items-wrapper]"))&&void 0!==S?S:null,E.items=null!==(x=Array.from(E.el.querySelectorAll("[data-hs-combo-box-output-item]")))&&void 0!==x?x:[],E.tabs=[],E.toggle=null!==(I=E.el.querySelector("[data-hs-combo-box-toggle]"))&&void 0!==I?I:null,E.outputPlaceholder=null,E.selected=E.value=null!==(T=E.el.querySelector("[data-hs-combo-box-input]").value)&&void 0!==T?T:"",E.isOpened=!1,E.isCurrent=!1,E.animationInProcess=!1,E.selectedGroup="all",E.init(),E}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsComboBoxCollection,this),this.build()},e.prototype.build=function(){this.buildInput(),this.groupingType&&this.setGroups(),this.buildItems(),this.preventVisibility&&(this.isOpened=!0,this.recalculateDirection()),this.toggle&&this.buildToggle()},e.prototype.setResultAndRender=function(t){void 0===t&&(t=""),this.setResults(t),this.apiSearchQuery&&this.itemsFromJson()},e.prototype.buildInput=function(){var t=this;this.isOpenOnFocus&&this.input.addEventListener("focus",(function(){t.isOpened||(t.setResultAndRender(),t.open())})),this.input.addEventListener("input",(0,c.debounce)((function(e){t.setResultAndRender(e.target.value),t.isOpened||t.open()})))},e.prototype.buildItems=function(){this.apiUrl?this.itemsFromJson():(this.itemsWrapper?this.itemsWrapper.innerHTML="":this.output.innerHTML="",this.itemsFromHtml())},e.prototype.setResults=function(t){this.value=t,this.resultItems(),this.hasVisibleItems()?this.destroyOutputPlaceholder():this.buildOutputPlaceholder()},e.prototype.isItemExists=function(t){return this.items.some((function(e){return Array.from(e.querySelectorAll("[data-hs-combo-box-search-text]")).some((function(e){return e.getAttribute("data-hs-combo-box-search-text")===t[e.getAttribute("data-hs-combo-box-output-item-field")]}))}))},e.prototype.isTextExists=function(t,e){var n=e.map((function(t){return t.toLowerCase()}));return Array.from(t.querySelectorAll("[data-hs-combo-box-search-text]")).some((function(t){return n.includes(t.getAttribute("data-hs-combo-box-search-text").toLowerCase())}))},e.prototype.isTextExistsAny=function(t,e){return Array.from(t.querySelectorAll("[data-hs-combo-box-search-text]")).some((function(t){return t.getAttribute("data-hs-combo-box-search-text").toLowerCase().includes(e.toLowerCase())}))},e.prototype.valuesBySelector=function(t){return Array.from(t.querySelectorAll("[data-hs-combo-box-search-text]")).reduce((function(t,e){return a(a([],t,!0),[e.getAttribute("data-hs-combo-box-search-text")],!1)}),[])},e.prototype.buildOutputLoader=function(){if(this.outputLoader)return!1;this.outputLoader=(0,c.htmlToElement)(this.outputLoaderTemplate),this.items.length||this.outputPlaceholder?(this.outputLoader.style.position="absolute",this.outputLoader.style.top="0",this.outputLoader.style.bottom="0",this.outputLoader.style.left="0",this.outputLoader.style.right="0",this.outputLoader.style.zIndex="2"):(this.outputLoader.style.position="",this.outputLoader.style.top="",this.outputLoader.style.bottom="",this.outputLoader.style.left="",this.outputLoader.style.right="",this.outputLoader.style.zIndex="",this.outputLoader.style.height="30px"),this.output.append(this.outputLoader)},e.prototype.destroyOutputLoader=function(){this.outputLoader&&this.outputLoader.remove(),this.outputLoader=null},e.prototype.itemsFromJson=function(){return s(this,void 0,void 0,(function(){var t,e,n,o,i,r=this;return l(this,(function(s){switch(s.label){case 0:this.buildOutputLoader(),s.label=1;case 1:return s.trys.push([1,4,,5]),t="".concat(this.apiQuery),e="".concat(this.apiSearchQuery,"=").concat(this.value.toLowerCase()),n=this.apiUrl,this.apiQuery&&this.apiSearchQuery?n+="?".concat(e,"&").concat(t):this.apiQuery?n+="?".concat(t):this.apiSearchQuery&&(n+="?".concat(e)),[4,fetch(n,this.apiHeaders)];case 2:return[4,s.sent().json()];case 3:return o=s.sent(),this.apiDataPart&&(o=o[this.apiDataPart]),this.apiSearchQuery&&(this.items=[]),this.itemsWrapper?this.itemsWrapper.innerHTML="":this.output.innerHTML="","tabs"===this.groupingType?(this.setApiGroups(o),this.groupTabsRender(),this.jsonItemsRender(o)):"default"===this.groupingType?(this.setApiGroups(o),this.groups.forEach((function(t){var e=(0,c.htmlToElement)(r.groupingTitleTemplate);e.setAttribute("data-hs-combo-box-group-title",t.name),e.classList.add("--exclude-accessibility"),e.innerText=t.title;var n=o.filter((function(e){return e[r.apiGroupField]===t.name}));r.itemsWrapper?r.itemsWrapper.append(e):r.output.append(e),r.jsonItemsRender(n)}))):this.jsonItemsRender(o),this.setResults(this.input.value),[3,5];case 4:return i=s.sent(),console.error(i),[3,5];case 5:return this.destroyOutputLoader(),[2]}}))}))},e.prototype.jsonItemsRender=function(t){var e=this;t.forEach((function(t,n){if(e.isItemExists(t))return!1;var o=(0,c.htmlToElement)(e.outputItemTemplate);o.querySelectorAll("[data-hs-combo-box-search-text]").forEach((function(e){var n,o;e.textContent=null!==(n=t[e.getAttribute("data-hs-combo-box-output-item-field")])&&void 0!==n?n:"",e.setAttribute("data-hs-combo-box-search-text",null!==(o=t[e.getAttribute("data-hs-combo-box-output-item-field")])&&void 0!==o?o:"")})),o.querySelectorAll("[data-hs-combo-box-output-item-attr]").forEach((function(e){JSON.parse(e.getAttribute("data-hs-combo-box-output-item-attr")).forEach((function(n){e.setAttribute(n.attr,t[n.valueFrom])}))})),o.setAttribute("tabIndex","".concat(n)),"tabs"!==e.groupingType&&"default"!==e.groupingType||o.setAttribute("data-hs-combo-box-output-item",'{"group": {"name": "'.concat(t[e.apiGroupField],'", "title": "').concat(t[e.apiGroupField],'"}}')),e.items=a(a([],e.items,!0),[o],!1),e.preventSelection||o.addEventListener("click",(function(){e.close(o.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text")),e.setSelectedByValue(e.valuesBySelector(o))})),e.appendItemsToWrapper(o)}))},e.prototype.setGroups=function(){var t=[];this.items.forEach((function(e){var n=JSON.parse(e.getAttribute("data-hs-combo-box-output-item")).group;t.some((function(t){return(null==t?void 0:t.name)===n.name}))||t.push(n)})),this.groups=t},e.prototype.setCurrent=function(){window.$hsComboBoxCollection.length&&(window.$hsComboBoxCollection.map((function(t){return t.element.isCurrent=!1})),this.isCurrent=!0)},e.prototype.setApiGroups=function(t){var e=this,n=[];t.forEach((function(t){var o=t[e.apiGroupField];n.some((function(t){return t.name===o}))||n.push({name:o,title:o})})),this.groups=n},e.prototype.sortItems=function(){return this.items.sort((function(t,e){var n=t.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text"),o=e.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text");return n<o?-1:n>o?1:0}))},e.prototype.itemRender=function(t){var e=this,n=t.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text");this.itemsWrapper?this.itemsWrapper.append(t):this.output.append(t),this.preventSelection||t.addEventListener("click",(function(){e.close(n),e.setSelectedByValue(e.valuesBySelector(t))}))},e.prototype.plainRender=function(t){var e=this;t.forEach((function(t){e.itemRender(t)}))},e.prototype.groupTabsRender=function(){var t=this,e=(0,c.htmlToElement)(this.tabsWrapperTemplate),n=(0,c.htmlToElement)('<div class="flex flex-nowrap gap-x-2"></div>');e.append(n),this.output.insertBefore(e,this.output.firstChild);var o=(0,c.htmlToElement)(this.groupingTitleTemplate);o.setAttribute("data-hs-combo-box-group-title","all"),o.classList.add("--exclude-accessibility","active"),o.innerText="All",this.tabs=a(a([],this.tabs,!0),[o],!1),n.append(o),o.addEventListener("click",(function(){t.selectedGroup="all";var e=t.tabs.find((function(e){return e.getAttribute("data-hs-combo-box-group-title")===t.selectedGroup}));t.tabs.forEach((function(t){return t.classList.remove("active")})),e.classList.add("active"),t.setItemsVisibility()})),this.groups.forEach((function(e){var o=(0,c.htmlToElement)(t.groupingTitleTemplate);o.setAttribute("data-hs-combo-box-group-title",e.name),o.classList.add("--exclude-accessibility"),o.innerText=e.title,t.tabs=a(a([],t.tabs,!0),[o],!1),n.append(o),o.addEventListener("click",(function(){t.selectedGroup=e.name;var n=t.tabs.find((function(e){return e.getAttribute("data-hs-combo-box-group-title")===t.selectedGroup}));t.tabs.forEach((function(t){return t.classList.remove("active")})),n.classList.add("active"),t.setItemsVisibility()}))}))},e.prototype.groupDefaultRender=function(){var t=this;this.groups.forEach((function(e){var n=(0,c.htmlToElement)(t.groupingTitleTemplate);n.setAttribute("data-hs-combo-box-group-title",e.name),n.classList.add("--exclude-accessibility"),n.innerText=e.title,t.itemsWrapper?t.itemsWrapper.append(n):t.output.append(n);var o=t.sortItems().filter((function(t){return JSON.parse(t.getAttribute("data-hs-combo-box-output-item")).group.name===e.name}));t.plainRender(o)}))},e.prototype.itemsFromHtml=function(){if("default"===this.groupingType)this.groupDefaultRender();else if("tabs"===this.groupingType){var t=this.sortItems();this.groupTabsRender(),this.plainRender(t)}else{t=this.sortItems();this.plainRender(t)}this.setResults(this.input.value)},e.prototype.buildToggle=function(){var t=this;this.toggle.addEventListener("click",(function(){t.isOpened?t.close():t.open(t.toggle.getAttribute("data-hs-combo-box-toggle"))}))},e.prototype.setSelectedByValue=function(t){var e=this;this.items.forEach((function(n){e.isTextExists(n,t)?n.classList.add("selected"):n.classList.remove("selected")}))},e.prototype.setValue=function(t){this.selected=t,this.value=t,this.input.value=t},e.prototype.setItemsVisibility=function(){var t=this;"tabs"===this.groupingType&&"all"!==this.selectedGroup&&this.items.forEach((function(t){t.style.display="none"}));var e="tabs"===this.groupingType?"all"===this.selectedGroup?this.items:this.items.filter((function(e){return JSON.parse(e.getAttribute("data-hs-combo-box-output-item")).group.name===t.selectedGroup})):this.items;"tabs"===this.groupingType&&"all"!==this.selectedGroup&&e.forEach((function(t){t.style.display="block"})),e.forEach((function(e){t.isTextExistsAny(e,t.value)?e.style.display="block":e.style.display="none"})),"default"===this.groupingType&&this.output.querySelectorAll("[data-hs-combo-box-group-title]").forEach((function(e){var n=e.getAttribute("data-hs-combo-box-group-title");t.items.filter((function(t){return JSON.parse(t.getAttribute("data-hs-combo-box-output-item")).group.name===n&&"block"===t.style.display})).length?e.style.display="block":e.style.display="none"}))},e.prototype.hasVisibleItems=function(){return!!this.items.length&&this.items.some((function(t){return"block"===t.style.display}))},e.prototype.appendItemsToWrapper=function(t){this.itemsWrapper?this.itemsWrapper.append(t):this.output.append(t)},e.prototype.buildOutputPlaceholder=function(){this.outputPlaceholder||(this.outputPlaceholder=(0,c.htmlToElement)(this.outputEmptyTemplate)),this.appendItemsToWrapper(this.outputPlaceholder)},e.prototype.destroyOutputPlaceholder=function(){this.outputPlaceholder&&this.outputPlaceholder.remove(),this.outputPlaceholder=null},e.prototype.resultItems=function(){if(!this.items.length)return!1;this.setItemsVisibility(),this.setSelectedByValue([this.selected])},e.prototype.setValueAndOpen=function(t){this.value=t,this.items.length&&this.setItemsVisibility()},e.prototype.open=function(t){var e=this;return!this.animationInProcess&&(void 0!==t&&this.setValueAndOpen(t),!this.preventVisibility&&(this.animationInProcess=!0,this.output.style.display="block",this.recalculateDirection(),setTimeout((function(){e.el.classList.add("active"),e.animationInProcess=!1})),void(this.isOpened=!0)))},e.prototype.setValueAndClear=function(t){t?this.setValue(t):this.setValue(this.selected),this.outputPlaceholder&&this.destroyOutputPlaceholder()},e.prototype.close=function(t){var e=this;return!this.animationInProcess&&(this.preventVisibility?(this.setValueAndClear(t),!1):(this.animationInProcess=!0,this.el.classList.remove("active"),this.output.classList.remove("bottom-full","top-full"),this.output.style.marginTop="",this.output.style.marginBottom="",(0,c.afterTransition)(this.output,(function(){e.output.style.display="none",e.setValueAndClear(t),e.animationInProcess=!1})),void(this.isOpened=!1)))},e.prototype.recalculateDirection=function(){(0,c.isEnoughSpace)(this.output,this.input,"bottom",this.gap,this.viewport)?(this.output.classList.remove("bottom-full"),this.output.style.marginBottom="",this.output.classList.add("top-full"),this.output.style.marginTop="".concat(this.gap,"px")):(this.output.classList.remove("top-full"),this.output.style.marginTop="",this.output.classList.add("bottom-full"),this.output.style.marginBottom="".concat(this.gap,"px"))},e.getInstance=function(t,e){var n=window.$hsComboBoxCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsComboBoxCollection||(window.$hsComboBoxCollection=[]),document.querySelectorAll("[data-hs-combo-box]:not(.--prevent-on-load-init)").forEach((function(t){if(!window.$hsComboBoxCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))){var n=t.getAttribute("data-hs-combo-box"),o=n?JSON.parse(n):{};new e(t,o)}})),window.$hsComboBoxCollection&&(window.addEventListener("click",(function(t){var n=t.target;e.closeCurrentlyOpened(n)})),document.addEventListener("keydown",(function(t){return e.accessibility(t)})))},e.close=function(t){var e=window.$hsComboBoxCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.isOpened&&e.element.close()},e.closeCurrentlyOpened=function(t){if(void 0===t&&(t=null),!t.closest("[data-hs-combo-box].active")){var e=window.$hsComboBoxCollection.filter((function(t){return t.element.isOpened}))||null;e&&e.forEach((function(t){t.element.close()}))}},e.getPreparedItems=function(t,e){return void 0===t&&(t=!1),e?(t?Array.from(e.querySelectorAll(":scope > *:not(.--exclude-accessibility)")).filter((function(t){return"none"!==t.style.display})).reverse():Array.from(e.querySelectorAll(":scope > *:not(.--exclude-accessibility)")).filter((function(t){return"none"!==t.style.display}))).filter((function(t){return!t.classList.contains("disabled")})):null},e.setHighlighted=function(t,e,n){e.focus(),n.value=e.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text"),t&&t.classList.remove("hs-combo-box-output-item-highlighted"),e.classList.add("hs-combo-box-output-item-highlighted")},e.accessibility=function(t){if(window.$hsComboBoxCollection.find((function(t){return t.element.isOpened}))&&d.COMBO_BOX_ACCESSIBILITY_KEY_SET.includes(t.code)&&!t.metaKey)switch(t.code){case"Escape":t.preventDefault(),this.onEscape();break;case"ArrowUp":t.preventDefault(),this.onArrow();break;case"ArrowDown":t.preventDefault(),this.onArrow(!1);break;case"Home":t.preventDefault(),this.onStartEnd();break;case"End":t.preventDefault(),this.onStartEnd(!1);break;case"Enter":t.preventDefault(),this.onEnter(t)}},e.onEscape=function(){var t=window.$hsComboBoxCollection.find((function(t){return!t.element.preventVisibility&&t.element.isOpened}));t&&(t.element.close(),t.element.input.blur())},e.onArrow=function(t){var n;void 0===t&&(t=!0);var o=window.$hsComboBoxCollection.find((function(t){return t.element.preventVisibility?t.element.isCurrent:t.element.isOpened}));if(o){var i=null!==(n=o.element.itemsWrapper)&&void 0!==n?n:o.element.output;if(!i)return!1;var r,s=e.getPreparedItems(t,i),l=i.querySelector(".hs-combo-box-output-item-highlighted");l||s[0].classList.add("hs-combo-box-output-item-highlighted");var a=s.findIndex((function(t){return t===l}));a+1<s.length&&a++,r=s[a],e.setHighlighted(l,r,o.element.input)}},e.onStartEnd=function(t){var n;void 0===t&&(t=!0);var o=window.$hsComboBoxCollection.find((function(t){return t.element.preventVisibility?t.element.isCurrent:t.element.isOpened}));if(o){var i=null!==(n=o.element.itemsWrapper)&&void 0!==n?n:o.element.output;if(!i)return!1;var r=e.getPreparedItems(t,i),s=i.querySelector(".hs-combo-box-output-item-highlighted");r.length&&e.setHighlighted(s,r[0],o.element.input)}},e.onEnter=function(t){var e=t.target,n=window.$hsComboBoxCollection.find((function(t){return!(0,c.isParentOrElementHidden)(t.element.el)&&t.element.isOpened})),o=n.element.el.querySelector("a");e.hasAttribute("data-hs-combo-box-input")?(n.element.close(),e.blur()):(n.element.preventSelection||n.element.setSelectedByValue(n.element.valuesBySelector(t.target)),n.element.preventSelection&&o&&window.location.assign(o.getAttribute("href")),n.element.close(n.element.preventSelection?null:t.target.querySelector("[data-hs-combo-box-value]").getAttribute("data-hs-combo-box-search-text")))},e}(u.default);window.addEventListener("load",(function(){p.autoInit()})),document.addEventListener("scroll",(function(){if(!window.$hsComboBoxCollection)return!1;var t=window.$hsComboBoxCollection.find((function(t){return t.element.isOpened}));t&&t.element.recalculateDirection()})),"undefined"!=typeof window&&(window.HSComboBox=p),e.default=p},413:function(t,e,n){
/*
 * HSCopyMarkup
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-copy-markup"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.targetSelector=(null==l?void 0:l.targetSelector)||null,o.wrapperSelector=(null==l?void 0:l.wrapperSelector)||null,o.limit=(null==l?void 0:l.limit)||null,o.items=[],o.targetSelector&&o.init(),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsCopyMarkupCollection,this),this.setTarget(),this.setWrapper(),this.addPredefinedItems(),this.el.addEventListener("click",(function(){return t.copy()}))},e.prototype.copy=function(){if(this.limit&&this.items.length>=this.limit)return!1;this.el.hasAttribute("disabled")&&this.el.setAttribute("disabled","");var t=this.target.cloneNode(!0);this.addToItems(t),this.limit&&this.items.length>=this.limit&&this.el.setAttribute("disabled","disabled"),this.fireEvent("copy",t),(0,s.dispatch)("copy.hs.copyMarkup",t,t)},e.prototype.addPredefinedItems=function(){var t=this;Array.from(this.wrapper.children).filter((function(t){return!t.classList.contains("[--ignore-for-count]")})).forEach((function(e){t.addToItems(e)}))},e.prototype.setTarget=function(){var t="string"==typeof this.targetSelector?document.querySelector(this.targetSelector).cloneNode(!0):this.targetSelector.cloneNode(!0);t.removeAttribute("id"),this.target=t},e.prototype.setWrapper=function(){this.wrapper="string"==typeof this.wrapperSelector?document.querySelector(this.wrapperSelector):this.wrapperSelector},e.prototype.addToItems=function(t){var e=this,n=t.querySelector("[data-hs-copy-markup-delete-item]");this.wrapper?this.wrapper.append(t):this.el.before(t),n&&n.addEventListener("click",(function(){return e.delete(t)})),this.items.push(t)},e.prototype.delete=function(t){var e=this.items.indexOf(t);-1!==e&&this.items.splice(e,1),t.remove(),this.fireEvent("delete",t),(0,s.dispatch)("delete.hs.copyMarkup",t,t)},e.getInstance=function(t,e){var n=window.$hsCopyMarkupCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsCopyMarkupCollection||(window.$hsCopyMarkupCollection=[]),document.querySelectorAll("[data-hs-copy-markup]:not(.--prevent-on-load-init)").forEach((function(t){if(!window.$hsCopyMarkupCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))){var n=t.getAttribute("data-hs-copy-markup"),o=n?JSON.parse(n):{};new e(t,o)}}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSCopyMarkup=l),e.default=l},610:function(t,e,n){
/*
 * HSDropdown
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var o,i=0,r=e.length;i<r;i++)!o&&i in e||(o||(o=Array.prototype.slice.call(e,0,i)),o[i]=e[i]);return t.concat(o||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=n(492),a=n(737),c=n(190),u=function(t){function e(e,n,o){var i=t.call(this,e,n,o)||this;return i.toggle=i.el.querySelector(":scope > .hs-dropdown-toggle")||i.el.children[0],i.menu=i.el.querySelector(":scope > .hs-dropdown-menu"),i.eventMode=(0,s.getClassProperty)(i.el,"--trigger","click"),i.closeMode=(0,s.getClassProperty)(i.el,"--auto-close","true"),i.animationInProcess=!1,i.toggle&&i.menu&&i.init(),i}return i(e,t),e.prototype.init=function(){var t=this;if(this.createCollection(window.$hsDropdownCollection,this),this.toggle.disabled)return!1;this.toggle.addEventListener("click",(function(){return t.onClickHandler()})),(0,s.isIOS)()||(0,s.isIpadOS)()||(this.el.addEventListener("mouseenter",(function(){return t.onMouseEnterHandler()})),this.el.addEventListener("mouseleave",(function(){return t.onMouseLeaveHandler()})))},e.prototype.resizeHandler=function(){this.eventMode=(0,s.getClassProperty)(this.el,"--trigger","click")},e.prototype.onClickHandler=function(){this.el.classList.contains("open")&&!this.menu.classList.contains("hidden")?this.close():this.open()},e.prototype.onMouseEnterHandler=function(){if("hover"!==this.eventMode)return!1;this.el._popper&&this.forceClearState(),!this.el.classList.contains("open")&&this.menu.classList.contains("hidden")&&this.open()},e.prototype.onMouseLeaveHandler=function(){if("hover"!==this.eventMode)return!1;this.el.classList.contains("open")&&!this.menu.classList.contains("hidden")&&this.close()},e.prototype.destroyPopper=function(){this.menu.classList.remove("block"),this.menu.classList.add("hidden"),this.menu.style.inset=null,this.menu.style.position=null,this.el&&this.el._popper&&this.el._popper.destroy(),this.animationInProcess=!1},e.prototype.absoluteStrategyModifiers=function(){var t=this;return[{name:"applyStyles",fn:function(e){var n=(window.getComputedStyle(t.el).getPropertyValue("--strategy")||"absolute").replace(" ",""),o=(window.getComputedStyle(t.el).getPropertyValue("--adaptive")||"adaptive").replace(" ","");e.state.elements.popper.style.position=n,e.state.elements.popper.style.transform="adaptive"===o?e.state.styles.popper.transform:null,e.state.elements.popper.style.top=null,e.state.elements.popper.style.bottom=null,e.state.elements.popper.style.left=null,e.state.elements.popper.style.right=null,e.state.elements.popper.style.margin=0}},{name:"computeStyles",options:{adaptive:!1}}]},e.prototype.open=function(){var t=this;if(this.el.classList.contains("open"))return!1;if(this.animationInProcess)return!1;this.animationInProcess=!0;var e=(window.getComputedStyle(this.el).getPropertyValue("--placement")||"").replace(" ",""),n=(window.getComputedStyle(this.el).getPropertyValue("--flip")||"true").replace(" ",""),o=(window.getComputedStyle(this.el).getPropertyValue("--strategy")||"fixed").replace(" ",""),i=parseInt((window.getComputedStyle(this.el).getPropertyValue("--offset")||"10").replace(" ",""));"static"!==o&&(this.el._popper=(0,l.createPopper)(this.el,this.menu,{placement:c.POSITIONS[e]||"bottom-start",strategy:o,modifiers:r(r([],"fixed"!==o?this.absoluteStrategyModifiers():[],!0),[{name:"flip",enabled:"true"===n},{name:"offset",options:{offset:[0,i]}}],!1)})),this.menu.style.margin=null,this.menu.classList.remove("hidden"),this.menu.classList.add("block"),setTimeout((function(){t.el.classList.add("open"),t.animationInProcess=!1})),this.fireEvent("open",this.el),(0,s.dispatch)("open.hs.dropdown",this.el,this.el)},e.prototype.close=function(t){var e=this;if(void 0===t&&(t=!0),this.animationInProcess||!this.el.classList.contains("open"))return!1;if(this.animationInProcess=!0,t){var n=this.el.querySelector("[data-hs-dropdown-transition]")||this.menu;(0,s.afterTransition)(n,(function(){return e.destroyPopper()}))}else this.destroyPopper();this.menu.style.margin=null,this.el.classList.remove("open"),this.fireEvent("close",this.el),(0,s.dispatch)("close.hs.dropdown",this.el,this.el)},e.prototype.forceClearState=function(){this.destroyPopper(),this.menu.style.margin=null,this.el.classList.remove("open")},e.getInstance=function(t,e){var n=window.$hsDropdownCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.autoInit=function(){if(window.$hsDropdownCollection||(window.$hsDropdownCollection=[]),document.querySelectorAll(".hs-dropdown:not(.--prevent-on-load-init)").forEach((function(t){window.$hsDropdownCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)})),window.$hsDropdownCollection){document.addEventListener("keydown",(function(t){return e.accessibility(t)})),window.addEventListener("click",(function(t){var n=t.target;e.closeCurrentlyOpened(n)}));var t=window.innerWidth;window.addEventListener("resize",(function(){window.innerWidth!==t&&(t=innerWidth,e.closeCurrentlyOpened(null,!1))}))}},e.open=function(t){var e=window.$hsDropdownCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.menu.classList.contains("hidden")&&e.element.open()},e.close=function(t){var e=window.$hsDropdownCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&!e.element.menu.classList.contains("hidden")&&e.element.close()},e.accessibility=function(t){this.history=s.menuSearchHistory;var e=window.$hsDropdownCollection.find((function(t){return t.element.el.classList.contains("open")}));if(e&&(c.DROPDOWN_ACCESSIBILITY_KEY_SET.includes(t.code)||4===t.code.length&&t.code[t.code.length-1].match(/^[A-Z]*$/))&&!t.metaKey&&!e.element.menu.querySelector("input:focus"))switch(t.code){case"Escape":e.element.menu.querySelector(".hs-select.active")||(t.preventDefault(),this.onEscape(t));break;case"Enter":e.element.menu.querySelector(".hs-select button:focus")||e.element.menu.querySelector(".hs-collapse-toggle:focus")||this.onEnter(t);break;case"ArrowUp":t.preventDefault(),this.onArrow();break;case"ArrowDown":t.preventDefault(),this.onArrow(!1);break;case"Home":t.preventDefault(),this.onStartEnd();break;case"End":t.preventDefault(),this.onStartEnd(!1);break;default:t.preventDefault(),this.onFirstLetter(t.key)}},e.onEscape=function(t){var e=t.target.closest(".hs-dropdown.open");if(window.$hsDropdownCollection.find((function(t){return t.element.el===e}))){var n=window.$hsDropdownCollection.find((function(t){return t.element.el===e}));n&&(n.element.close(),n.element.toggle.focus())}else this.closeCurrentlyOpened()},e.onEnter=function(t){var e=t.target.parentElement;if(window.$hsDropdownCollection.find((function(t){return t.element.el===e}))){t.preventDefault();var n=window.$hsDropdownCollection.find((function(t){return t.element.el===e}));n&&n.element.open()}},e.onArrow=function(t){void 0===t&&(t=!0);var e=window.$hsDropdownCollection.find((function(t){return t.element.el.classList.contains("open")}));if(e){var n=e.element.menu;if(!n)return!1;var o=(t?Array.from(n.querySelectorAll("a:not([hidden]), .hs-dropdown > button:not([hidden])")).reverse():Array.from(n.querySelectorAll("a:not([hidden]), .hs-dropdown > button:not([hidden])"))).filter((function(t){return!t.classList.contains("disabled")})),i=n.querySelector("a:focus, button:focus"),r=o.findIndex((function(t){return t===i}));r+1<o.length&&r++,o[r].focus()}},e.onStartEnd=function(t){void 0===t&&(t=!0);var e=window.$hsDropdownCollection.find((function(t){return t.element.el.classList.contains("open")}));if(e){var n=e.element.menu;if(!n)return!1;var o=(t?Array.from(n.querySelectorAll("a")):Array.from(n.querySelectorAll("a")).reverse()).filter((function(t){return!t.classList.contains("disabled")}));o.length&&o[0].focus()}},e.onFirstLetter=function(t){var e=this,n=window.$hsDropdownCollection.find((function(t){return t.element.el.classList.contains("open")}));if(n){var o=n.element.menu;if(!o)return!1;var i=Array.from(o.querySelectorAll("a")),r=function(){return i.findIndex((function(n,o){return n.innerText.toLowerCase().charAt(0)===t.toLowerCase()&&e.history.existsInHistory(o)}))},s=r();-1===s&&(this.history.clearHistory(),s=r()),-1!==s&&(i[s].focus(),this.history.addHistory(s))}},e.closeCurrentlyOpened=function(t,e){void 0===t&&(t=null),void 0===e&&(e=!0);var n=t&&t.closest(".hs-dropdown")&&t.closest(".hs-dropdown").parentElement.closest(".hs-dropdown")?t.closest(".hs-dropdown").parentElement.closest(".hs-dropdown"):null,o=n?window.$hsDropdownCollection.filter((function(t){return t.element.el.classList.contains("open")&&t.element.menu.closest(".hs-dropdown").parentElement.closest(".hs-dropdown")===n})):window.$hsDropdownCollection.filter((function(t){return t.element.el.classList.contains("open")}));t&&t.closest(".hs-dropdown")&&"inside"===(0,s.getClassPropertyAlt)(t.closest(".hs-dropdown"),"--auto-close")&&(o=o.filter((function(e){return e.element.el!==t.closest(".hs-dropdown")}))),o&&o.forEach((function(t){if("false"===t.element.closeMode||"outside"===t.element.closeMode)return!1;t.element.close(e)}))},e.on=function(t,e,n){var o=window.$hsDropdownCollection.find((function(t){return t.element.el===("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(a.default);window.addEventListener("load",(function(){u.autoInit()})),window.addEventListener("resize",(function(){window.$hsDropdownCollection||(window.$hsDropdownCollection=[]),window.$hsDropdownCollection.forEach((function(t){return t.element.resizeHandler()}))})),"undefined"!=typeof window&&(window.HSDropdown=u),e.default=u},371:function(t,e,n){
/*
 * HSInputNumber
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this;o.input=o.el.querySelector("[data-hs-input-number-input]")||null,o.increment=o.el.querySelector("[data-hs-input-number-increment]")||null,o.decrement=o.el.querySelector("[data-hs-input-number-decrement]")||null,o.input&&(o.inputValue=isNaN(parseInt(o.input.value))?0:parseInt(o.input.value));var i=o.el.dataset.hsInputNumber,s=i?JSON.parse(i):{step:1},l=r(r({},s),n);return o.minInputValue="min"in l?l.min:0,o.maxInputValue="max"in l?l.max:null,o.step="step"in l&&l.step>0?l.step:1,o.init(),o}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsInputNumberCollection,this),this.input&&this.increment&&this.build()},e.prototype.build=function(){this.input&&this.buildInput(),this.increment&&this.buildIncrement(),this.decrement&&this.buildDecrement(),this.inputValue<=0&&0===this.minInputValue&&(this.inputValue=0,this.input.value="0"),(this.inputValue<=0||this.minInputValue<0)&&this.changeValue(),this.input.hasAttribute("disabled")&&this.disableButtons()},e.prototype.buildInput=function(){var t=this;this.input.addEventListener("input",(function(){return t.changeValue()}))},e.prototype.buildIncrement=function(){var t=this;this.increment.addEventListener("click",(function(){t.changeValue("increment")}))},e.prototype.buildDecrement=function(){var t=this;this.decrement.addEventListener("click",(function(){t.changeValue("decrement")}))},e.prototype.changeValue=function(t){var e,n;void 0===t&&(t="none");var o={inputValue:this.inputValue},i=null!==(e=this.minInputValue)&&void 0!==e?e:Number.MIN_SAFE_INTEGER,r=null!==(n=this.maxInputValue)&&void 0!==n?n:Number.MAX_SAFE_INTEGER;switch(this.inputValue=isNaN(this.inputValue)?0:this.inputValue,t){case"increment":var l=this.inputValue+this.step;this.inputValue=l>=i&&l<=r?l:r,this.input.value=this.inputValue.toString();break;case"decrement":var a=this.inputValue-this.step;this.inputValue=a>=i&&a<=r?a:i,this.input.value=this.inputValue.toString();break;default:var c=isNaN(parseInt(this.input.value))?0:parseInt(this.input.value);this.inputValue=c>=r?r:c<=i?i:c,this.inputValue<=i&&(this.input.value=this.inputValue.toString())}o.inputValue=this.inputValue,this.inputValue===i?(this.el.classList.add("disabled"),this.decrement&&this.disableButtons("decrement")):(this.el.classList.remove("disabled"),this.decrement&&this.enableButtons("decrement")),this.inputValue===r?(this.el.classList.add("disabled"),this.increment&&this.disableButtons("increment")):(this.el.classList.remove("disabled"),this.increment&&this.enableButtons("increment")),this.fireEvent("change",o),(0,s.dispatch)("change.hs.inputNumber",this.el,o)},e.prototype.disableButtons=function(t){void 0===t&&(t="all"),"all"===t?("BUTTON"!==this.increment.tagName&&"INPUT"!==this.increment.tagName||this.increment.setAttribute("disabled","disabled"),"BUTTON"!==this.decrement.tagName&&"INPUT"!==this.decrement.tagName||this.decrement.setAttribute("disabled","disabled")):"increment"===t?"BUTTON"!==this.increment.tagName&&"INPUT"!==this.increment.tagName||this.increment.setAttribute("disabled","disabled"):"decrement"===t&&("BUTTON"!==this.decrement.tagName&&"INPUT"!==this.decrement.tagName||this.decrement.setAttribute("disabled","disabled"))},e.prototype.enableButtons=function(t){void 0===t&&(t="all"),"all"===t?("BUTTON"!==this.increment.tagName&&"INPUT"!==this.increment.tagName||this.increment.removeAttribute("disabled"),"BUTTON"!==this.decrement.tagName&&"INPUT"!==this.decrement.tagName||this.decrement.removeAttribute("disabled")):"increment"===t?"BUTTON"!==this.increment.tagName&&"INPUT"!==this.increment.tagName||this.increment.removeAttribute("disabled"):"decrement"===t&&("BUTTON"!==this.decrement.tagName&&"INPUT"!==this.decrement.tagName||this.decrement.removeAttribute("disabled"))},e.getInstance=function(t,e){var n=window.$hsInputNumberCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsInputNumberCollection||(window.$hsInputNumberCollection=[]),document.querySelectorAll("[data-hs-input-number]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsInputNumberCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSInputNumber=l),e.default=l},770:function(t,e,n){
/*
 * HSOverlay
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=n(190),a=function(t){function e(e,n,o){var i,a,c=t.call(this,e,n,o)||this,u=e.getAttribute("data-hs-overlay-options"),d=u?JSON.parse(u):{},p=r(r({},d),n);if(c.hiddenClass=(null==p?void 0:p.hiddenClass)||"hidden",c.isClosePrev=null===(i=null==p?void 0:p.isClosePrev)||void 0===i||i,c.backdropClasses=null!==(a=null==p?void 0:p.backdropClasses)&&void 0!==a?a:"transition duration fixed inset-0 bg-gray-900 bg-opacity-50 dark:bg-opacity-80 hs-overlay-backdrop",c.openNextOverlay=!1,c.autoHide=null,c.overlayId=c.el.getAttribute("data-hs-overlay"),c.overlay=document.querySelector(c.overlayId),c.overlay){c.isCloseWhenClickInside=(0,s.stringToBoolean)((0,s.getClassProperty)(c.overlay,"--close-when-click-inside","false")||"false"),c.isTabAccessibilityLimited=(0,s.stringToBoolean)((0,s.getClassProperty)(c.overlay,"--tab-accessibility-limited","true")||"true"),c.isLayoutAffect=(0,s.stringToBoolean)((0,s.getClassProperty)(c.overlay,"--is-layout-affect","false")||"false"),c.hasAutofocus=(0,s.stringToBoolean)((0,s.getClassProperty)(c.overlay,"--has-autofocus","true")||"true"),c.hasAbilityToCloseOnBackdropClick=(0,s.stringToBoolean)(c.overlay.getAttribute("data-hs-overlay-keyboard")||"true");var h=(0,s.getClassProperty)(c.overlay,"--auto-close");c.autoClose=!isNaN(+h)&&isFinite(+h)?+h:l.BREAKPOINTS[h]||null;var f=(0,s.getClassProperty)(c.overlay,"--opened");c.openedBreakpoint=(!isNaN(+f)&&isFinite(+f)?+f:l.BREAKPOINTS[f])||null}return c.overlay&&c.init(),c}return i(e,t),e.prototype.init=function(){var t=this;if(this.createCollection(window.$hsOverlayCollection,this),this.isLayoutAffect&&this.openedBreakpoint){var n=e.getInstance(this.el,!0);e.setOpened(this.openedBreakpoint,n)}this.el.addEventListener("click",(function(){t.overlay.classList.contains("opened")?t.close():t.open()})),this.overlay.addEventListener("click",(function(e){e.target.id&&"#".concat(e.target.id)===t.overlayId&&t.isCloseWhenClickInside&&t.hasAbilityToCloseOnBackdropClick&&t.close()}))},e.prototype.hideAuto=function(){var t=this,e=parseInt((0,s.getClassProperty)(this.overlay,"--auto-hide","0"));e&&(this.autoHide=setTimeout((function(){t.close()}),e))},e.prototype.checkTimer=function(){this.autoHide&&(clearTimeout(this.autoHide),this.autoHide=null)},e.prototype.buildBackdrop=function(){var t=this,e=this.overlay.classList.value.split(" "),n=parseInt(window.getComputedStyle(this.overlay).getPropertyValue("z-index")),o=this.overlay.getAttribute("data-hs-overlay-backdrop-container")||!1,i=document.createElement("div"),r=this.backdropClasses,l="static"!==(0,s.getClassProperty)(this.overlay,"--overlay-backdrop","true"),a="false"===(0,s.getClassProperty)(this.overlay,"--overlay-backdrop","true");i.id="".concat(this.overlay.id,"-backdrop"),"style"in i&&(i.style.zIndex="".concat(n-1));for(var c=0,u=e;c<u.length;c++){var d=u[c];(d.startsWith("hs-overlay-backdrop-open:")||d.includes(":hs-overlay-backdrop-open:"))&&(r+=" ".concat(d))}a||(o&&((i=document.querySelector(o).cloneNode(!0)).classList.remove("hidden"),r="".concat(i.classList.toString()),i.classList.value=""),l&&i.addEventListener("click",(function(){return t.close()}),!0),i.setAttribute("data-hs-overlay-backdrop-template",""),document.body.appendChild(i),setTimeout((function(){i.classList.value=r})))},e.prototype.destroyBackdrop=function(){var t=document.querySelector("#".concat(this.overlay.id,"-backdrop"));t&&(this.openNextOverlay&&(t.style.transitionDuration="".concat(1.8*parseFloat(window.getComputedStyle(t).transitionDuration.replace(/[^\d.-]/g,"")),"s")),t.classList.add("opacity-0"),(0,s.afterTransition)(t,(function(){t.remove()})))},e.prototype.focusElement=function(){var t=this.overlay.querySelector("[autofocus]");if(!t)return!1;t.focus()},e.prototype.open=function(){var t=this;if(!this.overlay)return!1;var e=window.$hsOverlayCollection.find((function(t){return t.element.overlay===document.querySelector(".hs-overlay.open")&&!t.element.isLayoutAffect})),n="true"!==(0,s.getClassProperty)(this.overlay,"--body-scroll","false");if(this.isClosePrev&&e)return this.openNextOverlay=!0,e.element.close().then((function(){t.open(),t.openNextOverlay=!1}));n&&(document.body.style.overflow="hidden"),this.buildBackdrop(),this.checkTimer(),this.hideAuto(),this.overlay.classList.remove(this.hiddenClass),this.overlay.setAttribute("aria-overlay","true"),this.overlay.setAttribute("tabindex","-1"),setTimeout((function(){if(t.overlay.classList.contains("opened"))return!1;t.overlay.classList.add("open","opened"),t.isLayoutAffect&&document.body.classList.add("hs-overlay-body-open"),t.fireEvent("open",t.el),(0,s.dispatch)("open.hs.overlay",t.el,t.el),t.hasAutofocus&&t.focusElement()}),50)},e.prototype.close=function(t){var e=this;void 0===t&&(t=!1),this.isLayoutAffect&&document.body.classList.remove("hs-overlay-body-open");var n=function(t){if(e.overlay.classList.contains("open"))return!1;e.overlay.classList.add(e.hiddenClass),e.destroyBackdrop(),e.fireEvent("close",e.el),(0,s.dispatch)("close.hs.overlay",e.el,e.el),document.querySelector(".hs-overlay.opened")||(document.body.style.overflow=""),t(e.overlay)};return new Promise((function(o){if(!e.overlay)return!1;e.overlay.classList.remove("open","opened"),e.overlay.removeAttribute("aria-overlay"),e.overlay.removeAttribute("tabindex"),t?n(o):(0,s.afterTransition)(e.overlay,(function(){n(o)}))}))},e.getInstance=function(t,e){var n=window.$hsOverlayCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)||e.element.overlay===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.autoInit=function(){window.$hsOverlayCollection||(window.$hsOverlayCollection=[]),document.querySelectorAll("[data-hs-overlay]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsOverlayCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)})),window.$hsOverlayCollection&&document.addEventListener("keydown",(function(t){return e.accessibility(t)}))},e.open=function(t){var e=window.$hsOverlayCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)||e.element.overlay===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.overlay.classList.contains(e.element.hiddenClass)&&e.element.open()},e.close=function(t){var e=window.$hsOverlayCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)||e.element.overlay===("string"==typeof t?document.querySelector(t):t)}));e&&!e.element.overlay.classList.contains(e.element.hiddenClass)&&e.element.close()},e.setOpened=function(t,e){document.body.clientWidth>=t?(document.body.classList.add("hs-overlay-body-open"),e.element.overlay.classList.add("opened")):e.element.close(!0)},e.accessibility=function(t){var e,n,o=window.$hsOverlayCollection.filter((function(t){return t.element.overlay.classList.contains("open")})),i=o[o.length-1],r=null===(n=null===(e=null==i?void 0:i.element)||void 0===e?void 0:e.overlay)||void 0===n?void 0:n.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),l=[];(null==r?void 0:r.length)&&r.forEach((function(t){(0,s.isParentOrElementHidden)(t)||l.push(t)}));var a=i&&!t.metaKey;if(a&&!i.element.isTabAccessibilityLimited&&"Tab"===t.code)return!1;a&&l.length&&"Tab"===t.code&&(t.preventDefault(),this.onTab(i,l)),a&&"Escape"===t.code&&(t.preventDefault(),this.onEscape(i))},e.onEscape=function(t){t&&t.element.hasAbilityToCloseOnBackdropClick&&t.element.close()},e.onTab=function(t,e){if(!e.length)return!1;var n=t.element.overlay.querySelector(":focus"),o=Array.from(e).indexOf(n);o>-1?e[(o+1)%e.length].focus():e[0].focus()},e.on=function(t,e,n){var o=window.$hsOverlayCollection.find((function(t){return t.element.el===("string"==typeof e?document.querySelector(e):e)||t.element.overlay===("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(n(737).default);window.addEventListener("load",(function(){a.autoInit()})),window.addEventListener("resize",(function(){!function(){if(!window.$hsOverlayCollection.length||!window.$hsOverlayCollection.find((function(t){return t.element.autoClose})))return!1;window.$hsOverlayCollection.filter((function(t){return t.element.autoClose})).forEach((function(t){document.body.clientWidth>=t.element.autoClose&&t.element.close(!0)}))}(),function(){if(!window.$hsOverlayCollection.length||!window.$hsOverlayCollection.find((function(t){return t.element.openedBreakpoint})))return!1;window.$hsOverlayCollection.filter((function(t){return t.element.openedBreakpoint})).forEach((function(t){a.setOpened(t.element.openedBreakpoint,t)}))}()})),"undefined"!=typeof window&&(window.HSOverlay=a),e.default=a},659:function(t,e,n){
/*
 * HSPinInput
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-pin-input"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.items=o.el.querySelectorAll("[data-hs-pin-input-item]"),o.currentItem=null,o.currentValue=new Array(o.items.length).fill(""),o.placeholders=[],o.availableCharsRE=new RegExp((null==l?void 0:l.availableCharsRE)||"^[a-zA-Z0-9]+$"),o.init(),o}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsPinInputCollection,this),this.items.length&&this.build()},e.prototype.build=function(){this.buildInputItems()},e.prototype.buildInputItems=function(){var t=this;this.items.forEach((function(e,n){t.placeholders.push(e.getAttribute("placeholder")||""),e.hasAttribute("autofocus")&&t.onFocusIn(n),e.addEventListener("input",(function(e){return t.onInput(e,n)})),e.addEventListener("paste",(function(e){return t.onPaste(e)})),e.addEventListener("keydown",(function(e){return t.onKeydown(e,n)})),e.addEventListener("focusin",(function(){return t.onFocusIn(n)})),e.addEventListener("focusout",(function(){return t.onFocusOut(n)}))}))},e.prototype.checkIfNumber=function(t){return t.match(this.availableCharsRE)},e.prototype.autoFillAll=function(t){var e=this;Array.from(t).forEach((function(t,n){if(!(null==e?void 0:e.items[n]))return!1;e.items[n].value=t,e.items[n].dispatchEvent(new Event("input",{bubbles:!0}))}))},e.prototype.setCurrentValue=function(){this.currentValue=Array.from(this.items).map((function(t){return t.value}))},e.prototype.toggleCompleted=function(){this.currentValue.includes("")?this.el.classList.remove("active"):this.el.classList.add("active")},e.prototype.onInput=function(t,e){var n=t.target.value;if(this.currentItem=t.target,this.currentItem.value="",this.currentItem.value=n[n.length-1],!this.checkIfNumber(this.currentItem.value))return this.currentItem.value=this.currentValue[e]||"",!1;if(this.setCurrentValue(),this.currentItem.value){if(e<this.items.length-1&&this.items[e+1].focus(),!this.currentValue.includes("")){var o={currentValue:this.currentValue};this.fireEvent("completed",o),(0,s.dispatch)("completed.hs.pinInput",this.el,o)}this.toggleCompleted()}else e>0&&this.items[e-1].focus()},e.prototype.onKeydown=function(t,e){"Backspace"===t.key&&e>0&&(""===this.items[e].value?(this.items[e-1].value="",this.items[e-1].focus()):this.items[e].value=""),this.setCurrentValue(),this.toggleCompleted()},e.prototype.onFocusIn=function(t){this.items[t].setAttribute("placeholder","")},e.prototype.onFocusOut=function(t){this.items[t].setAttribute("placeholder",this.placeholders[t])},e.prototype.onPaste=function(t){var e=this;t.preventDefault(),this.items.forEach((function(n){document.activeElement===n&&e.autoFillAll(t.clipboardData.getData("text"))}))},e.getInstance=function(t,e){var n=window.$hsPinInputCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsPinInputCollection||(window.$hsPinInputCollection=[]),document.querySelectorAll("[data-hs-pin-input]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsPinInputCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSPinInput=l),e.default=l},139:function(t,e,n){
/*
 * HSRemoveElement
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-remove-element-options"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.removeTargetId=o.el.getAttribute("data-hs-remove-element"),o.removeTarget=document.querySelector(o.removeTargetId),o.removeTargetAnimationClass=(null==l?void 0:l.removeTargetAnimationClass)||"hs-removing",o.removeTarget&&o.init(),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsRemoveElementCollection,this),this.el.addEventListener("click",(function(){return t.remove()}))},e.prototype.remove=function(){var t=this;if(!this.removeTarget)return!1;this.removeTarget.classList.add(this.removeTargetAnimationClass),(0,s.afterTransition)(this.removeTarget,(function(){t.removeTarget.remove()}))},e.autoInit=function(){window.$hsRemoveElementCollection||(window.$hsRemoveElementCollection=[]),document.querySelectorAll("[data-hs-remove-element]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsRemoveElementCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSRemoveElement=l),e.default=l},591:function(t,e,n){
/*
 * HSScrollspy
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var r=n(969),s=function(t){function e(e,n){void 0===n&&(n={});var o=t.call(this,e,n)||this;return o.activeSection=null,o.contentId=o.el.getAttribute("data-hs-scrollspy"),o.content=document.querySelector(o.contentId),o.links=o.el.querySelectorAll("[href]"),o.sections=[],o.scrollableId=o.el.getAttribute("data-hs-scrollspy-scrollable-parent"),o.scrollable=o.scrollableId?document.querySelector(o.scrollableId):document,o.init(),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsScrollspyCollection,this),this.links.forEach((function(e){t.sections.push(t.scrollable.querySelector(e.getAttribute("href")))})),Array.from(this.sections).forEach((function(e){if(!e.getAttribute("id"))return!1;t.scrollable.addEventListener("scroll",(function(n){return t.update(n,e)}))})),this.links.forEach((function(e){e.addEventListener("click",(function(n){if(n.preventDefault(),"javascript:;"===e.getAttribute("href"))return!1;t.scrollTo(e)}))}))},e.prototype.update=function(t,e){var n=parseInt((0,r.getClassProperty)(this.el,"--scrollspy-offset","0")),o=parseInt((0,r.getClassProperty)(e,"--scrollspy-offset"))||n,i=t.target===document?0:parseInt(String(t.target.getBoundingClientRect().top)),s=parseInt(String(e.getBoundingClientRect().top))-o-i,l=e.offsetHeight;if(s<=0&&s+l>0){if(this.activeSection===e)return!1;this.links.forEach((function(t){t.classList.remove("active")}));var a=this.el.querySelector('[href="#'.concat(e.getAttribute("id"),'"]'));if(a){a.classList.add("active");var c=a.closest("[data-hs-scrollspy-group]");if(c){var u=c.querySelector("[href]");u&&u.classList.add("active")}}this.activeSection=e}},e.prototype.scrollTo=function(t){var e=t.getAttribute("href"),n=document.querySelector(e),o=parseInt((0,r.getClassProperty)(this.el,"--scrollspy-offset","0")),i=parseInt((0,r.getClassProperty)(n,"--scrollspy-offset"))||o,s=this.scrollable===document?0:this.scrollable.offsetTop,l=n.offsetTop-i-s,a=this.scrollable===document?window:this.scrollable,c=function(){window.history.replaceState(null,null,t.getAttribute("href")),"scrollTo"in a&&a.scrollTo({top:l,left:0,behavior:"smooth"})},u=this.fireEvent("beforeScroll",this.el);(0,r.dispatch)("beforeScroll.hs.scrollspy",this.el,this.el),u instanceof Promise?u.then((function(){return c()})):c()},e.getInstance=function(t,e){void 0===e&&(e=!1);var n=window.$hsScrollspyCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.autoInit=function(){window.$hsScrollspyCollection||(window.$hsScrollspyCollection=[]),document.querySelectorAll("[data-hs-scrollspy]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsScrollspyCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),"undefined"!=typeof window&&(window.HSScrollspy=s),e.default=s},961:function(t,e,n){
/*
 * HSTogglePassword
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},s=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,r){function s(t){try{a(o.next(t))}catch(t){r(t)}}function l(t){try{a(o.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}a((o=o.apply(t,e||[])).next())}))},l=this&&this.__generator||function(t,e){var n,o,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function l(l){return function(a){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;r&&(r=0,l[0]&&(s=0)),s;)try{if(n=1,o&&(i=2&l[0]?o.return:l[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,l[1])).done)return i;switch(o=0,i&&(l=[2&l[0],i.value]),l[0]){case 0:case 1:i=l;break;case 4:return s.label++,{value:l[1],done:!1};case 5:s.label++,o=l[1],l=[0];continue;case 7:l=s.ops.pop(),s.trys.pop();continue;default:if(!(i=s.trys,(i=i.length>0&&i[i.length-1])||6!==l[0]&&2!==l[0])){s=0;continue}if(3===l[0]&&(!i||l[1]>i[0]&&l[1]<i[3])){s.label=l[1];break}if(6===l[0]&&s.label<i[1]){s.label=i[1],i=l;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(l);break}i[2]&&s.ops.pop(),s.trys.pop();continue}l=e.call(t,s)}catch(t){l=[6,t],o=0}finally{n=i=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,a])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(969),c=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-search-by-json"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.jsonUrl=l.jsonUrl,o.minChars=l.minChars||3,o.dropdownTemplate=l.dropdownTemplate||"<div></div>",o.dropdownClasses=l.dropdownClasses||"absolute top-full z-[1] w-full bg-white border border-gray-200 rounded-md hidden mt-2",o.dropdownItemTemplate=l.dropdownItemTemplate||"<div></div>",o.dropdownItemTemplatesByType=l.dropdownItemTemplatesByType||null,o.dropdownItemClasses=l.dropdownItemClasses||"py-2 px-4 w-full cursor-pointer text-sm hover:bg-gray-300 hover:text-black",o.highlightedTextTagName=l.highlightedTextTagName||"u",o.highlightedTextClasses=l.highlightedTextClasses||"bg-green-200",o.jsonUrl&&o.fetchData().then((function(){return o.init()})),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsSearchByJsonCollection,this),this.buildDropdown(),this.el.addEventListener("input",(0,a.debounce)((function(e){t.val=e.target.value,t.val.length>t.minChars?t.searchData(t.val):t.result=[],t.result.length?t.dropdown.classList.remove("hidden"):t.dropdown.classList.add("hidden"),t.buildItems()})))},e.prototype.fetchData=function(){return s(this,void 0,void 0,(function(){var t=this;return l(this,(function(e){switch(e.label){case 0:return[4,fetch(this.jsonUrl).then((function(t){return t.json()})).then((function(e){return t.json=e}))];case 1:return e.sent(),[2]}}))}))},e.prototype.searchData=function(t){this.result=this.json.filter((function(e){var n=t.toLowerCase(),o=e.title.toLowerCase(),i=e.description.toLowerCase();return o.includes(n)||i.includes(n)}))},e.prototype.buildDropdown=function(){this.dropdown=(0,a.htmlToElement)(this.dropdownTemplate),this.dropdownClasses&&(0,a.classToClassList)(this.dropdownClasses,this.dropdown),this.el.after(this.dropdown)},e.prototype.buildItems=function(){var t=this;this.dropdown.innerHTML="",this.result.forEach((function(e){var n=(0,a.htmlToElement)('<a class="block" href="'.concat(e.url,'" target="_blank"></a>'));n.append(t.itemTemplate(e)),t.dropdown.append(n)}))},e.prototype.itemTemplate=function(t){var e=new RegExp(this.val,"gi"),n=t.title.replace(e,"<".concat(this.highlightedTextTagName,' class="inline-block ').concat(this.highlightedTextClasses,'">').concat(this.val,"</").concat(this.highlightedTextTagName,">")),o=t.description.replace(e,"<".concat(this.highlightedTextTagName,' class="inline-block ').concat(this.highlightedTextClasses,'">').concat(this.val,"</").concat(this.highlightedTextTagName,">")),i=this.dropdownItemTemplatesByType?this.dropdownItemTemplatesByType.find((function(e){return e.type===t.type})):null,r=i?(0,a.htmlToElement)(i.markup):(0,a.htmlToElement)(this.dropdownItemTemplate);this.dropdownItemClasses&&(0,a.classToClassList)(this.dropdownItemClasses,r);var s=r.querySelector("[data-title]");s?s.append((0,a.htmlToElement)("<span>".concat(n,"</span>"))):r.append((0,a.htmlToElement)("<span>".concat(n,"</span>")));var l=r.querySelector("[data-description]");if(l)l.append((0,a.htmlToElement)("<span>".concat(o,"</span>")));else if(!i){var c=(0,a.htmlToElement)("<br>");r.append(c),r.append((0,a.htmlToElement)("<span>".concat(o,"</span>")))}return r},e.getInstance=function(t){var e=window.$hsSearchByJsonCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return e?e.element:null},e.autoInit=function(){window.$hsSearchByJsonCollection||(window.$hsSearchByJsonCollection=[]),document.querySelectorAll("[data-hs-search-by-json]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsSearchByJsonCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){c.autoInit()})),"undefined"!=typeof window&&(window.HSSearchByJson=c),e.default=c},233:function(t,e,n){
/*
 * HSSelect
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},s=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var o,i=0,r=e.length;i<r;i++)!o&&i in e||(o||(o=Array.prototype.slice.call(e,0,i)),o[i]=e[i]);return t.concat(o||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0});var l=n(969),a=n(737),c=n(190),u=function(t){function e(e,n){var o,i=t.call(this,e,n)||this,s=e.getAttribute("data-hs-select"),l=s?JSON.parse(s):{},a=r(r({},l),n);return i.value=(null==a?void 0:a.value)||i.el.value||null,i.placeholder=(null==a?void 0:a.placeholder)||"Select...",i.hasSearch=(null==a?void 0:a.hasSearch)||!1,i.preventSearchFocus=(null==a?void 0:a.preventSearchFocus)||!1,i.mode=(null==a?void 0:a.mode)||"default",i.viewport=void 0!==(null==a?void 0:a.viewport)?document.querySelector(null==a?void 0:a.viewport):null,i.isOpened=Boolean(null==a?void 0:a.isOpened)||!1,i.isMultiple=i.el.hasAttribute("multiple")||!1,i.isDisabled=i.el.hasAttribute("disabled")||!1,i.selectedItems=[],i.wrapperClasses=(null==a?void 0:a.wrapperClasses)||null,i.toggleTag=(null==a?void 0:a.toggleTag)||null,i.toggleClasses=(null==a?void 0:a.toggleClasses)||null,i.toggleCountText=(null==a?void 0:a.toggleCountText)||null,i.toggleCountTextMinItems=(null==a?void 0:a.toggleCountTextMinItems)||1,i.tagsItemTemplate=(null==a?void 0:a.tagsItemTemplate)||null,i.tagsItemClasses=(null==a?void 0:a.tagsItemClasses)||null,i.tagsInputClasses=(null==a?void 0:a.tagsInputClasses)||null,i.dropdownTag=(null==a?void 0:a.dropdownTag)||null,i.dropdownClasses=(null==a?void 0:a.dropdownClasses)||null,i.dropdownDirectionClasses=(null==a?void 0:a.dropdownDirectionClasses)||null,i.dropdownSpace=(null==a?void 0:a.dropdownSpace)||10,i.searchWrapperTemplate=(null==a?void 0:a.searchWrapperTemplate)||null,i.searchWrapperClasses=(null==a?void 0:a.searchWrapperClasses)||"bg-white p-2 sticky top-0",i.searchClasses=(null==a?void 0:a.searchClasses)||"block w-[calc(100%-2rem)] text-sm border-gray-200 rounded-md focus:border-blue-500 focus:ring-blue-500 dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 py-2 px-3 my-2 mx-4",i.searchPlaceholder=(null==a?void 0:a.searchPlaceholder)||"Search...",i.searchNoResultText=(null==a?void 0:a.searchNoResultText)||"No options found...",i.searchNoResultClasses=(null==a?void 0:a.searchNoResultClasses)||"px-4 text-sm",i.optionTemplate=(null==a?void 0:a.optionTemplate)||null,i.optionTag=(null==a?void 0:a.optionTag)||null,i.optionClasses=(null==a?void 0:a.optionClasses)||null,i.extraMarkup=(null==a?void 0:a.extraMarkup)||null,i.descriptionClasses=(null==a?void 0:a.descriptionClasses)||null,i.iconClasses=(null==a?void 0:a.iconClasses)||null,i.isAddTagOnEnter=null===(o=null==a?void 0:a.isAddTagOnEnter)||void 0===o||o,i.animationInProcess=!1,i.selectOptions=[],i.tagsInputHelper=null,i.init(),i}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsSelectCollection,this),this.build()},e.prototype.build=function(){var t=this;if(this.el.style.display="none",this.el.children&&Array.from(this.el.children).filter((function(t){return t.value&&""!==t.value})).forEach((function(e){var n=e.getAttribute("data-hs-select-option");t.selectOptions=s(s([],t.selectOptions,!0),[{title:e.textContent,val:e.value,options:"undefined"!==n?JSON.parse(n):null}],!1)})),this.isMultiple){var e=Array.from(this.el.options).filter((function(t){return t.selected}));if(e){var n=[];e.forEach((function(t){n.push(t.value)})),this.value=n}}this.buildWrapper(),"tags"===this.mode?this.buildTags():this.buildToggle(),this.buildDropdown(),this.extraMarkup&&this.buildExtraMarkup()},e.prototype.buildWrapper=function(){var t=this;this.wrapper=document.createElement("div"),this.wrapper.classList.add("hs-select","relative"),"tags"===this.mode&&this.wrapper.addEventListener("click",(function(e){e.target.closest("[data-hs-select-dropdown]")||e.target.closest("[data-tag-value]")||t.tagsInput.focus()})),this.wrapperClasses&&(0,l.classToClassList)(this.wrapperClasses,this.wrapper),this.el.before(this.wrapper),this.wrapper.append(this.el)},e.prototype.buildExtraMarkup=function(){var t=this,e=function(e){t.wrapper.append((0,l.htmlToElement)(e))};Array.isArray(this.extraMarkup)?this.extraMarkup.forEach((function(t){return e(t)})):e(this.extraMarkup)},e.prototype.buildToggle=function(){var t,e,n,o=this;this.toggleTextWrapper=document.createElement("span"),this.toggleTextWrapper.classList.add("truncate"),this.toggle=(0,l.htmlToElement)(this.toggleTag||"<div></div>"),e=this.toggle.querySelector("[data-icon]"),n=this.toggle.querySelector("[data-title]"),!this.isMultiple&&e&&this.setToggleIcon(),!this.isMultiple&&n&&this.setToggleTitle(),this.isMultiple?this.toggleTextWrapper.innerHTML=this.value.length?this.stringFromValue():this.placeholder:this.toggleTextWrapper.innerHTML=(null===(t=this.getItemByValue(this.value))||void 0===t?void 0:t.title)||this.placeholder,n||this.toggle.append(this.toggleTextWrapper),this.toggleClasses&&(0,l.classToClassList)(this.toggleClasses,this.toggle),this.isDisabled&&this.toggle.classList.add("disabled"),this.wrapper&&this.wrapper.append(this.toggle),this.toggle.addEventListener("click",(function(){if(o.isDisabled)return!1;o.isOpened?o.close():o.open()}))},e.prototype.setToggleIcon=function(){var t,e,n=this.toggle.querySelector("[data-icon]");if(n.innerHTML="",n){var o=(0,l.htmlToElement)((null===(e=null===(t=this.getItemByValue(this.value))||void 0===t?void 0:t.options)||void 0===e?void 0:e.icon)||"");n.append(o),o?n.classList.remove("hidden"):n.classList.add("hidden")}},e.prototype.setToggleTitle=function(){var t,e=this.toggle.querySelector("[data-title]");if(e.classList.add("truncate"),e.innerHTML="",e){var n=(null===(t=this.getItemByValue(this.value))||void 0===t?void 0:t.title)||this.placeholder;e.innerHTML=n,this.toggle.append(e)}},e.prototype.buildTags=function(){this.buildTagsInput(),this.setTagsItems()},e.prototype.reassignTagsInputPlaceholder=function(t){this.tagsInput.placeholder=t,this.tagsInputHelper.innerHTML=t,this.calculateInputWidth()},e.prototype.buildTagsItem=function(t){var e,n,o,i,r,s,a,c=this,u=this.getItemByValue(t),d=document.createElement("div");if(d.setAttribute("data-tag-value",t),this.tagsItemClasses&&(0,l.classToClassList)(this.tagsItemClasses,d),this.tagsItemTemplate&&(i=(0,l.htmlToElement)(this.tagsItemTemplate),d.append(i)),null===(e=null==u?void 0:u.options)||void 0===e?void 0:e.icon){var p=(0,l.htmlToElement)(null===(n=null==u?void 0:u.options)||void 0===n?void 0:n.icon);(a=i?i.querySelector("[data-icon]"):document.createElement("span")).append(p),i||d.append(a)}i&&i.querySelector("[data-icon]")&&!(null===(o=null==u?void 0:u.options)||void 0===o?void 0:o.icon)&&i.querySelector("[data-icon]").classList.add("hidden"),(r=i?i.querySelector("[data-title]"):document.createElement("span")).textContent=u.title||"",i||d.append(r),i?s=i.querySelector("[data-remove]"):((s=document.createElement("span")).textContent="X",d.append(s)),s.addEventListener("click",(function(){c.value=c.value.filter((function(e){return e!==t})),c.selectedItems=c.selectedItems.filter((function(e){return e!==t})),c.value.length||c.reassignTagsInputPlaceholder(c.placeholder),c.unselectMultipleItems(),c.selectMultipleItems(),d.remove()})),this.wrapper.append(d)},e.prototype.getItemByValue=function(t){return this.selectOptions.find((function(e){return e.val===t}))},e.prototype.setTagsItems=function(){var t=this;this.value&&this.value.forEach((function(e){t.selectedItems.includes(e)||t.buildTagsItem(e),t.selectedItems=t.selectedItems.includes(e)?t.selectedItems:s(s([],t.selectedItems,!0),[e],!1)}))},e.prototype.buildTagsInput=function(){var t=this;this.tagsInput=document.createElement("input"),this.tagsInputClasses&&(0,l.classToClassList)(this.tagsInputClasses,this.tagsInput),this.tagsInput.addEventListener("focus",(function(){return t.open()})),this.tagsInput.addEventListener("input",(function(){return t.calculateInputWidth()})),this.tagsInput.addEventListener("input",(0,l.debounce)((function(e){return t.searchOptions(e.target.value)}))),this.tagsInput.addEventListener("keydown",(function(e){if("Enter"===e.key&&t.isAddTagOnEnter){var n=e.target.value;if(t.selectOptions.find((function(t){return t.val===n})))return!1;t.addSelectOption(n,n),t.buildOption(n,n),t.dropdown.querySelector('[data-value="'.concat(n,'"]')).click(),t.resetTagsInputField()}})),this.wrapper.append(this.tagsInput),setTimeout((function(){t.adjustInputWidth(),t.reassignTagsInputPlaceholder(t.value.length?"":t.placeholder)}))},e.prototype.buildDropdown=function(){var t=this;this.dropdown=(0,l.htmlToElement)(this.dropdownTag||"<div></div>"),this.dropdown.setAttribute("data-hs-select-dropdown",""),this.dropdown.classList.add("absolute","top-full"),this.isOpened||this.dropdown.classList.add("hidden"),this.dropdownClasses&&(0,l.classToClassList)(this.dropdownClasses,this.dropdown),this.wrapper&&this.wrapper.append(this.dropdown),this.dropdown&&this.hasSearch&&this.buildSearch(),this.selectOptions&&this.selectOptions.forEach((function(e,n){return t.buildOption(e.title,e.val,e.options,"".concat(n))}))},e.prototype.buildSearch=function(){var t,e=this;this.searchWrapper=(0,l.htmlToElement)(this.searchWrapperTemplate||"<div></div>"),this.searchWrapperClasses&&(0,l.classToClassList)(this.searchWrapperClasses,this.searchWrapper),t=this.searchWrapper.querySelector("[data-input]"),this.search=(0,l.htmlToElement)('<input type="text" />'),this.search.placeholder=this.searchPlaceholder,this.searchClasses&&(0,l.classToClassList)(this.searchClasses,this.search),this.search.addEventListener("input",(0,l.debounce)((function(t){return e.searchOptions(t.target.value)}))),t?t.append(this.search):this.searchWrapper.append(this.search),this.dropdown.append(this.searchWrapper)},e.prototype.buildOption=function(t,e,n,o){var i=this;void 0===o&&(o="1");var r=null,s=(0,l.htmlToElement)(this.optionTag||"<div></div>");if(s.setAttribute("data-value",e),s.setAttribute("data-title-value",t),s.setAttribute("tabIndex",o),s.classList.add("cursor-pointer"),this.optionTemplate&&(r=(0,l.htmlToElement)(this.optionTemplate),s.append(r)),r?r.querySelector("[data-title]").textContent=t||"":s.textContent=t||"",n){if(n.icon){var a=(0,l.htmlToElement)(n.icon);if(a.classList.add("mw-full"),r)r.querySelector("[data-icon]").append(a);else{var c=(0,l.htmlToElement)("<div></div>");this.iconClasses&&(0,l.classToClassList)(this.iconClasses,c),c.append(a),s.append(c)}}if(n.description)if(r)r.querySelector("[data-description]").append(n.description);else{var u=(0,l.htmlToElement)("<div></div>");u.textContent=n.description,this.descriptionClasses&&(0,l.classToClassList)(this.descriptionClasses,u),s.append(u)}}r&&r.querySelector("[data-icon]")&&!n&&!(null==n?void 0:n.icon)&&r.querySelector("[data-icon]").classList.add("hidden"),this.value&&(this.isMultiple?this.value.includes(e):this.value===e)&&s.classList.add("selected"),s.addEventListener("click",(function(){return i.onSelectOption(e)})),this.optionClasses&&(0,l.classToClassList)(this.optionClasses,s),this.dropdown&&this.dropdown.append(s)},e.prototype.destroyOption=function(t){var e=this.dropdown.querySelector('[data-value="'.concat(t,'"]'));if(!e)return!1;e.remove()},e.prototype.buildOriginalOption=function(t,e,n){var o=(0,l.htmlToElement)("<option></option>");o.setAttribute("value",e),o.setAttribute("data-hs-select-option",JSON.stringify(n)),o.innerText=t,this.el.append(o)},e.prototype.destroyOriginalOption=function(t){var e=this.el.querySelector('[value="'.concat(t,'"]'));if(!e)return!1;e.remove()},e.prototype.buildTagsInputHelper=function(){this.tagsInputHelper=document.createElement("span"),this.tagsInputHelper.style.fontSize=window.getComputedStyle(this.tagsInput).fontSize,this.tagsInputHelper.style.fontFamily=window.getComputedStyle(this.tagsInput).fontFamily,this.tagsInputHelper.style.fontWeight=window.getComputedStyle(this.tagsInput).fontWeight,this.tagsInputHelper.style.letterSpacing=window.getComputedStyle(this.tagsInput).letterSpacing,this.tagsInputHelper.style.visibility="hidden",this.tagsInputHelper.style.whiteSpace="pre",this.tagsInputHelper.style.position="absolute",this.wrapper.appendChild(this.tagsInputHelper)},e.prototype.calculateInputWidth=function(){this.tagsInputHelper.textContent=this.tagsInput.value||this.tagsInput.placeholder;var t=parseInt(window.getComputedStyle(this.tagsInput).paddingLeft)+parseInt(window.getComputedStyle(this.tagsInput).paddingRight),e=parseInt(window.getComputedStyle(this.tagsInput).borderLeftWidth)+parseInt(window.getComputedStyle(this.tagsInput).borderRightWidth),n=this.tagsInputHelper.offsetWidth+t+e,o=this.wrapper.offsetWidth-(parseInt(window.getComputedStyle(this.wrapper).paddingLeft)+parseInt(window.getComputedStyle(this.wrapper).paddingRight));this.tagsInput.style.width="".concat(Math.min(n,o)+2,"px")},e.prototype.adjustInputWidth=function(){this.buildTagsInputHelper(),this.calculateInputWidth()},e.prototype.onSelectOption=function(t){var e=this;if(this.clearSelections(),this.isMultiple?(this.value=this.value.includes(t)?Array.from(this.value).filter((function(e){return e!==t})):s(s([],Array.from(this.value),!0),[t],!1),this.selectMultipleItems(),this.setNewValue()):(this.value=t,this.selectSingleItem(),this.setNewValue()),this.fireEvent("change",this.value),(0,l.dispatch)("change.hs.select",this.el,this.value),"tags"===this.mode){var n=this.selectedItems.filter((function(t){return!e.value.includes(t)}));n.length&&n.forEach((function(t){e.selectedItems=e.selectedItems.filter((function(e){return e!==t})),e.wrapper.querySelector('[data-tag-value="'.concat(t,'"]')).remove()})),this.resetTagsInputField()}this.isMultiple||(this.toggle.querySelector("[data-icon]")&&this.setToggleIcon(),this.toggle.querySelector("[data-title]")&&this.setToggleTitle(),this.close()),this.value.length||"tags"!==this.mode||this.reassignTagsInputPlaceholder(this.placeholder),this.isOpened&&"tags"===this.mode&&this.tagsInput&&this.tagsInput.focus()},e.prototype.addSelectOption=function(t,e,n){this.selectOptions=s(s([],this.selectOptions,!0),[{title:t,val:e,options:n}],!1)},e.prototype.removeSelectOption=function(t){if(!!!this.selectOptions.some((function(e){return e.val===t})))return!1;this.selectOptions=this.selectOptions.filter((function(e){return e.val!==t}))},e.prototype.resetTagsInputField=function(){this.tagsInput.value="",this.reassignTagsInputPlaceholder(""),this.searchOptions("")},e.prototype.clearSelections=function(){Array.from(this.dropdown.children).forEach((function(t){t.classList.contains("selected")&&t.classList.remove("selected")})),Array.from(this.el.children).forEach((function(t){t.selected&&(t.selected=!1)}))},e.prototype.setNewValue=function(){"tags"===this.mode?this.setTagsItems():this.value.length?this.toggleTextWrapper.innerHTML=this.stringFromValue():this.toggleTextWrapper.innerHTML=this.placeholder},e.prototype.stringFromValue=function(){var t=this,e=[];return this.selectOptions.forEach((function(n){t.isMultiple?t.value.includes(n.val)&&e.push(n.title):t.value===n.val&&e.push(n.title)})),this.toggleCountText&&""!==this.toggleCountText&&e.length>=this.toggleCountTextMinItems?"".concat(e.length," ").concat(this.toggleCountText):e.join(", ")},e.prototype.selectSingleItem=function(){var t=this;Array.from(this.el.children).find((function(e){return t.value===e.value})).selected=!0,Array.from(this.dropdown.children).find((function(e){return t.value===e.getAttribute("data-value")})).classList.add("selected")},e.prototype.selectMultipleItems=function(){var t=this;Array.from(this.dropdown.children).filter((function(e){return t.value.includes(e.getAttribute("data-value"))})).forEach((function(t){return t.classList.add("selected")})),Array.from(this.el.children).filter((function(e){return t.value.includes(e.value)})).forEach((function(t){return t.selected=!0}))},e.prototype.unselectMultipleItems=function(){Array.from(this.dropdown.children).forEach((function(t){return t.classList.remove("selected")})),Array.from(this.el.children).forEach((function(t){return t.selected=!1}))},e.prototype.searchOptions=function(t){this.searchNoResult&&(this.searchNoResult.remove(),this.searchNoResult=null),this.searchNoResult=(0,l.htmlToElement)("<span></span>"),this.searchNoResult.innerText=this.searchNoResultText,(0,l.classToClassList)(this.searchNoResultClasses,this.searchNoResult);var e=this.dropdown.querySelectorAll("[data-value]"),n=!1;e.forEach((function(e){e.getAttribute("data-title-value").toLocaleLowerCase().includes(t.toLocaleLowerCase())?(e.classList.remove("hidden"),n=!0):e.classList.add("hidden")})),n||this.dropdown.append(this.searchNoResult)},e.prototype.eraseToggleIcon=function(){var t=this.toggle.querySelector("[data-icon]");t&&(t.innerHTML=null,t.classList.add("hidden"))},e.prototype.eraseToggleTitle=function(){var t=this.toggle.querySelector("[data-title]");t?t.innerHTML=this.placeholder:this.toggleTextWrapper.innerHTML=this.placeholder},e.prototype.destroy=function(){var t=this.el.parentElement.parentElement;this.el.classList.remove("hidden"),this.el.style.display="",t.prepend(this.el),t.querySelector(".hs-select").remove(),this.wrapper=null},e.prototype.open=function(){var t=this;if(this.animationInProcess)return!1;this.animationInProcess=!0,this.dropdown.classList.remove("hidden"),this.recalculateDirection(),setTimeout((function(){t.wrapper.classList.add("active"),t.dropdown.classList.add("opened"),t.hasSearch&&!t.preventSearchFocus&&t.search.focus(),t.animationInProcess=!1})),this.isOpened=!0},e.prototype.close=function(){var t,e,n,o=this;if(this.animationInProcess)return!1;this.animationInProcess=!0,this.wrapper.classList.remove("active"),this.dropdown.classList.remove("opened","bottom-full","top-full"),(null===(t=this.dropdownDirectionClasses)||void 0===t?void 0:t.bottom)&&this.dropdown.classList.remove(this.dropdownDirectionClasses.bottom),(null===(e=this.dropdownDirectionClasses)||void 0===e?void 0:e.top)&&this.dropdown.classList.remove(this.dropdownDirectionClasses.top),this.dropdown.style.marginTop="",this.dropdown.style.marginBottom="",(0,l.afterTransition)(this.dropdown,(function(){o.dropdown.classList.add("hidden"),o.hasSearch&&(o.search.value="",o.search.dispatchEvent(new Event("input",{bubbles:!0})),o.search.blur()),o.animationInProcess=!1})),null===(n=this.dropdown.querySelector(".hs-select-option-highlighted"))||void 0===n||n.classList.remove("hs-select-option-highlighted"),this.isOpened=!1},e.prototype.addOption=function(t){var e=this,n="".concat(this.selectOptions.length),o=function(t){var o=t.title,i=t.val,r=t.options;!!e.selectOptions.some((function(t){return t.val===i}))||(e.addSelectOption(o,i,r),e.buildOption(o,i,r,n),e.buildOriginalOption(o,i,r))};Array.isArray(t)?t.forEach((function(t){o(t)})):o(t)},e.prototype.removeOption=function(t){var e=this,n=function(t){!!e.selectOptions.some((function(e){return e.val===t}))&&(e.removeSelectOption(t),e.destroyOption(t),e.destroyOriginalOption(t),e.value===t&&(e.value=null,e.eraseToggleTitle(),e.eraseToggleIcon()))};Array.isArray(t)?t.forEach((function(t){n(t)})):n(t)},e.prototype.recalculateDirection=function(){var t,e,n,o;(0,l.isEnoughSpace)(this.dropdown,this.toggle||this.tagsInput,"bottom",this.dropdownSpace,this.viewport)?(this.dropdown.classList.remove("bottom-full"),(null===(t=this.dropdownDirectionClasses)||void 0===t?void 0:t.bottom)&&this.dropdown.classList.remove(this.dropdownDirectionClasses.bottom),this.dropdown.style.marginBottom="",this.dropdown.classList.add("top-full"),(null===(e=this.dropdownDirectionClasses)||void 0===e?void 0:e.top)&&this.dropdown.classList.add(this.dropdownDirectionClasses.top),this.dropdown.style.marginTop="".concat(this.dropdownSpace,"px")):(this.dropdown.classList.remove("top-full"),(null===(n=this.dropdownDirectionClasses)||void 0===n?void 0:n.top)&&this.dropdown.classList.remove(this.dropdownDirectionClasses.top),this.dropdown.style.marginTop="",this.dropdown.classList.add("bottom-full"),(null===(o=this.dropdownDirectionClasses)||void 0===o?void 0:o.bottom)&&this.dropdown.classList.add(this.dropdownDirectionClasses.bottom),this.dropdown.style.marginBottom="".concat(this.dropdownSpace,"px"))},e.getInstance=function(t,e){var n=window.$hsSelectCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsSelectCollection||(window.$hsSelectCollection=[]),document.querySelectorAll("[data-hs-select]:not(.--prevent-on-load-init)").forEach((function(t){if(!window.$hsSelectCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))){var n=t.getAttribute("data-hs-select"),o=n?JSON.parse(n):{};new e(t,o)}})),window.$hsSelectCollection&&(window.addEventListener("click",(function(t){var n=t.target;e.closeCurrentlyOpened(n)})),document.addEventListener("keydown",(function(t){return e.accessibility(t)})))},e.close=function(t){var e=window.$hsSelectCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.isOpened&&e.element.close()},e.closeCurrentlyOpened=function(t){if(void 0===t&&(t=null),!t.closest(".hs-select.active")){var e=window.$hsSelectCollection.filter((function(t){return t.element.isOpened}))||null;e&&e.forEach((function(t){t.element.close()}))}},e.accessibility=function(t){if(window.$hsSelectCollection.find((function(t){return t.element.isOpened}))&&c.SELECT_ACCESSIBILITY_KEY_SET.includes(t.code)&&!t.metaKey)switch(t.code){case"Escape":t.preventDefault(),this.onEscape();break;case"ArrowUp":t.preventDefault(),this.onArrow();break;case"ArrowDown":t.preventDefault(),this.onArrow(!1);break;case"Tab":t.preventDefault(),this.onTab(t.shiftKey);break;case"Home":t.preventDefault(),this.onStartEnd();break;case"End":t.preventDefault(),this.onStartEnd(!1);break;case"Enter":t.preventDefault(),this.onEnter(t)}},e.onEscape=function(){var t=window.$hsSelectCollection.find((function(t){return t.element.isOpened}));t&&t.element.close()},e.onArrow=function(t){void 0===t&&(t=!0);var e=window.$hsSelectCollection.find((function(t){return t.element.isOpened}));if(e){var n=e.element.dropdown;if(!n)return!1;var o=(t?Array.from(n.querySelectorAll(":scope > *:not(.hidden)")).reverse():Array.from(n.querySelectorAll(":scope > *:not(.hidden)"))).filter((function(t){return!t.classList.contains("disabled")})),i=n.querySelector(".hs-select-option-highlighted");i||o[0].classList.add("hs-select-option-highlighted");var r=o.findIndex((function(t){return t===i}));r+1<o.length&&r++,o[r].focus(),i&&i.classList.remove("hs-select-option-highlighted"),o[r].classList.add("hs-select-option-highlighted")}},e.onTab=function(t){void 0===t&&(t=!0);var e=window.$hsSelectCollection.find((function(t){return t.element.isOpened}));if(e){var n=e.element.dropdown;if(!n)return!1;var o=(t?Array.from(n.querySelectorAll(":scope >  *:not(.hidden)")).reverse():Array.from(n.querySelectorAll(":scope >  *:not(.hidden)"))).filter((function(t){return!t.classList.contains("disabled")})),i=n.querySelector(".hs-select-option-highlighted");i||o[0].classList.add("hs-select-option-highlighted");var r=o.findIndex((function(t){return t===i}));if(!(r+1<o.length))return i&&i.classList.remove("hs-select-option-highlighted"),e.element.close(),e.element.toggle.focus(),!1;o[++r].focus(),i&&i.classList.remove("hs-select-option-highlighted"),o[r].classList.add("hs-select-option-highlighted")}},e.onStartEnd=function(t){void 0===t&&(t=!0);var e=window.$hsSelectCollection.find((function(t){return t.element.isOpened}));if(e){var n=e.element.dropdown;if(!n)return!1;var o=(t?Array.from(n.querySelectorAll(":scope >  *:not(.hidden)")):Array.from(n.querySelectorAll(":scope >  *:not(.hidden)")).reverse()).filter((function(t){return!t.classList.contains("disabled")})),i=n.querySelector(".hs-select-option-highlighted");o.length&&(o[0].focus(),i&&i.classList.remove("hs-select-option-highlighted"),o[0].classList.add("hs-select-option-highlighted"))}},e.onEnter=function(t){var e=t.target.previousSibling;if(window.$hsSelectCollection.find((function(t){return t.element.el===e}))){var n=window.$hsSelectCollection.find((function(t){return t.element.isOpened})),o=window.$hsSelectCollection.find((function(t){return t.element.el===e}));n.element.close(),o.element.open()}else{(o=window.$hsSelectCollection.find((function(t){return t.element.isOpened})))&&o.element.onSelectOption(t.target.dataset.value||"")}},e}(a.default);window.addEventListener("load",(function(){u.autoInit()})),document.addEventListener("scroll",(function(){if(!window.$hsSelectCollection)return!1;var t=window.$hsSelectCollection.find((function(t){return t.element.isOpened}));t&&t.element.recalculateDirection()})),"undefined"!=typeof window&&(window.HSSelect=u),e.default=u},957:function(t,e,n){
/*
 * HSStepper
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-stepper"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.currentIndex=(null==l?void 0:l.currentIndex)||1,o.mode=(null==l?void 0:l.mode)||"linear",o.isCompleted=void 0!==(null==l?void 0:l.isCompleted)&&(null==l?void 0:l.isCompleted),o.totalSteps=1,o.navItems=[],o.contentItems=[],o.init(),o}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsStepperCollection,this),this.buildNav(),this.buildContent(),this.buildButtons(),this.setTotalSteps()},e.prototype.getUncompletedSteps=function(t){return void 0===t&&(t=!1),this.navItems.filter((function(e){var n=e.isCompleted,o=e.isSkip;return t?!n||o:!n&&!o}))},e.prototype.setTotalSteps=function(){var t=this;this.navItems.forEach((function(e){var n=e.index;n>t.totalSteps&&(t.totalSteps=n)}))},e.prototype.buildNav=function(){var t=this;this.el.querySelectorAll("[data-hs-stepper-nav-item]").forEach((function(e){return t.addNavItem(e)})),this.navItems.forEach((function(e){return t.buildNavItem(e)}))},e.prototype.buildNavItem=function(t){var e=this,n=t.index,o=t.isDisabled,i=t.el;n===this.currentIndex&&this.setCurrentNavItem(),("linear"!==this.mode||o)&&i.addEventListener("click",(function(){return e.handleNavItemClick(t)}))},e.prototype.addNavItem=function(t){var e=JSON.parse(t.getAttribute("data-hs-stepper-nav-item")),n=e.index,o=e.isFinal,i=void 0!==o&&o,r=e.isCompleted,s=void 0!==r&&r,l=e.isSkip,a=void 0!==l&&l,c=e.isOptional,u=void 0!==c&&c,d=e.isDisabled,p=void 0!==d&&d,h=e.isProcessed,f=void 0!==h&&h,m=e.hasError,v=void 0!==m&&m;s&&t.classList.add("success"),a&&t.classList.add("skipped"),p&&("BUTTON"!==t.tagName&&"INPUT"!==t.tagName||t.setAttribute("disabled","disabled"),t.classList.add("disabled")),v&&t.classList.add("error"),this.navItems.push({index:n,isFinal:i,isCompleted:s,isSkip:a,isOptional:u,isDisabled:p,isProcessed:f,hasError:v,el:t})},e.prototype.setCurrentNavItem=function(){var t=this;this.navItems.forEach((function(e){var n=e.index,o=e.el;n===t.currentIndex?t.setCurrentNavItemActions(o):t.unsetCurrentNavItemActions(o)}))},e.prototype.setCurrentNavItemActions=function(t){t.classList.add("active"),this.fireEvent("active",this.currentIndex),(0,s.dispatch)("active.hs.stepper",this.el,this.currentIndex)},e.prototype.getNavItem=function(t){return void 0===t&&(t=this.currentIndex),this.navItems.find((function(e){return e.index===t}))},e.prototype.setProcessedNavItemActions=function(t){t.isProcessed=!0,t.el.classList.add("processed")},e.prototype.setErrorNavItemActions=function(t){t.hasError=!0,t.el.classList.add("error")},e.prototype.unsetCurrentNavItemActions=function(t){t.classList.remove("active")},e.prototype.handleNavItemClick=function(t){var e=t.index;this.currentIndex=e,this.setCurrentNavItem(),this.setCurrentContentItem(),this.checkForTheFirstStep()},e.prototype.buildContent=function(){var t=this;this.el.querySelectorAll("[data-hs-stepper-content-item]").forEach((function(e){return t.addContentItem(e)})),this.navItems.forEach((function(e){return t.buildContentItem(e)}))},e.prototype.buildContentItem=function(t){t.index===this.currentIndex&&this.setCurrentContentItem()},e.prototype.addContentItem=function(t){var e=JSON.parse(t.getAttribute("data-hs-stepper-content-item")),n=e.index,o=e.isFinal,i=void 0!==o&&o,r=e.isCompleted,s=void 0!==r&&r,l=e.isSkip,a=void 0!==l&&l;s&&t.classList.add("success"),a&&t.classList.add("skipped"),this.contentItems.push({index:n,isFinal:i,isCompleted:s,isSkip:a,el:t})},e.prototype.setCurrentContentItem=function(){var t=this;if(this.isCompleted){var e=this.contentItems.find((function(t){return t.isFinal})),n=this.contentItems.filter((function(t){return!t.isFinal}));return e.el.style.display="",n.forEach((function(t){return t.el.style.display="none"})),!1}this.contentItems.forEach((function(e){var n=e.index,o=e.el;n===t.currentIndex?t.setCurrentContentItemActions(o):t.unsetCurrentContentItemActions(o)}))},e.prototype.hideAllContentItems=function(){this.contentItems.forEach((function(t){return t.el.style.display="none"}))},e.prototype.setCurrentContentItemActions=function(t){t.style.display=""},e.prototype.unsetCurrentContentItemActions=function(t){t.style.display="none"},e.prototype.disableAll=function(){var t=this.getNavItem(this.currentIndex);t.hasError=!1,t.isCompleted=!1,t.isDisabled=!1,t.el.classList.remove("error","success"),this.disableButtons()},e.prototype.disableNavItemActions=function(t){t.isDisabled=!0,t.el.classList.add("disabled")},e.prototype.enableNavItemActions=function(t){t.isDisabled=!1,t.el.classList.remove("disabled")},e.prototype.buildButtons=function(){this.backBtn=this.el.querySelector("[data-hs-stepper-back-btn]"),this.nextBtn=this.el.querySelector("[data-hs-stepper-next-btn]"),this.skipBtn=this.el.querySelector("[data-hs-stepper-skip-btn]"),this.completeStepBtn=this.el.querySelector("[data-hs-stepper-complete-step-btn]"),this.finishBtn=this.el.querySelector("[data-hs-stepper-finish-btn]"),this.resetBtn=this.el.querySelector("[data-hs-stepper-reset-btn]"),this.buildBackButton(),this.buildNextButton(),this.buildSkipButton(),this.buildCompleteStepButton(),this.buildFinishButton(),this.buildResetButton()},e.prototype.buildBackButton=function(){var t=this;this.backBtn&&(this.checkForTheFirstStep(),this.backBtn.addEventListener("click",(function(){if(t.handleBackButtonClick(),"linear"===t.mode){var e=t.navItems.find((function(e){return e.index===t.currentIndex})),n=t.contentItems.find((function(e){return e.index===t.currentIndex}));if(!e||!n)return;e.isCompleted&&(e.isCompleted=!1,e.isSkip=!1,e.el.classList.remove("success","skipped")),n.isCompleted&&(n.isCompleted=!1,n.isSkip=!1,n.el.classList.remove("success","skipped")),"linear"===t.mode&&t.currentIndex!==t.totalSteps&&(t.nextBtn&&(t.nextBtn.style.display=""),t.completeStepBtn&&(t.completeStepBtn.style.display="")),t.showSkipButton(),t.showFinishButton(),t.showCompleteStepButton()}})))},e.prototype.handleBackButtonClick=function(){1!==this.currentIndex&&("linear"===this.mode&&this.removeOptionalClasses(),this.currentIndex--,"linear"===this.mode&&this.removeOptionalClasses(),this.setCurrentNavItem(),this.setCurrentContentItem(),this.checkForTheFirstStep(),this.completeStepBtn&&this.changeTextAndDisableCompleteButtonIfStepCompleted(),this.fireEvent("back",this.currentIndex),(0,s.dispatch)("back.hs.stepper",this.el,this.currentIndex))},e.prototype.checkForTheFirstStep=function(){1===this.currentIndex?this.setToDisabled(this.backBtn):this.setToNonDisabled(this.backBtn)},e.prototype.setToDisabled=function(t){"BUTTON"!==t.tagName&&"INPUT"!==t.tagName||t.setAttribute("disabled","disabled"),t.classList.add("disabled")},e.prototype.setToNonDisabled=function(t){"BUTTON"!==t.tagName&&"INPUT"!==t.tagName||t.removeAttribute("disabled"),t.classList.remove("disabled")},e.prototype.buildNextButton=function(){var t=this;this.nextBtn&&this.nextBtn.addEventListener("click",(function(){var e;if(t.fireEvent("beforeNext",t.currentIndex),(0,s.dispatch)("beforeNext.hs.stepper",t.el,t.currentIndex),null===(e=t.getNavItem(t.currentIndex))||void 0===e?void 0:e.isProcessed)return t.disableAll(),!1;t.goToNext()}))},e.prototype.unsetProcessedNavItemActions=function(t){t.isProcessed=!1,t.el.classList.remove("processed")},e.prototype.handleNextButtonClick=function(t){if(void 0===t&&(t=!0),t)this.currentIndex===this.totalSteps?this.currentIndex=1:this.currentIndex++;else{var e=this.getUncompletedSteps();if(1===e.length){var n=e[0].index;this.currentIndex=n}else{if(this.currentIndex===this.totalSteps)return;this.currentIndex++}}"linear"===this.mode&&this.removeOptionalClasses(),this.setCurrentNavItem(),this.setCurrentContentItem(),this.checkForTheFirstStep(),this.completeStepBtn&&this.changeTextAndDisableCompleteButtonIfStepCompleted(),this.showSkipButton(),this.showFinishButton(),this.showCompleteStepButton(),this.fireEvent("next",this.currentIndex),(0,s.dispatch)("next.hs.stepper",this.el,this.currentIndex)},e.prototype.removeOptionalClasses=function(){var t=this,e=this.navItems.find((function(e){return e.index===t.currentIndex})),n=this.contentItems.find((function(e){return e.index===t.currentIndex}));e.isSkip=!1,e.hasError=!1,e.isDisabled=!1,n.isSkip=!1,e.el.classList.remove("skipped","success","error"),n.el.classList.remove("skipped","success","error")},e.prototype.buildSkipButton=function(){var t=this;this.skipBtn&&(this.showSkipButton(),this.skipBtn.addEventListener("click",(function(){t.handleSkipButtonClick(),"linear"===t.mode&&t.currentIndex===t.totalSteps&&(t.nextBtn&&(t.nextBtn.style.display="none"),t.completeStepBtn&&(t.completeStepBtn.style.display="none"),t.finishBtn&&(t.finishBtn.style.display=""))})))},e.prototype.setSkipItem=function(t){var e=this,n=this.navItems.find((function(n){return n.index===(t||e.currentIndex)})),o=this.contentItems.find((function(n){return n.index===(t||e.currentIndex)}));n&&o&&(this.setSkipItemActions(n),this.setSkipItemActions(o))},e.prototype.setSkipItemActions=function(t){t.isSkip=!0,t.el.classList.add("skipped")},e.prototype.showSkipButton=function(){var t=this;if(this.skipBtn){var e=this.navItems.find((function(e){return e.index===t.currentIndex})).isOptional;this.skipBtn.style.display=e?"":"none"}},e.prototype.handleSkipButtonClick=function(){this.setSkipItem(),this.handleNextButtonClick(),this.fireEvent("skip",this.currentIndex),(0,s.dispatch)("skip.hs.stepper",this.el,this.currentIndex)},e.prototype.buildCompleteStepButton=function(){var t=this;this.completeStepBtn&&(this.completeStepBtnDefaultText=this.completeStepBtn.innerText,this.completeStepBtn.addEventListener("click",(function(){return t.handleCompleteStepButtonClick()})))},e.prototype.changeTextAndDisableCompleteButtonIfStepCompleted=function(){var t=this,e=this.navItems.find((function(e){return e.index===t.currentIndex})),n=JSON.parse(this.completeStepBtn.getAttribute("data-hs-stepper-complete-step-btn")).completedText;e&&(e.isCompleted?(this.completeStepBtn.innerText=n||this.completeStepBtnDefaultText,this.completeStepBtn.setAttribute("disabled","disabled"),this.completeStepBtn.classList.add("disabled")):(this.completeStepBtn.innerText=this.completeStepBtnDefaultText,this.completeStepBtn.removeAttribute("disabled"),this.completeStepBtn.classList.remove("disabled")))},e.prototype.setCompleteItem=function(t){var e=this,n=this.navItems.find((function(n){return n.index===(t||e.currentIndex)})),o=this.contentItems.find((function(n){return n.index===(t||e.currentIndex)}));n&&o&&(this.setCompleteItemActions(n),this.setCompleteItemActions(o))},e.prototype.setCompleteItemActions=function(t){t.isCompleted=!0,t.el.classList.add("success")},e.prototype.showCompleteStepButton=function(){this.completeStepBtn&&(1===this.getUncompletedSteps().length?this.completeStepBtn.style.display="none":this.completeStepBtn.style.display="")},e.prototype.handleCompleteStepButtonClick=function(){this.setCompleteItem(),this.fireEvent("complete",this.currentIndex),(0,s.dispatch)("complete.hs.stepper",this.el,this.currentIndex),this.handleNextButtonClick(!1),this.showFinishButton(),this.showCompleteStepButton(),this.checkForTheFirstStep(),this.completeStepBtn&&this.changeTextAndDisableCompleteButtonIfStepCompleted(),this.showSkipButton()},e.prototype.buildFinishButton=function(){var t=this;this.finishBtn&&(this.isCompleted&&this.setCompleted(),this.finishBtn.addEventListener("click",(function(){return t.handleFinishButtonClick()})))},e.prototype.setCompleted=function(){this.el.classList.add("completed")},e.prototype.unsetCompleted=function(){this.el.classList.remove("completed")},e.prototype.showFinishButton=function(){this.finishBtn&&(1===this.getUncompletedSteps().length?this.finishBtn.style.display="":this.finishBtn.style.display="none")},e.prototype.handleFinishButtonClick=function(){var t=this,e=this.getUncompletedSteps(),n=this.getUncompletedSteps(!0),o=this.contentItems.find((function(t){return t.isFinal})).el;e.length&&e.forEach((function(e){var n=e.index;return t.setCompleteItem(n)})),this.currentIndex=this.totalSteps,this.setCurrentNavItem(),this.hideAllContentItems();var i=this.navItems.find((function(e){return e.index===t.currentIndex}));(i?i.el:null).classList.remove("active"),o.style.display="block",this.backBtn&&(this.backBtn.style.display="none"),this.nextBtn&&(this.nextBtn.style.display="none"),this.skipBtn&&(this.skipBtn.style.display="none"),this.completeStepBtn&&(this.completeStepBtn.style.display="none"),this.finishBtn&&(this.finishBtn.style.display="none"),this.resetBtn&&(this.resetBtn.style.display=""),n.length<=1&&(this.isCompleted=!0,this.setCompleted()),this.fireEvent("finish",this.currentIndex),(0,s.dispatch)("finish.hs.stepper",this.el,this.currentIndex)},e.prototype.buildResetButton=function(){var t=this;this.resetBtn&&this.resetBtn.addEventListener("click",(function(){return t.handleResetButtonClick()}))},e.prototype.handleResetButtonClick=function(){var t=this;this.backBtn&&(this.backBtn.style.display=""),this.nextBtn&&(this.nextBtn.style.display=""),this.completeStepBtn&&(this.completeStepBtn.style.display="",this.completeStepBtn.innerText=this.completeStepBtnDefaultText,this.completeStepBtn.removeAttribute("disabled"),this.completeStepBtn.classList.remove("disabled")),this.resetBtn&&(this.resetBtn.style.display="none"),this.navItems.forEach((function(e){var n=e.el;e.isSkip=!1,e.isCompleted=!1,t.unsetCurrentNavItemActions(n),n.classList.remove("success","skipped")})),this.contentItems.forEach((function(e){var n=e.el;e.isSkip=!1,e.isCompleted=!1,t.unsetCurrentContentItemActions(n),n.classList.remove("success","skipped")})),this.currentIndex=1,this.setCurrentNavItem(),this.setCurrentContentItem(),this.showFinishButton(),this.showCompleteStepButton(),this.checkForTheFirstStep(),this.unsetCompleted(),this.isCompleted=!1,this.fireEvent("reset",this.currentIndex),(0,s.dispatch)("reset.hs.stepper",this.el,this.currentIndex)},e.prototype.setProcessedNavItem=function(t){var e=this.getNavItem(t);e&&this.setProcessedNavItemActions(e)},e.prototype.unsetProcessedNavItem=function(t){var e=this.getNavItem(t);e&&this.unsetProcessedNavItemActions(e)},e.prototype.goToNext=function(){"linear"===this.mode&&this.setCompleteItem(),this.handleNextButtonClick("linear"!==this.mode),"linear"===this.mode&&this.currentIndex===this.totalSteps&&(this.nextBtn&&(this.nextBtn.style.display="none"),this.completeStepBtn&&(this.completeStepBtn.style.display="none"))},e.prototype.disableButtons=function(){this.backBtn&&this.setToDisabled(this.backBtn),this.nextBtn&&this.setToDisabled(this.nextBtn)},e.prototype.enableButtons=function(){this.backBtn&&this.setToNonDisabled(this.backBtn),this.nextBtn&&this.setToNonDisabled(this.nextBtn)},e.prototype.setErrorNavItem=function(t){var e=this.getNavItem(t);e&&this.setErrorNavItemActions(e)},e.getInstance=function(t,e){var n=window.$hsStepperCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsStepperCollection||(window.$hsStepperCollection=[]),document.querySelectorAll("[data-hs-stepper]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsStepperCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSStepper=l),e.default=l},983:function(t,e,n){
/*
 * HSStrongPassword
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this;o.isOpened=!1,o.strength=0,o.passedRules=new Set;var i=e.getAttribute("data-hs-strong-password"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.target=(null==l?void 0:l.target)?"string"==typeof(null==l?void 0:l.target)?document.querySelector(l.target):l.target:null,o.hints=(null==l?void 0:l.hints)?"string"==typeof(null==l?void 0:l.hints)?document.querySelector(l.hints):l.hints:null,o.stripClasses=(null==l?void 0:l.stripClasses)||null,o.minLength=(null==l?void 0:l.minLength)||6,o.mode=(null==l?void 0:l.mode)||"default",o.popoverSpace=(null==l?void 0:l.popoverSpace)||10,o.checksExclude=(null==l?void 0:l.checksExclude)||[],o.availableChecks=["lowercase","uppercase","numbers","special-characters","min-length"].filter((function(t){return!o.checksExclude.includes(t)})),o.specialCharactersSet=(null==l?void 0:l.specialCharactersSet)||"!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~",o.target&&o.init(),o}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsStrongPasswordCollection,this),this.availableChecks.length&&this.build()},e.prototype.build=function(){var t=this;this.buildStrips(),this.hints&&this.buildHints(),this.setStrength(this.target.value),this.target.addEventListener("input",(function(e){t.setStrength(e.target.value)}))},e.prototype.buildStrips=function(){if(this.el.innerHTML="",this.stripClasses)for(var t=0;t<this.availableChecks.length;t++){var e=(0,s.htmlToElement)("<div></div>");(0,s.classToClassList)(this.stripClasses,e),this.el.append(e)}},e.prototype.buildHints=function(){var t=this;this.weakness=this.hints.querySelector("[data-hs-strong-password-hints-weakness-text]")||null,this.rules=Array.from(this.hints.querySelectorAll("[data-hs-strong-password-hints-rule-text]"))||null,this.rules.forEach((function(e){var n,o=e.getAttribute("data-hs-strong-password-hints-rule-text");(null===(n=t.checksExclude)||void 0===n?void 0:n.includes(o))&&e.remove()})),this.weakness&&this.buildWeakness(),this.rules&&this.buildRules(),"popover"===this.mode&&(this.target.addEventListener("focus",(function(){t.isOpened=!0,t.hints.classList.remove("hidden"),t.hints.classList.add("block"),t.recalculateDirection()})),this.target.addEventListener("blur",(function(){t.isOpened=!1,t.hints.classList.remove("block","bottom-full","top-full"),t.hints.classList.add("hidden"),t.hints.style.marginTop="",t.hints.style.marginBottom=""})))},e.prototype.buildWeakness=function(){var t=this;this.checkStrength(this.target.value),this.setWeaknessText(),this.target.addEventListener("input",(function(){return setTimeout((function(){return t.setWeaknessText()}))}))},e.prototype.buildRules=function(){var t=this;this.setRulesText(),this.target.addEventListener("input",(function(){return setTimeout((function(){return t.setRulesText()}))}))},e.prototype.setWeaknessText=function(){var t=this.weakness.getAttribute("data-hs-strong-password-hints-weakness-text"),e=JSON.parse(t);this.weakness.textContent=e[this.strength]},e.prototype.setRulesText=function(){var t=this;this.rules.forEach((function(e){var n=e.getAttribute("data-hs-strong-password-hints-rule-text");t.checkIfPassed(e,t.passedRules.has(n))}))},e.prototype.togglePopover=function(){var t=this.el.querySelector(".popover");t&&t.classList.toggle("show")},e.prototype.checkStrength=function(t){var e=new Set,n={lowercase:/[a-z]+/,uppercase:/[A-Z]+/,numbers:/[0-9]+/,"special-characters":new RegExp("[".concat(this.specialCharactersSet,"]"))},o=0;return this.availableChecks.includes("lowercase")&&t.match(n.lowercase)&&(o+=1,e.add("lowercase")),this.availableChecks.includes("uppercase")&&t.match(n.uppercase)&&(o+=1,e.add("uppercase")),this.availableChecks.includes("numbers")&&t.match(n.numbers)&&(o+=1,e.add("numbers")),this.availableChecks.includes("special-characters")&&t.match(n["special-characters"])&&(o+=1,e.add("special-characters")),this.availableChecks.includes("min-length")&&t.length>=this.minLength&&(o+=1,e.add("min-length")),t.length||(o=0),o===this.availableChecks.length?this.el.classList.add("accepted"):this.el.classList.remove("accepted"),this.strength=o,this.passedRules=e,{strength:this.strength,rules:this.passedRules}},e.prototype.checkIfPassed=function(t,e){void 0===e&&(e=!1);var n=t.querySelector("[data-check]"),o=t.querySelector("[data-uncheck]");e?(t.classList.add("active"),n.classList.remove("hidden"),o.classList.add("hidden")):(t.classList.remove("active"),n.classList.add("hidden"),o.classList.remove("hidden"))},e.prototype.setStrength=function(t){var e=this.checkStrength(t),n=e.strength,o={strength:n,rules:e.rules};this.hideStrips(n),this.fireEvent("change",o),(0,s.dispatch)("change.hs.strongPassword",this.el,o)},e.prototype.hideStrips=function(t){Array.from(this.el.children).forEach((function(e,n){n<t?e.classList.add("passed"):e.classList.remove("passed")}))},e.prototype.recalculateDirection=function(){(0,s.isEnoughSpace)(this.hints,this.target,"bottom",this.popoverSpace)?(this.hints.classList.remove("bottom-full"),this.hints.classList.add("top-full"),this.hints.style.marginBottom="",this.hints.style.marginTop="".concat(this.popoverSpace,"px")):(this.hints.classList.remove("top-full"),this.hints.classList.add("bottom-full"),this.hints.style.marginTop="",this.hints.style.marginBottom="".concat(this.popoverSpace,"px"))},e.getInstance=function(t){var e=window.$hsStrongPasswordCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return e?e.element:null},e.autoInit=function(){window.$hsStrongPasswordCollection||(window.$hsStrongPasswordCollection=[]),document.querySelectorAll("[data-hs-strong-password]:not(.--prevent-on-load-init)").forEach((function(t){if(!window.$hsStrongPasswordCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))){var n=t.getAttribute("data-hs-strong-password"),o=n?JSON.parse(n):{};new e(t,o)}}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),document.addEventListener("scroll",(function(){if(!window.$hsStrongPasswordCollection)return!1;var t=window.$hsStrongPasswordCollection.find((function(t){return t.element.isOpened}));t&&t.element.recalculateDirection()})),"undefined"!=typeof window&&(window.HSStrongPassword=l),e.default=l},949:function(t,e,n){
/*
 * HSTabs
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var r=n(969),s=n(737),l=n(190),a=function(t){function e(e,n,o){var i=t.call(this,e,n,o)||this;return i.toggles=i.el.querySelectorAll("[data-hs-tab]"),i.extraToggleId=i.el.getAttribute("hs-data-tab-select"),i.extraToggle=document.querySelector(i.extraToggleId),i.current=Array.from(i.toggles).find((function(t){return t.classList.contains("active")})),i.currentContentId=i.current.getAttribute("data-hs-tab"),i.currentContent=document.querySelector(i.currentContentId),i.prev=null,i.prevContentId=null,i.prevContent=null,i.init(),i}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsTabsCollection,this),this.toggles.forEach((function(e){e.addEventListener("click",(function(){return t.open(e)}))})),this.extraToggle&&this.extraToggle.addEventListener("change",(function(e){return t.change(e)}))},e.prototype.open=function(t){this.prev=this.current,this.prevContentId=this.currentContentId,this.prevContent=this.currentContent,this.current=t,this.currentContentId=this.current.getAttribute("data-hs-tab"),this.currentContent=document.querySelector(this.currentContentId),this.prev.classList.remove("active"),this.prevContent.classList.add("hidden"),this.current.classList.add("active"),this.currentContent.classList.remove("hidden"),this.fireEvent("change",{el:t,prev:this.prevContentId,current:this.currentContentId}),(0,r.dispatch)("change.hs.tab",t,{el:t,prev:this.prevContentId,current:this.currentContentId})},e.prototype.change=function(t){var e=document.querySelector('[data-hs-tab="'.concat(t.target.value,'"]'));e&&e.click()},e.getInstance=function(t,e){var n=window.$hsTabsCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsTabsCollection||(window.$hsTabsCollection=[]),document.querySelectorAll('[role="tablist"]:not(select):not(.--prevent-on-load-init)').forEach((function(t){window.$hsTabsCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)})),window.$hsTabsCollection&&document.addEventListener("keydown",(function(t){return e.accessibility(t)}))},e.open=function(t){var e=window.$hsTabsCollection.find((function(e){return Array.from(e.element.toggles).includes("string"==typeof t?document.querySelector(t):t)})),n=Array.from(e.element.toggles).find((function(e){return e===("string"==typeof t?document.querySelector(t):t)}));n&&!n.classList.contains("active")&&e.element.open(n)},e.accessibility=function(t){var e=document.querySelector("[data-hs-tab]:focus");if(e&&l.TABS_ACCESSIBILITY_KEY_SET.includes(t.code)&&!t.metaKey){var n=e.closest('[role="tablist"]').getAttribute("data-hs-tabs-vertical");switch(t.preventDefault(),t.code){case"true"===n?"ArrowUp":"ArrowLeft":this.onArrow();break;case"true"===n?"ArrowDown":"ArrowRight":this.onArrow(!1);break;case"Home":this.onStartEnd();break;case"End":this.onStartEnd(!1)}}},e.onArrow=function(t){void 0===t&&(t=!0);var e=document.querySelector("[data-hs-tab]:focus").closest('[role="tablist"]'),n=window.$hsTabsCollection.find((function(t){return t.element.el===e}));if(n){var o=t?Array.from(n.element.toggles).reverse():Array.from(n.element.toggles),i=o.find((function(t){return document.activeElement===t})),r=o.findIndex((function(t){return t===i}));o[r=r+1<o.length?r+1:0].focus(),o[r].click()}},e.onStartEnd=function(t){void 0===t&&(t=!0);var e=document.querySelector("[data-hs-tab]:focus").closest('[role="tablist"]'),n=window.$hsTabsCollection.find((function(t){return t.element.el===e}));if(n){var o=t?Array.from(n.element.toggles):Array.from(n.element.toggles).reverse();o.length&&(o[0].focus(),o[0].click())}},e.on=function(t,e,n){var o=window.$hsTabsCollection.find((function(t){return Array.from(t.element.toggles).includes("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(s.default);window.addEventListener("load",(function(){a.autoInit()})),"undefined"!=typeof window&&(window.HSTabs=a),e.default=a},557:function(t,e,n){var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-theme-switch"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.theme=(null==l?void 0:l.theme)||localStorage.getItem("hs_theme")||"default",o.themeSet=["light","dark","default"],o.init(),o}return i(e,t),e.prototype.init=function(){this.createCollection(window.$hsThemeSwitchCollection,this),"default"!==this.theme&&this.setAppearance()},e.prototype.setResetStyles=function(){var t=document.createElement("style");return t.innerText="*{transition: unset !important;}",t.setAttribute("data-hs-appearance-onload-styles",""),document.head.appendChild(t),t},e.prototype.addSystemThemeObserver=function(){var t=this;window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(function(e){e.matches?t.setAppearance("dark",!1):t.setAppearance("default",!1)}))},e.prototype.removeSystemThemeObserver=function(){window.matchMedia("(prefers-color-scheme: dark)").removeEventListener},e.prototype.setAppearance=function(t,e,n){void 0===t&&(t=this.theme),void 0===e&&(e=!0),void 0===n&&(n=!0);var o=document.querySelector("html"),i=this.setResetStyles();e&&localStorage.setItem("hs_theme",t),"auto"===t&&(t=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"default"),o.classList.remove("light","dark","default","auto"),o.classList.add(t),setTimeout((function(){return i.remove()})),n&&window.dispatchEvent(new CustomEvent("on-hs-appearance-change",{detail:t}))},e.getInstance=function(t){var e=window.$hsThemeSwitchCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return e?e.element:null},e.autoInit=function(){window.$hsThemeSwitchCollection||(window.$hsThemeSwitchCollection=[]);var t=function(t){"auto"===localStorage.getItem("hs_theme")?t.addSystemThemeObserver():t.removeSystemThemeObserver()};document.querySelectorAll("[data-hs-theme-switch]:not(.--prevent-on-load-init)").forEach((function(n){if(!window.$hsThemeSwitchCollection.find((function(t){var e;return(null===(e=null==t?void 0:t.element)||void 0===e?void 0:e.el)===n}))){var o=new e(n);o.el.checked="dark"===o.theme,t(o),o.el.addEventListener("change",(function(e){var n=e.target.checked?"dark":"default";o.setAppearance(n),t(o)}))}})),document.querySelectorAll("[data-hs-theme-click-value]:not(.--prevent-on-load-init)").forEach((function(n){var o=n.getAttribute("data-hs-theme-click-value"),i=new e(n);t(i),i.el.addEventListener("click",(function(){i.setAppearance(o),t(i)}))}))},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),window.$hsThemeSwitchCollection&&window.addEventListener("on-hs-appearance-change",(function(t){window.$hsThemeSwitchCollection.forEach((function(e){e.element.el.checked="dark"===t.detail}))})),"undefined"!=typeof window&&(window.HSThemeSwitch=s),e.default=s},87:function(t,e,n){
/*
 * HSToggleCount
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-toggle-count"),s=i?JSON.parse(i):{},l=r(r({},s),n);return o.target=(null==l?void 0:l.target)?"string"==typeof(null==l?void 0:l.target)?document.querySelector(l.target):l.target:null,o.min=(null==l?void 0:l.min)||0,o.max=(null==l?void 0:l.max)||0,o.duration=(null==l?void 0:l.duration)||700,o.isChecked=o.target.checked||!1,o.target&&o.init(),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsToggleCountCollection,this),this.isChecked&&(this.el.innerText=String(this.max)),this.target.addEventListener("change",(function(){t.isChecked=!t.isChecked,t.toggle()}))},e.prototype.toggle=function(){this.isChecked?this.countUp():this.countDown()},e.prototype.animate=function(t,e){var n=this,o=0,i=function(r){o||(o=r);var s=Math.min((r-o)/n.duration,1);n.el.innerText=String(Math.floor(s*(e-t)+t)),s<1&&window.requestAnimationFrame(i)};window.requestAnimationFrame(i)},e.prototype.countUp=function(){this.animate(this.min,this.max)},e.prototype.countDown=function(){this.animate(this.max,this.min)},e.getInstance=function(t,e){var n=window.$hsToggleCountCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsToggleCountCollection||(window.$hsToggleCountCollection=[]),document.querySelectorAll("[data-hs-toggle-count]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsToggleCountCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){s.autoInit()})),"undefined"!=typeof window&&(window.HSToggleCount=s),e.default=s},366:function(t,e,n){
/*
 * HSTogglePassword
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(969),l=function(t){function e(e,n){var o=t.call(this,e,n)||this,i=e.getAttribute("data-hs-toggle-password"),l=i?JSON.parse(i):{},a=r(r({},l),n),c=[];(null==a?void 0:a.target)&&"string"==typeof(null==a?void 0:a.target)?(null==a?void 0:a.target.split(",")).forEach((function(t){c.push(document.querySelector(t))})):(null==a?void 0:a.target)&&"object"==typeof(null==a?void 0:a.target)?a.target.forEach((function(t){return c.push(document.querySelector(t))})):a.target.forEach((function(t){return c.push(t)}));return o.target=c,o.isShown=!!o.el.hasAttribute("type")&&o.el.checked,o.eventType=(0,s.isFormElement)(o.el)?"change":"click",o.isMultiple=o.target.length>1&&!!o.el.closest("[data-hs-toggle-password-group]"),o.target&&o.init(),o}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsTogglePasswordCollection,this),this.isShown?this.show():this.hide(),this.el.addEventListener(this.eventType,(function(){t.isShown?t.hide():t.show(),t.fireEvent("toggle",t.target),(0,s.dispatch)("toggle.hs.toggle-select",t.el,t.target)}))},e.prototype.getMultipleToggles=function(){var t=this.el.closest("[data-hs-toggle-password-group]").querySelectorAll("[data-hs-toggle-password]"),n=[];return t.forEach((function(t){n.push(e.getInstance(t))})),n},e.prototype.show=function(){this.isMultiple?(this.getMultipleToggles().forEach((function(t){return!!t&&(t.isShown=!0)})),this.el.closest("[data-hs-toggle-password-group]").classList.add("active")):(this.isShown=!0,this.el.classList.add("active"));this.target.forEach((function(t){t.type="text"}))},e.prototype.hide=function(){this.isMultiple?(this.getMultipleToggles().forEach((function(t){return!!t&&(t.isShown=!1)})),this.el.closest("[data-hs-toggle-password-group]").classList.remove("active")):(this.isShown=!1,this.el.classList.remove("active"));this.target.forEach((function(t){t.type="password"}))},e.getInstance=function(t,e){var n=window.$hsTogglePasswordCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element:null},e.autoInit=function(){window.$hsTogglePasswordCollection||(window.$hsTogglePasswordCollection=[]),document.querySelectorAll("[data-hs-toggle-password]:not(.--prevent-on-load-init)").forEach((function(t){window.$hsTogglePasswordCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e}(n(737).default);window.addEventListener("load",(function(){l.autoInit()})),"undefined"!=typeof window&&(window.HSTogglePassword=l),e.default=l},679:function(t,e,n){
/*
 * HSTooltip
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
var o,i=this&&this.__extends||(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)},s=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var o,i=0,r=e.length;i<r;i++)!o&&i in e||(o||(o=Array.prototype.slice.call(e,0,i)),o[i]=e[i]);return t.concat(o||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0});var l=n(492),a=n(969),c=n(737),u=n(190),d=function(t){function e(e,n,o){var i=t.call(this,e,n,o)||this;return i.el&&(i.toggle=i.el.querySelector(".hs-tooltip-toggle")||i.el,i.content=i.el.querySelector(".hs-tooltip-content"),i.eventMode=(0,a.getClassProperty)(i.el,"--trigger")||"hover",i.preventPopper=(0,a.getClassProperty)(i.el,"--prevent-popper","false"),i.placement=(0,a.getClassProperty)(i.el,"--placement"),i.strategy=(0,a.getClassProperty)(i.el,"--strategy")),i.el&&i.toggle&&i.content&&i.init(),i}return i(e,t),e.prototype.init=function(){var t=this;this.createCollection(window.$hsTooltipCollection,this),"click"===this.eventMode?this.toggle.addEventListener("click",(function(){return t.click()})):"focus"===this.eventMode?this.toggle.addEventListener("click",(function(){return t.focus()})):"hover"===this.eventMode&&(this.toggle.addEventListener("mouseenter",(function(){return t.enter()})),this.toggle.addEventListener("mouseleave",(function(){return t.leave()}))),"false"===this.preventPopper&&this.buildPopper()},e.prototype.enter=function(){this.show()},e.prototype.leave=function(){this.hide()},e.prototype.click=function(){var t=this;if(this.el.classList.contains("show"))return!1;this.show();var e=function(){setTimeout((function(){t.hide(),t.toggle.removeEventListener("click",e,!0),t.toggle.removeEventListener("blur",e,!0)}))};this.toggle.addEventListener("click",e,!0),this.toggle.addEventListener("blur",e,!0)},e.prototype.focus=function(){var t=this;this.show();var e=function(){t.hide(),t.toggle.removeEventListener("blur",e,!0)};this.toggle.addEventListener("blur",e,!0)},e.prototype.buildPopper=function(){this.popperInstance=(0,l.createPopper)(this.toggle,this.content,{placement:u.POSITIONS[this.placement]||"top",strategy:this.strategy||"fixed",modifiers:[{name:"offset",options:{offset:[0,5]}}]})},e.prototype.show=function(){var t=this;this.content.classList.remove("hidden"),"false"===this.preventPopper&&(this.popperInstance.setOptions((function(t){return r(r({},t),{modifiers:s(s([],t.modifiers,!0),[{name:"eventListeners",enabled:!0}],!1)})})),this.popperInstance.update()),setTimeout((function(){t.el.classList.add("show"),t.fireEvent("show",t.el),(0,a.dispatch)("show.hs.tooltip",t.el,t.el)}))},e.prototype.hide=function(){var t=this;this.el.classList.remove("show"),"false"===this.preventPopper&&this.popperInstance.setOptions((function(t){return r(r({},t),{modifiers:s(s([],t.modifiers,!0),[{name:"eventListeners",enabled:!1}],!1)})})),this.fireEvent("hide",this.el),(0,a.dispatch)("hide.hs.tooltip",this.el,this.el),(0,a.afterTransition)(this.content,(function(){if(t.el.classList.contains("show"))return!1;t.content.classList.add("hidden")}))},e.getInstance=function(t,e){void 0===e&&(e=!1);var n=window.$hsTooltipCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));return n?e?n:n.element.el:null},e.autoInit=function(){window.$hsTooltipCollection||(window.$hsTooltipCollection=[]),document.querySelectorAll(".hs-tooltip").forEach((function(t){window.$hsTooltipCollection.find((function(e){var n;return(null===(n=null==e?void 0:e.element)||void 0===n?void 0:n.el)===t}))||new e(t)}))},e.show=function(t){var e=window.$hsTooltipCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));if(e)switch(e.element.eventMode){case"click":e.element.click();break;case"focus":e.element.focus();break;default:e.element.enter()}},e.hide=function(t){var e=window.$hsTooltipCollection.find((function(e){return e.element.el===("string"==typeof t?document.querySelector(t):t)}));e&&e.element.hide()},e.on=function(t,e,n){var o=window.$hsTooltipCollection.find((function(t){return t.element.el===("string"==typeof e?document.querySelector(e):e)}));o&&(o.element.events[t]=n)},e}(c.default);window.addEventListener("load",(function(){d.autoInit()})),"undefined"!=typeof window&&(window.HSTooltip=d),e.default=d},362:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.COLLECTIONS=void 0;var o=n(413),i=n(460),r=n(629),s=n(652),l=n(23),a=n(610),c=n(371),u=n(770),d=n(659),p=n(139),h=n(591),f=n(233),m=n(957),v=n(983),y=n(949),g=n(87),w=n(366),b=n(679);e.COLLECTIONS=[{key:"copy-markup",fn:o.default},{key:"accordion",fn:i.default},{key:"carousel",fn:r.default},{key:"collapse",fn:s.default},{key:"combobox",fn:l.default},{key:"dropdown",fn:a.default},{key:"input-number",fn:c.default},{key:"overlay",fn:u.default},{key:"pin-input",fn:d.default},{key:"remove-element",fn:p.default},{key:"scrollspy",fn:h.default},{key:"select",fn:f.default},{key:"stepper",fn:m.default},{key:"strong-password",fn:v.default},{key:"tabs",fn:y.default},{key:"toggle-count",fn:g.default},{key:"toggle-password",fn:w.default},{key:"tooltip",fn:b.default}]},313:(t,e,n)=>{
/*
 * HSStaticMethods
 * @version: 2.1.0
 * @author: HTMLStream
 * @license: Licensed under MIT (https://preline.co/docs/license.html)
 * Copyright 2023 HTMLStream
 */
Object.defineProperty(e,"__esModule",{value:!0});var o=n(969),i=n(362),r={getClassProperty:o.getClassProperty,afterTransition:o.afterTransition,autoInit:function(t){void 0===t&&(t="all"),"all"===t?i.COLLECTIONS.forEach((function(t){var e=t.fn;null==e||e.autoInit()})):i.COLLECTIONS.forEach((function(e){var n=e.key,o=e.fn;t.includes(n)&&(null==o||o.autoInit())}))}};"undefined"!=typeof window&&(window.HSStaticMethods=r),e.default=r},969:function(t,e){var n=this;Object.defineProperty(e,"__esModule",{value:!0}),e.menuSearchHistory=e.classToClassList=e.htmlToElement=e.afterTransition=e.dispatch=e.debounce=e.isFormElement=e.isParentOrElementHidden=e.isEnoughSpace=e.isIpadOS=e.isIOS=e.getClassPropertyAlt=e.getClassProperty=e.stringToBoolean=void 0;e.stringToBoolean=function(t){return"true"===t};e.getClassProperty=function(t,e,n){return void 0===n&&(n=""),(window.getComputedStyle(t).getPropertyValue(e)||n).replace(" ","")};e.getClassPropertyAlt=function(t,e,n){void 0===n&&(n="");var o="";return t.classList.forEach((function(t){t.includes(e)&&(o=t)})),o.match(/:(.*)]/)?o.match(/:(.*)]/)[1]:n};e.isIOS=function(){return!!/iPad|iPhone|iPod/.test(navigator.platform)||navigator.maxTouchPoints&&navigator.maxTouchPoints>2&&/MacIntel/.test(navigator.platform)};e.isIpadOS=function(){return navigator.maxTouchPoints&&navigator.maxTouchPoints>2&&/MacIntel/.test(navigator.platform)};e.isEnoughSpace=function(t,e,n,o,i){void 0===n&&(n="auto"),void 0===o&&(o=10),void 0===i&&(i=null);var r=e.getBoundingClientRect(),s=i?i.getBoundingClientRect():null,l=window.innerHeight,a=s?r.top-s.top:r.top,c=(i?s.bottom:l)-r.bottom,u=t.clientHeight+o;return"bottom"===n?c>=u:"top"===n?a>=u:a>=u||c>=u};e.isFormElement=function(t){return t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement||t instanceof HTMLSelectElement};var o=function(t){return!!t&&("none"===window.getComputedStyle(t).display||o(t.parentElement))};e.isParentOrElementHidden=o;e.debounce=function(t,e){var o;return void 0===e&&(e=200),function(){for(var i=[],r=0;r<arguments.length;r++)i[r]=arguments[r];clearTimeout(o),o=setTimeout((function(){t.apply(n,i)}),e)}};e.dispatch=function(t,e,n){void 0===n&&(n=null);var o=new CustomEvent(t,{detail:{payload:n},bubbles:!0,cancelable:!0,composed:!1});e.dispatchEvent(o)};e.afterTransition=function(t,e){var n=function(){e(),t.removeEventListener("transitionend",n,!0)};window.getComputedStyle(t,null).getPropertyValue("transition")!==(navigator.userAgent.includes("Firefox")?"all":"all 0s ease 0s")?t.addEventListener("transitionend",n,!0):e()};e.htmlToElement=function(t){var e=document.createElement("template");return t=t.trim(),e.innerHTML=t,e.content.firstChild};e.classToClassList=function(t,e,n,o){void 0===n&&(n=" "),void 0===o&&(o="add"),t.split(n).forEach((function(t){return"add"===o?e.classList.add(t):e.classList.remove(t)}))};e.menuSearchHistory={historyIndex:-1,addHistory:function(t){this.historyIndex=t},existsInHistory:function(t){return t>this.historyIndex},clearHistory:function(){this.historyIndex=-1}}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return t[o].call(r.exports,r,r.exports,n),r.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{var t=o;Object.defineProperty(t,"__esModule",{value:!0}),t.HSStaticMethods=t.HSTooltip=t.HSTogglePassword=t.HSToggleCount=t.HSThemeSwitch=t.HSTabs=t.HSStrongPassword=t.HSStepper=t.HSSelect=t.HSScrollspy=t.HSSearchByJson=t.HSRemoveElement=t.HSPinInput=t.HSOverlay=t.HSInputNumber=t.HSDropdown=t.HSComboBox=t.HSCollapse=t.HSCarousel=t.HSAccordion=t.HSCopyMarkup=void 0;var e=n(413);Object.defineProperty(t,"HSCopyMarkup",{enumerable:!0,get:function(){return e.default}});var i=n(460);Object.defineProperty(t,"HSAccordion",{enumerable:!0,get:function(){return i.default}});var r=n(629);Object.defineProperty(t,"HSCarousel",{enumerable:!0,get:function(){return r.default}});var s=n(652);Object.defineProperty(t,"HSCollapse",{enumerable:!0,get:function(){return s.default}});var l=n(23);Object.defineProperty(t,"HSComboBox",{enumerable:!0,get:function(){return l.default}});var a=n(610);Object.defineProperty(t,"HSDropdown",{enumerable:!0,get:function(){return a.default}});var c=n(371);Object.defineProperty(t,"HSInputNumber",{enumerable:!0,get:function(){return c.default}});var u=n(770);Object.defineProperty(t,"HSOverlay",{enumerable:!0,get:function(){return u.default}});var d=n(659);Object.defineProperty(t,"HSPinInput",{enumerable:!0,get:function(){return d.default}});var p=n(139);Object.defineProperty(t,"HSRemoveElement",{enumerable:!0,get:function(){return p.default}});var h=n(961);Object.defineProperty(t,"HSSearchByJson",{enumerable:!0,get:function(){return h.default}});var f=n(591);Object.defineProperty(t,"HSScrollspy",{enumerable:!0,get:function(){return f.default}});var m=n(233);Object.defineProperty(t,"HSSelect",{enumerable:!0,get:function(){return m.default}});var v=n(957);Object.defineProperty(t,"HSStepper",{enumerable:!0,get:function(){return v.default}});var y=n(983);Object.defineProperty(t,"HSStrongPassword",{enumerable:!0,get:function(){return y.default}});var g=n(949);Object.defineProperty(t,"HSTabs",{enumerable:!0,get:function(){return g.default}});var w=n(557);Object.defineProperty(t,"HSThemeSwitch",{enumerable:!0,get:function(){return w.default}});var b=n(87);Object.defineProperty(t,"HSToggleCount",{enumerable:!0,get:function(){return b.default}});var C=n(366);Object.defineProperty(t,"HSTogglePassword",{enumerable:!0,get:function(){return C.default}});var S=n(679);Object.defineProperty(t,"HSTooltip",{enumerable:!0,get:function(){return S.default}});var x=n(313);Object.defineProperty(t,"HSStaticMethods",{enumerable:!0,get:function(){return x.default}})})(),o})()));

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfZmxvd2JpdGVfbGliX2VzbV9pbmRleF9qcy1ub2RlX21vZHVsZXNfcHJlbGluZV9kaXN0X3ByZWxpbmVfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStEO0FBQ047QUFDUTtBQUNKO0FBQ047QUFDWjtBQUNNO0FBQ007QUFDRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0VBQXNFLGFBQWE7QUFDbkY7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0EscUJBQXFCLG1FQUFTLGNBQWMsMkVBQWlCLHlDQUF5QywyRUFBaUI7QUFDdkgsa0JBQWtCLDJFQUFpQjtBQUNuQyxXQUFXO0FBQ1g7O0FBRUEsK0JBQStCLG9FQUFjLENBQUMsaUVBQVcseURBQXlEOztBQUVsSDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7O0FBRUE7QUFDQTtBQUNBLFVBQVU7OztBQUdWO0FBQ0EscUJBQXFCLDBFQUFnQixZQUFZLHlFQUFlO0FBQ2hFLGtCQUFrQix1RUFBYTtBQUMvQixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBLDZDQUE2QyxLQUFLOztBQUVsRDtBQUNBLHNFQUFzRTtBQUN0RSxT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QUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBUztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxHQUFHO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxHQUFHO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBUztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEw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cyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9jcmVhdGVQb3BwZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvY29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDb21wb3NpdGVSZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50UmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRIVE1MRWxlbWVudFNjcm9sbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVTY3JvbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFBhcmVudE5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0U2Nyb2xsUGFyZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFZpZXdwb3J0UmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbEJhclguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc0xheW91dFZpZXdwb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzU2Nyb2xsUGFyZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzVGFibGVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2xpc3RTY3JvbGxQYXJlbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXJyb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9ldmVudExpc3RlbmVycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9mbGlwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvb2Zmc2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvcG9wcGVyLWxpdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlQXV0b1BsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2NvbXB1dGVPZmZzZXRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGVib3VuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2V4cGFuZFRvSGFzaE1hcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEFsdEF4aXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tZXJnZUJ5TmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3VzZXJBZ2VudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2FjY29yZGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2FjY29yZGlvbi9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9hY2NvcmRpb24vdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9jYXJvdXNlbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2Nhcm91c2VsL2ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2Nhcm91c2VsL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvY2xpcGJvYXJkL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvY2xpcGJvYXJkL2ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2NsaXBib2FyZC90eXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2NvbGxhcHNlL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvY29sbGFwc2UvaW50ZXJmYWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvY29sbGFwc2UvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9kaWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvZGlhbC9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9kaWFsL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvZGlzbWlzcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2Rpc21pc3MvaW50ZXJmYWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvZGlzbWlzcy90eXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2RyYXdlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2RyYXdlci9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9kcmF3ZXIvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9kcm9wZG93bi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2Ryb3Bkb3duL2ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL2Ryb3Bkb3duL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvaW5wdXQtY291bnRlci9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvbW9kYWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9tb2RhbC9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9tb2RhbC90eXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL3BvcG92ZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy9wb3BvdmVyL2ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL3BvcG92ZXIvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy90YWJzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvdGFicy9pbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vY29tcG9uZW50cy90YWJzL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvdG9vbHRpcC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9jb21wb25lbnRzL3Rvb2x0aXAvaW50ZXJmYWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2NvbXBvbmVudHMvdG9vbHRpcC90eXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmxvd2JpdGUvbGliL2VzbS9kb20vZXZlbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2RvbS9pbnN0YW5jZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Zsb3diaXRlL2xpYi9lc20vZG9tL3R5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbG93Yml0ZS9saWIvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcmVsaW5lL2Rpc3QvcHJlbGluZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0Q29tcG9zaXRlUmVjdCBmcm9tIFwiLi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qc1wiO1xuaW1wb3J0IGdldExheW91dFJlY3QgZnJvbSBcIi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBsaXN0U2Nyb2xsUGFyZW50cyBmcm9tIFwiLi9kb20tdXRpbHMvbGlzdFNjcm9sbFBhcmVudHMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4vZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qc1wiO1xuaW1wb3J0IG9yZGVyTW9kaWZpZXJzIGZyb20gXCIuL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzXCI7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSBcIi4vdXRpbHMvZGVib3VuY2UuanNcIjtcbmltcG9ydCBtZXJnZUJ5TmFtZSBmcm9tIFwiLi91dGlscy9tZXJnZUJ5TmFtZS5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qc1wiO1xudmFyIERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgbW9kaWZpZXJzOiBbXSxcbiAgc3RyYXRlZ3k6ICdhYnNvbHV0ZSdcbn07XG5cbmZ1bmN0aW9uIGFyZVZhbGlkRWxlbWVudHMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gIWFyZ3Muc29tZShmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIHJldHVybiAhKGVsZW1lbnQgJiYgdHlwZW9mIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0ID09PSAnZnVuY3Rpb24nKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3BwZXJHZW5lcmF0b3IoZ2VuZXJhdG9yT3B0aW9ucykge1xuICBpZiAoZ2VuZXJhdG9yT3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgZ2VuZXJhdG9yT3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9nZW5lcmF0b3JPcHRpb25zID0gZ2VuZXJhdG9yT3B0aW9ucyxcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZiA9IF9nZW5lcmF0b3JPcHRpb25zLmRlZmF1bHRNb2RpZmllcnMsXG4gICAgICBkZWZhdWx0TW9kaWZpZXJzID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmID09PSB2b2lkIDAgPyBbXSA6IF9nZW5lcmF0b3JPcHRpb25zJGRlZixcbiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZjIgPSBfZ2VuZXJhdG9yT3B0aW9ucy5kZWZhdWx0T3B0aW9ucyxcbiAgICAgIGRlZmF1bHRPcHRpb25zID0gX2dlbmVyYXRvck9wdGlvbnMkZGVmMiA9PT0gdm9pZCAwID8gREVGQVVMVF9PUFRJT05TIDogX2dlbmVyYXRvck9wdGlvbnMkZGVmMjtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZVBvcHBlcihyZWZlcmVuY2UsIHBvcHBlciwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucztcbiAgICB9XG5cbiAgICB2YXIgc3RhdGUgPSB7XG4gICAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgICAgb3JkZXJlZE1vZGlmaWVyczogW10sXG4gICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX09QVElPTlMsIGRlZmF1bHRPcHRpb25zKSxcbiAgICAgIG1vZGlmaWVyc0RhdGE6IHt9LFxuICAgICAgZWxlbWVudHM6IHtcbiAgICAgICAgcmVmZXJlbmNlOiByZWZlcmVuY2UsXG4gICAgICAgIHBvcHBlcjogcG9wcGVyXG4gICAgICB9LFxuICAgICAgYXR0cmlidXRlczoge30sXG4gICAgICBzdHlsZXM6IHt9XG4gICAgfTtcbiAgICB2YXIgZWZmZWN0Q2xlYW51cEZucyA9IFtdO1xuICAgIHZhciBpc0Rlc3Ryb3llZCA9IGZhbHNlO1xuICAgIHZhciBpbnN0YW5jZSA9IHtcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIHNldE9wdGlvbnM6IGZ1bmN0aW9uIHNldE9wdGlvbnMoc2V0T3B0aW9uc0FjdGlvbikge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzZXRPcHRpb25zQWN0aW9uID09PSAnZnVuY3Rpb24nID8gc2V0T3B0aW9uc0FjdGlvbihzdGF0ZS5vcHRpb25zKSA6IHNldE9wdGlvbnNBY3Rpb247XG4gICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgc3RhdGUub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zLCBzdGF0ZS5vcHRpb25zLCBvcHRpb25zKTtcbiAgICAgICAgc3RhdGUuc2Nyb2xsUGFyZW50cyA9IHtcbiAgICAgICAgICByZWZlcmVuY2U6IGlzRWxlbWVudChyZWZlcmVuY2UpID8gbGlzdFNjcm9sbFBhcmVudHMocmVmZXJlbmNlKSA6IHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCA/IGxpc3RTY3JvbGxQYXJlbnRzKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCkgOiBbXSxcbiAgICAgICAgICBwb3BwZXI6IGxpc3RTY3JvbGxQYXJlbnRzKHBvcHBlcilcbiAgICAgICAgfTsgLy8gT3JkZXJzIHRoZSBtb2RpZmllcnMgYmFzZWQgb24gdGhlaXIgZGVwZW5kZW5jaWVzIGFuZCBgcGhhc2VgXG4gICAgICAgIC8vIHByb3BlcnRpZXNcblxuICAgICAgICB2YXIgb3JkZXJlZE1vZGlmaWVycyA9IG9yZGVyTW9kaWZpZXJzKG1lcmdlQnlOYW1lKFtdLmNvbmNhdChkZWZhdWx0TW9kaWZpZXJzLCBzdGF0ZS5vcHRpb25zLm1vZGlmaWVycykpKTsgLy8gU3RyaXAgb3V0IGRpc2FibGVkIG1vZGlmaWVyc1xuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobSkge1xuICAgICAgICAgIHJldHVybiBtLmVuYWJsZWQ7XG4gICAgICAgIH0pO1xuICAgICAgICBydW5Nb2RpZmllckVmZmVjdHMoKTtcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLnVwZGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIC8vIFN5bmMgdXBkYXRlIOKAkyBpdCB3aWxsIGFsd2F5cyBiZSBleGVjdXRlZCwgZXZlbiBpZiBub3QgbmVjZXNzYXJ5LiBUaGlzXG4gICAgICAvLyBpcyB1c2VmdWwgZm9yIGxvdyBmcmVxdWVuY3kgdXBkYXRlcyB3aGVyZSBzeW5jIGJlaGF2aW9yIHNpbXBsaWZpZXMgdGhlXG4gICAgICAvLyBsb2dpYy5cbiAgICAgIC8vIEZvciBoaWdoIGZyZXF1ZW5jeSB1cGRhdGVzIChlLmcuIGByZXNpemVgIGFuZCBgc2Nyb2xsYCBldmVudHMpLCBhbHdheXNcbiAgICAgIC8vIHByZWZlciB0aGUgYXN5bmMgUG9wcGVyI3VwZGF0ZSBtZXRob2RcbiAgICAgIGZvcmNlVXBkYXRlOiBmdW5jdGlvbiBmb3JjZVVwZGF0ZSgpIHtcbiAgICAgICAgaWYgKGlzRGVzdHJveWVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIF9zdGF0ZSRlbGVtZW50cyA9IHN0YXRlLmVsZW1lbnRzLFxuICAgICAgICAgICAgcmVmZXJlbmNlID0gX3N0YXRlJGVsZW1lbnRzLnJlZmVyZW5jZSxcbiAgICAgICAgICAgIHBvcHBlciA9IF9zdGF0ZSRlbGVtZW50cy5wb3BwZXI7IC8vIERvbid0IHByb2NlZWQgaWYgYHJlZmVyZW5jZWAgb3IgYHBvcHBlcmAgYXJlIG5vdCB2YWxpZCBlbGVtZW50c1xuICAgICAgICAvLyBhbnltb3JlXG5cbiAgICAgICAgaWYgKCFhcmVWYWxpZEVsZW1lbnRzKHJlZmVyZW5jZSwgcG9wcGVyKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSAvLyBTdG9yZSB0aGUgcmVmZXJlbmNlIGFuZCBwb3BwZXIgcmVjdHMgdG8gYmUgcmVhZCBieSBtb2RpZmllcnNcblxuXG4gICAgICAgIHN0YXRlLnJlY3RzID0ge1xuICAgICAgICAgIHJlZmVyZW5jZTogZ2V0Q29tcG9zaXRlUmVjdChyZWZlcmVuY2UsIGdldE9mZnNldFBhcmVudChwb3BwZXIpLCBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5ID09PSAnZml4ZWQnKSxcbiAgICAgICAgICBwb3BwZXI6IGdldExheW91dFJlY3QocG9wcGVyKVxuICAgICAgICB9OyAvLyBNb2RpZmllcnMgaGF2ZSB0aGUgYWJpbGl0eSB0byByZXNldCB0aGUgY3VycmVudCB1cGRhdGUgY3ljbGUuIFRoZVxuICAgICAgICAvLyBtb3N0IGNvbW1vbiB1c2UgY2FzZSBmb3IgdGhpcyBpcyB0aGUgYGZsaXBgIG1vZGlmaWVyIGNoYW5naW5nIHRoZVxuICAgICAgICAvLyBwbGFjZW1lbnQsIHdoaWNoIHRoZW4gbmVlZHMgdG8gcmUtcnVuIGFsbCB0aGUgbW9kaWZpZXJzLCBiZWNhdXNlIHRoZVxuICAgICAgICAvLyBsb2dpYyB3YXMgcHJldmlvdXNseSByYW4gZm9yIHRoZSBwcmV2aW91cyBwbGFjZW1lbnQgYW5kIGlzIHRoZXJlZm9yZVxuICAgICAgICAvLyBzdGFsZS9pbmNvcnJlY3RcblxuICAgICAgICBzdGF0ZS5yZXNldCA9IGZhbHNlO1xuICAgICAgICBzdGF0ZS5wbGFjZW1lbnQgPSBzdGF0ZS5vcHRpb25zLnBsYWNlbWVudDsgLy8gT24gZWFjaCB1cGRhdGUgY3ljbGUsIHRoZSBgbW9kaWZpZXJzRGF0YWAgcHJvcGVydHkgZm9yIGVhY2ggbW9kaWZpZXJcbiAgICAgICAgLy8gaXMgZmlsbGVkIHdpdGggdGhlIGluaXRpYWwgZGF0YSBzcGVjaWZpZWQgYnkgdGhlIG1vZGlmaWVyLiBUaGlzIG1lYW5zXG4gICAgICAgIC8vIGl0IGRvZXNuJ3QgcGVyc2lzdCBhbmQgaXMgZnJlc2ggb24gZWFjaCB1cGRhdGUuXG4gICAgICAgIC8vIFRvIGVuc3VyZSBwZXJzaXN0ZW50IGRhdGEsIHVzZSBgJHtuYW1lfSNwZXJzaXN0ZW50YFxuXG4gICAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGUubW9kaWZpZXJzRGF0YVttb2RpZmllci5uYW1lXSA9IE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVyLmRhdGEpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICBpZiAoc3RhdGUucmVzZXQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHN0YXRlLnJlc2V0ID0gZmFsc2U7XG4gICAgICAgICAgICBpbmRleCA9IC0xO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIF9zdGF0ZSRvcmRlcmVkTW9kaWZpZSA9IHN0YXRlLm9yZGVyZWRNb2RpZmllcnNbaW5kZXhdLFxuICAgICAgICAgICAgICBmbiA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5mbixcbiAgICAgICAgICAgICAgX3N0YXRlJG9yZGVyZWRNb2RpZmllMiA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5vcHRpb25zLFxuICAgICAgICAgICAgICBfb3B0aW9ucyA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIgPT09IHZvaWQgMCA/IHt9IDogX3N0YXRlJG9yZGVyZWRNb2RpZmllMixcbiAgICAgICAgICAgICAgbmFtZSA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5uYW1lO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgc3RhdGUgPSBmbih7XG4gICAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgICAgb3B0aW9uczogX29wdGlvbnMsXG4gICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgIGluc3RhbmNlOiBpbnN0YW5jZVxuICAgICAgICAgICAgfSkgfHwgc3RhdGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gQXN5bmMgYW5kIG9wdGltaXN0aWNhbGx5IG9wdGltaXplZCB1cGRhdGUg4oCTIGl0IHdpbGwgbm90IGJlIGV4ZWN1dGVkIGlmXG4gICAgICAvLyBub3QgbmVjZXNzYXJ5IChkZWJvdW5jZWQgdG8gcnVuIGF0IG1vc3Qgb25jZS1wZXItdGljaylcbiAgICAgIHVwZGF0ZTogZGVib3VuY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICBpbnN0YW5jZS5mb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgIHJlc29sdmUoc3RhdGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pLFxuICAgICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgY2xlYW51cE1vZGlmaWVyRWZmZWN0cygpO1xuICAgICAgICBpc0Rlc3Ryb3llZCA9IHRydWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmICghYXJlVmFsaWRFbGVtZW50cyhyZWZlcmVuY2UsIHBvcHBlcikpIHtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zZXRPcHRpb25zKG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICBpZiAoIWlzRGVzdHJveWVkICYmIG9wdGlvbnMub25GaXJzdFVwZGF0ZSkge1xuICAgICAgICBvcHRpb25zLm9uRmlyc3RVcGRhdGUoc3RhdGUpO1xuICAgICAgfVxuICAgIH0pOyAvLyBNb2RpZmllcnMgaGF2ZSB0aGUgYWJpbGl0eSB0byBleGVjdXRlIGFyYml0cmFyeSBjb2RlIGJlZm9yZSB0aGUgZmlyc3RcbiAgICAvLyB1cGRhdGUgY3ljbGUgcnVucy4gVGhleSB3aWxsIGJlIGV4ZWN1dGVkIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSB1cGRhdGVcbiAgICAvLyBjeWNsZS4gVGhpcyBpcyB1c2VmdWwgd2hlbiBhIG1vZGlmaWVyIGFkZHMgc29tZSBwZXJzaXN0ZW50IGRhdGEgdGhhdFxuICAgIC8vIG90aGVyIG1vZGlmaWVycyBuZWVkIHRvIHVzZSwgYnV0IHRoZSBtb2RpZmllciBpcyBydW4gYWZ0ZXIgdGhlIGRlcGVuZGVudFxuICAgIC8vIG9uZS5cblxuICAgIGZ1bmN0aW9uIHJ1bk1vZGlmaWVyRWZmZWN0cygpIHtcbiAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgICAgICAgIF9yZWYkb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgICAgICAgIG9wdGlvbnMgPSBfcmVmJG9wdGlvbnMgPT09IHZvaWQgMCA/IHt9IDogX3JlZiRvcHRpb25zLFxuICAgICAgICAgICAgZWZmZWN0ID0gX3JlZi5lZmZlY3Q7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBlZmZlY3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB2YXIgY2xlYW51cEZuID0gZWZmZWN0KHtcbiAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB2YXIgbm9vcEZuID0gZnVuY3Rpb24gbm9vcEZuKCkge307XG5cbiAgICAgICAgICBlZmZlY3RDbGVhbnVwRm5zLnB1c2goY2xlYW51cEZuIHx8IG5vb3BGbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKSB7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgICAgfSk7XG4gICAgICBlZmZlY3RDbGVhbnVwRm5zID0gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9O1xufVxuZXhwb3J0IHZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovcG9wcGVyR2VuZXJhdG9yKCk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgZGV0ZWN0T3ZlcmZsb3cgfTsiLCJpbXBvcnQgeyBpc1NoYWRvd1Jvb3QgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb250YWlucyhwYXJlbnQsIGNoaWxkKSB7XG4gIHZhciByb290Tm9kZSA9IGNoaWxkLmdldFJvb3ROb2RlICYmIGNoaWxkLmdldFJvb3ROb2RlKCk7IC8vIEZpcnN0LCBhdHRlbXB0IHdpdGggZmFzdGVyIG5hdGl2ZSBtZXRob2RcblxuICBpZiAocGFyZW50LmNvbnRhaW5zKGNoaWxkKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIHRoZW4gZmFsbGJhY2sgdG8gY3VzdG9tIGltcGxlbWVudGF0aW9uIHdpdGggU2hhZG93IERPTSBzdXBwb3J0XG4gIGVsc2UgaWYgKHJvb3ROb2RlICYmIGlzU2hhZG93Um9vdChyb290Tm9kZSkpIHtcbiAgICAgIHZhciBuZXh0ID0gY2hpbGQ7XG5cbiAgICAgIGRvIHtcbiAgICAgICAgaWYgKG5leHQgJiYgcGFyZW50LmlzU2FtZU5vZGUobmV4dCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ106IG5lZWQgYSBiZXR0ZXIgd2F5IHRvIGhhbmRsZSB0aGlzLi4uXG5cblxuICAgICAgICBuZXh0ID0gbmV4dC5wYXJlbnROb2RlIHx8IG5leHQuaG9zdDtcbiAgICAgIH0gd2hpbGUgKG5leHQpO1xuICAgIH0gLy8gR2l2ZSB1cCwgdGhlIHJlc3VsdCBpcyBmYWxzZVxuXG5cbiAgcmV0dXJuIGZhbHNlO1xufSIsImltcG9ydCB7IGlzRWxlbWVudCwgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcIi4uL3V0aWxzL21hdGguanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgaXNMYXlvdXRWaWV3cG9ydCBmcm9tIFwiLi9pc0xheW91dFZpZXdwb3J0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgaW5jbHVkZVNjYWxlLCBpc0ZpeGVkU3RyYXRlZ3kpIHtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cblxuICBpZiAoaXNGaXhlZFN0cmF0ZWd5ID09PSB2b2lkIDApIHtcbiAgICBpc0ZpeGVkU3RyYXRlZ3kgPSBmYWxzZTtcbiAgfVxuXG4gIHZhciBjbGllbnRSZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdmFyIHNjYWxlWCA9IDE7XG4gIHZhciBzY2FsZVkgPSAxO1xuXG4gIGlmIChpbmNsdWRlU2NhbGUgJiYgaXNIVE1MRWxlbWVudChlbGVtZW50KSkge1xuICAgIHNjYWxlWCA9IGVsZW1lbnQub2Zmc2V0V2lkdGggPiAwID8gcm91bmQoY2xpZW50UmVjdC53aWR0aCkgLyBlbGVtZW50Lm9mZnNldFdpZHRoIHx8IDEgOiAxO1xuICAgIHNjYWxlWSA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0ID4gMCA/IHJvdW5kKGNsaWVudFJlY3QuaGVpZ2h0KSAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDEgOiAxO1xuICB9XG5cbiAgdmFyIF9yZWYgPSBpc0VsZW1lbnQoZWxlbWVudCkgPyBnZXRXaW5kb3coZWxlbWVudCkgOiB3aW5kb3csXG4gICAgICB2aXN1YWxWaWV3cG9ydCA9IF9yZWYudmlzdWFsVmlld3BvcnQ7XG5cbiAgdmFyIGFkZFZpc3VhbE9mZnNldHMgPSAhaXNMYXlvdXRWaWV3cG9ydCgpICYmIGlzRml4ZWRTdHJhdGVneTtcbiAgdmFyIHggPSAoY2xpZW50UmVjdC5sZWZ0ICsgKGFkZFZpc3VhbE9mZnNldHMgJiYgdmlzdWFsVmlld3BvcnQgPyB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0IDogMCkpIC8gc2NhbGVYO1xuICB2YXIgeSA9IChjbGllbnRSZWN0LnRvcCArIChhZGRWaXN1YWxPZmZzZXRzICYmIHZpc3VhbFZpZXdwb3J0ID8gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wIDogMCkpIC8gc2NhbGVZO1xuICB2YXIgd2lkdGggPSBjbGllbnRSZWN0LndpZHRoIC8gc2NhbGVYO1xuICB2YXIgaGVpZ2h0ID0gY2xpZW50UmVjdC5oZWlnaHQgLyBzY2FsZVk7XG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICBsZWZ0OiB4LFxuICAgIHg6IHgsXG4gICAgeTogeVxuICB9O1xufSIsImltcG9ydCB7IHZpZXdwb3J0IH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0Vmlld3BvcnRSZWN0IGZyb20gXCIuL2dldFZpZXdwb3J0UmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50UmVjdCBmcm9tIFwiLi9nZXREb2N1bWVudFJlY3QuanNcIjtcbmltcG9ydCBsaXN0U2Nyb2xsUGFyZW50cyBmcm9tIFwiLi9saXN0U2Nyb2xsUGFyZW50cy5qc1wiO1xuaW1wb3J0IGdldE9mZnNldFBhcmVudCBmcm9tIFwiLi9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tIFwiLi9nZXRDb21wdXRlZFN0eWxlLmpzXCI7XG5pbXBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGNvbnRhaW5zIGZyb20gXCIuL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCByZWN0VG9DbGllbnRSZWN0IGZyb20gXCIuLi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBtYXgsIG1pbiB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIHZhciByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGZhbHNlLCBzdHJhdGVneSA9PT0gJ2ZpeGVkJyk7XG4gIHJlY3QudG9wID0gcmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgcmVjdC5sZWZ0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICByZWN0LmJvdHRvbSA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIHJlY3QucmlnaHQgPSByZWN0LmxlZnQgKyBlbGVtZW50LmNsaWVudFdpZHRoO1xuICByZWN0LndpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aDtcbiAgcmVjdC5oZWlnaHQgPSBlbGVtZW50LmNsaWVudEhlaWdodDtcbiAgcmVjdC54ID0gcmVjdC5sZWZ0O1xuICByZWN0LnkgPSByZWN0LnRvcDtcbiAgcmV0dXJuIHJlY3Q7XG59XG5cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tTWl4ZWRUeXBlKGVsZW1lbnQsIGNsaXBwaW5nUGFyZW50LCBzdHJhdGVneSkge1xuICByZXR1cm4gY2xpcHBpbmdQYXJlbnQgPT09IHZpZXdwb3J0ID8gcmVjdFRvQ2xpZW50UmVjdChnZXRWaWV3cG9ydFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpKSA6IGlzRWxlbWVudChjbGlwcGluZ1BhcmVudCkgPyBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChjbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpIDogcmVjdFRvQ2xpZW50UmVjdChnZXREb2N1bWVudFJlY3QoZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpKSk7XG59IC8vIEEgXCJjbGlwcGluZyBwYXJlbnRcIiBpcyBhbiBvdmVyZmxvd2FibGUgY29udGFpbmVyIHdpdGggdGhlIGNoYXJhY3RlcmlzdGljIG9mXG4vLyBjbGlwcGluZyAob3IgaGlkaW5nKSBvdmVyZmxvd2luZyBlbGVtZW50cyB3aXRoIGEgcG9zaXRpb24gZGlmZmVyZW50IGZyb21cbi8vIGBpbml0aWFsYFxuXG5cbmZ1bmN0aW9uIGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSB7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBsaXN0U2Nyb2xsUGFyZW50cyhnZXRQYXJlbnROb2RlKGVsZW1lbnQpKTtcbiAgdmFyIGNhbkVzY2FwZUNsaXBwaW5nID0gWydhYnNvbHV0ZScsICdmaXhlZCddLmluZGV4T2YoZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5wb3NpdGlvbikgPj0gMDtcbiAgdmFyIGNsaXBwZXJFbGVtZW50ID0gY2FuRXNjYXBlQ2xpcHBpbmcgJiYgaXNIVE1MRWxlbWVudChlbGVtZW50KSA/IGdldE9mZnNldFBhcmVudChlbGVtZW50KSA6IGVsZW1lbnQ7XG5cbiAgaWYgKCFpc0VsZW1lbnQoY2xpcHBlckVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl06IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mbG93L2lzc3Vlcy8xNDE0XG5cblxuICByZXR1cm4gY2xpcHBpbmdQYXJlbnRzLmZpbHRlcihmdW5jdGlvbiAoY2xpcHBpbmdQYXJlbnQpIHtcbiAgICByZXR1cm4gaXNFbGVtZW50KGNsaXBwaW5nUGFyZW50KSAmJiBjb250YWlucyhjbGlwcGluZ1BhcmVudCwgY2xpcHBlckVsZW1lbnQpICYmIGdldE5vZGVOYW1lKGNsaXBwaW5nUGFyZW50KSAhPT0gJ2JvZHknO1xuICB9KTtcbn0gLy8gR2V0cyB0aGUgbWF4aW11bSBhcmVhIHRoYXQgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBpbiBkdWUgdG8gYW55IG51bWJlciBvZlxuLy8gY2xpcHBpbmcgcGFyZW50c1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChlbGVtZW50LCBib3VuZGFyeSwgcm9vdEJvdW5kYXJ5LCBzdHJhdGVneSkge1xuICB2YXIgbWFpbkNsaXBwaW5nUGFyZW50cyA9IGJvdW5kYXJ5ID09PSAnY2xpcHBpbmdQYXJlbnRzJyA/IGdldENsaXBwaW5nUGFyZW50cyhlbGVtZW50KSA6IFtdLmNvbmNhdChib3VuZGFyeSk7XG4gIHZhciBjbGlwcGluZ1BhcmVudHMgPSBbXS5jb25jYXQobWFpbkNsaXBwaW5nUGFyZW50cywgW3Jvb3RCb3VuZGFyeV0pO1xuICB2YXIgZmlyc3RDbGlwcGluZ1BhcmVudCA9IGNsaXBwaW5nUGFyZW50c1swXTtcbiAgdmFyIGNsaXBwaW5nUmVjdCA9IGNsaXBwaW5nUGFyZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjY1JlY3QsIGNsaXBwaW5nUGFyZW50KSB7XG4gICAgdmFyIHJlY3QgPSBnZXRDbGllbnRSZWN0RnJvbU1peGVkVHlwZShlbGVtZW50LCBjbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpO1xuICAgIGFjY1JlY3QudG9wID0gbWF4KHJlY3QudG9wLCBhY2NSZWN0LnRvcCk7XG4gICAgYWNjUmVjdC5yaWdodCA9IG1pbihyZWN0LnJpZ2h0LCBhY2NSZWN0LnJpZ2h0KTtcbiAgICBhY2NSZWN0LmJvdHRvbSA9IG1pbihyZWN0LmJvdHRvbSwgYWNjUmVjdC5ib3R0b20pO1xuICAgIGFjY1JlY3QubGVmdCA9IG1heChyZWN0LmxlZnQsIGFjY1JlY3QubGVmdCk7XG4gICAgcmV0dXJuIGFjY1JlY3Q7XG4gIH0sIGdldENsaWVudFJlY3RGcm9tTWl4ZWRUeXBlKGVsZW1lbnQsIGZpcnN0Q2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KSk7XG4gIGNsaXBwaW5nUmVjdC53aWR0aCA9IGNsaXBwaW5nUmVjdC5yaWdodCAtIGNsaXBwaW5nUmVjdC5sZWZ0O1xuICBjbGlwcGluZ1JlY3QuaGVpZ2h0ID0gY2xpcHBpbmdSZWN0LmJvdHRvbSAtIGNsaXBwaW5nUmVjdC50b3A7XG4gIGNsaXBwaW5nUmVjdC54ID0gY2xpcHBpbmdSZWN0LmxlZnQ7XG4gIGNsaXBwaW5nUmVjdC55ID0gY2xpcHBpbmdSZWN0LnRvcDtcbiAgcmV0dXJuIGNsaXBwaW5nUmVjdDtcbn0iLCJpbXBvcnQgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGZyb20gXCIuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGdldE5vZGVTY3JvbGwgZnJvbSBcIi4vZ2V0Tm9kZVNjcm9sbC5qc1wiO1xuaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuL2dldE5vZGVOYW1lLmpzXCI7XG5pbXBvcnQgeyBpc0hUTUxFbGVtZW50IH0gZnJvbSBcIi4vaW5zdGFuY2VPZi5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbEJhclggZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBpc1Njcm9sbFBhcmVudCBmcm9tIFwiLi9pc1Njcm9sbFBhcmVudC5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBpc0VsZW1lbnRTY2FsZWQoZWxlbWVudCkge1xuICB2YXIgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBzY2FsZVggPSByb3VuZChyZWN0LndpZHRoKSAvIGVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMTtcbiAgdmFyIHNjYWxlWSA9IHJvdW5kKHJlY3QuaGVpZ2h0KSAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDE7XG4gIHJldHVybiBzY2FsZVggIT09IDEgfHwgc2NhbGVZICE9PSAxO1xufSAvLyBSZXR1cm5zIHRoZSBjb21wb3NpdGUgcmVjdCBvZiBhbiBlbGVtZW50IHJlbGF0aXZlIHRvIGl0cyBvZmZzZXRQYXJlbnQuXG4vLyBDb21wb3NpdGUgbWVhbnMgaXQgdGFrZXMgaW50byBhY2NvdW50IHRyYW5zZm9ybXMgYXMgd2VsbCBhcyBsYXlvdXQuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcG9zaXRlUmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50LCBpc0ZpeGVkKSB7XG4gIGlmIChpc0ZpeGVkID09PSB2b2lkIDApIHtcbiAgICBpc0ZpeGVkID0gZmFsc2U7XG4gIH1cblxuICB2YXIgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIHZhciBvZmZzZXRQYXJlbnRJc1NjYWxlZCA9IGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBpc0VsZW1lbnRTY2FsZWQob2Zmc2V0UGFyZW50KTtcbiAgdmFyIGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICB2YXIgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50SXNTY2FsZWQsIGlzRml4ZWQpO1xuICB2YXIgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIHZhciBvZmZzZXRzID0ge1xuICAgIHg6IDAsXG4gICAgeTogMFxuICB9O1xuXG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgIWlzRml4ZWQpIHtcbiAgICBpZiAoZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSAhPT0gJ2JvZHknIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTA3OFxuICAgIGlzU2Nyb2xsUGFyZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG5cbiAgICBpZiAoaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICBvZmZzZXRzID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KG9mZnNldFBhcmVudCwgdHJ1ZSk7XG4gICAgICBvZmZzZXRzLnggKz0gb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgKz0gb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogcmVjdC5sZWZ0ICsgc2Nyb2xsLnNjcm9sbExlZnQgLSBvZmZzZXRzLngsXG4gICAgeTogcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55LFxuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn0iLCJpbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KSB7XG4gIHJldHVybiBnZXRXaW5kb3coZWxlbWVudCkuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbn0iLCJpbXBvcnQgeyBpc0VsZW1lbnQgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkge1xuICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlXG4gIHJldHVybiAoKGlzRWxlbWVudChlbGVtZW50KSA/IGVsZW1lbnQub3duZXJEb2N1bWVudCA6IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICBlbGVtZW50LmRvY3VtZW50KSB8fCB3aW5kb3cuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudDtcbn0iLCJpbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbEJhclggZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbCBmcm9tIFwiLi9nZXRXaW5kb3dTY3JvbGwuanNcIjtcbmltcG9ydCB7IG1heCB9IGZyb20gXCIuLi91dGlscy9tYXRoLmpzXCI7IC8vIEdldHMgdGhlIGVudGlyZSBzaXplIG9mIHRoZSBzY3JvbGxhYmxlIGRvY3VtZW50IGFyZWEsIGV2ZW4gZXh0ZW5kaW5nIG91dHNpZGVcbi8vIG9mIHRoZSBgPGh0bWw+YCBhbmQgYDxib2R5PmAgcmVjdCBib3VuZHMgaWYgaG9yaXpvbnRhbGx5IHNjcm9sbGFibGVcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9jdW1lbnRSZWN0KGVsZW1lbnQpIHtcbiAgdmFyIF9lbGVtZW50JG93bmVyRG9jdW1lbjtcblxuICB2YXIgaHRtbCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgdmFyIHdpblNjcm9sbCA9IGdldFdpbmRvd1Njcm9sbChlbGVtZW50KTtcbiAgdmFyIGJvZHkgPSAoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHk7XG4gIHZhciB3aWR0aCA9IG1heChodG1sLnNjcm9sbFdpZHRoLCBodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5zY3JvbGxXaWR0aCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCk7XG4gIHZhciBoZWlnaHQgPSBtYXgoaHRtbC5zY3JvbGxIZWlnaHQsIGh0bWwuY2xpZW50SGVpZ2h0LCBib2R5ID8gYm9keS5zY3JvbGxIZWlnaHQgOiAwLCBib2R5ID8gYm9keS5jbGllbnRIZWlnaHQgOiAwKTtcbiAgdmFyIHggPSAtd2luU2Nyb2xsLnNjcm9sbExlZnQgKyBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpO1xuICB2YXIgeSA9IC13aW5TY3JvbGwuc2Nyb2xsVG9wO1xuXG4gIGlmIChnZXRDb21wdXRlZFN0eWxlKGJvZHkgfHwgaHRtbCkuZGlyZWN0aW9uID09PSAncnRsJykge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCkgLSB3aWR0aDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHg6IHgsXG4gICAgeTogeVxuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEhUTUxFbGVtZW50U2Nyb2xsKGVsZW1lbnQpIHtcbiAgcmV0dXJuIHtcbiAgICBzY3JvbGxMZWZ0OiBlbGVtZW50LnNjcm9sbExlZnQsXG4gICAgc2Nyb2xsVG9wOiBlbGVtZW50LnNjcm9sbFRvcFxuICB9O1xufSIsImltcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgZnJvbSBcIi4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzXCI7IC8vIFJldHVybnMgdGhlIGxheW91dCByZWN0IG9mIGFuIGVsZW1lbnQgcmVsYXRpdmUgdG8gaXRzIG9mZnNldFBhcmVudC4gTGF5b3V0XG4vLyBtZWFucyBpdCBkb2Vzbid0IHRha2UgaW50byBhY2NvdW50IHRyYW5zZm9ybXMuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldExheW91dFJlY3QoZWxlbWVudCkge1xuICB2YXIgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KTsgLy8gVXNlIHRoZSBjbGllbnRSZWN0IHNpemVzIGlmIGl0J3Mgbm90IGJlZW4gdHJhbnNmb3JtZWQuXG4gIC8vIEZpeGVzIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTIyM1xuXG4gIHZhciB3aWR0aCA9IGVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gIHZhciBoZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDtcblxuICBpZiAoTWF0aC5hYnMoY2xpZW50UmVjdC53aWR0aCAtIHdpZHRoKSA8PSAxKSB7XG4gICAgd2lkdGggPSBjbGllbnRSZWN0LndpZHRoO1xuICB9XG5cbiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3QuaGVpZ2h0IC0gaGVpZ2h0KSA8PSAxKSB7XG4gICAgaGVpZ2h0ID0gY2xpZW50UmVjdC5oZWlnaHQ7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHg6IGVsZW1lbnQub2Zmc2V0TGVmdCxcbiAgICB5OiBlbGVtZW50Lm9mZnNldFRvcCxcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHRcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROb2RlTmFtZShlbGVtZW50KSB7XG4gIHJldHVybiBlbGVtZW50ID8gKGVsZW1lbnQubm9kZU5hbWUgfHwgJycpLnRvTG93ZXJDYXNlKCkgOiBudWxsO1xufSIsImltcG9ydCBnZXRXaW5kb3dTY3JvbGwgZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsLmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93IGZyb20gXCIuL2dldFdpbmRvdy5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBnZXRIVE1MRWxlbWVudFNjcm9sbCBmcm9tIFwiLi9nZXRIVE1MRWxlbWVudFNjcm9sbC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Tm9kZVNjcm9sbChub2RlKSB7XG4gIGlmIChub2RlID09PSBnZXRXaW5kb3cobm9kZSkgfHwgIWlzSFRNTEVsZW1lbnQobm9kZSkpIHtcbiAgICByZXR1cm4gZ2V0V2luZG93U2Nyb2xsKG5vZGUpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBnZXRIVE1MRWxlbWVudFNjcm9sbChub2RlKTtcbiAgfVxufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuL2dldENvbXB1dGVkU3R5bGUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQsIGlzU2hhZG93Um9vdCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmltcG9ydCBpc1RhYmxlRWxlbWVudCBmcm9tIFwiLi9pc1RhYmxlRWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldFBhcmVudE5vZGUgZnJvbSBcIi4vZ2V0UGFyZW50Tm9kZS5qc1wiO1xuaW1wb3J0IGdldFVBU3RyaW5nIGZyb20gXCIuLi91dGlscy91c2VyQWdlbnQuanNcIjtcblxuZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCAvLyBodHRwczovL2dpdGh1Yi5jb20vcG9wcGVyanMvcG9wcGVyLWNvcmUvaXNzdWVzLzgzN1xuICBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59IC8vIGAub2Zmc2V0UGFyZW50YCByZXBvcnRzIGBudWxsYCBmb3IgZml4ZWQgZWxlbWVudHMsIHdoaWxlIGFic29sdXRlIGVsZW1lbnRzXG4vLyByZXR1cm4gdGhlIGNvbnRhaW5pbmcgYmxvY2tcblxuXG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICB2YXIgaXNGaXJlZm94ID0gL2ZpcmVmb3gvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xuICB2YXIgaXNJRSA9IC9UcmlkZW50L2kudGVzdChnZXRVQVN0cmluZygpKTtcblxuICBpZiAoaXNJRSAmJiBpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgLy8gSW4gSUUgOSwgMTAgYW5kIDExIGZpeGVkIGVsZW1lbnRzIGNvbnRhaW5pbmcgYmxvY2sgaXMgYWx3YXlzIGVzdGFibGlzaGVkIGJ5IHRoZSB2aWV3cG9ydFxuICAgIHZhciBlbGVtZW50Q3NzID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcblxuICAgIGlmIChlbGVtZW50Q3NzLnBvc2l0aW9uID09PSAnZml4ZWQnKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICB2YXIgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuXG4gIGlmIChpc1NoYWRvd1Jvb3QoY3VycmVudE5vZGUpKSB7XG4gICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5ob3N0O1xuICB9XG5cbiAgd2hpbGUgKGlzSFRNTEVsZW1lbnQoY3VycmVudE5vZGUpICYmIFsnaHRtbCcsICdib2R5J10uaW5kZXhPZihnZXROb2RlTmFtZShjdXJyZW50Tm9kZSkpIDwgMCkge1xuICAgIHZhciBjc3MgPSBnZXRDb21wdXRlZFN0eWxlKGN1cnJlbnROb2RlKTsgLy8gVGhpcyBpcyBub24tZXhoYXVzdGl2ZSBidXQgY292ZXJzIHRoZSBtb3N0IGNvbW1vbiBDU1MgcHJvcGVydGllcyB0aGF0XG4gICAgLy8gY3JlYXRlIGEgY29udGFpbmluZyBibG9jay5cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvQ29udGFpbmluZ19ibG9jayNpZGVudGlmeWluZ190aGVfY29udGFpbmluZ19ibG9ja1xuXG4gICAgaWYgKGNzcy50cmFuc2Zvcm0gIT09ICdub25lJyB8fCBjc3MucGVyc3BlY3RpdmUgIT09ICdub25lJyB8fCBjc3MuY29udGFpbiA9PT0gJ3BhaW50JyB8fCBbJ3RyYW5zZm9ybScsICdwZXJzcGVjdGl2ZSddLmluZGV4T2YoY3NzLndpbGxDaGFuZ2UpICE9PSAtMSB8fCBpc0ZpcmVmb3ggJiYgY3NzLndpbGxDaGFuZ2UgPT09ICdmaWx0ZXInIHx8IGlzRmlyZWZveCAmJiBjc3MuZmlsdGVyICYmIGNzcy5maWx0ZXIgIT09ICdub25lJykge1xuICAgICAgcmV0dXJuIGN1cnJlbnROb2RlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59IC8vIEdldHMgdGhlIGNsb3Nlc3QgYW5jZXN0b3IgcG9zaXRpb25lZCBlbGVtZW50LiBIYW5kbGVzIHNvbWUgZWRnZSBjYXNlcyxcbi8vIHN1Y2ggYXMgdGFibGUgYW5jZXN0b3JzIGFuZCBjcm9zcyBicm93c2VyIGJ1Z3MuXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgdmFyIHdpbmRvdyA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgdmFyIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCk7XG5cbiAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBpc1RhYmxlRWxlbWVudChvZmZzZXRQYXJlbnQpICYmIGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpIHtcbiAgICBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KG9mZnNldFBhcmVudCk7XG4gIH1cblxuICBpZiAob2Zmc2V0UGFyZW50ICYmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSAnaHRtbCcgfHwgZ2V0Tm9kZU5hbWUob2Zmc2V0UGFyZW50KSA9PT0gJ2JvZHknICYmIGdldENvbXB1dGVkU3R5bGUob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gJ3N0YXRpYycpKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuXG4gIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHx8IHdpbmRvdztcbn0iLCJpbXBvcnQgZ2V0Tm9kZU5hbWUgZnJvbSBcIi4vZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgeyBpc1NoYWRvd1Jvb3QgfSBmcm9tIFwiLi9pbnN0YW5jZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRQYXJlbnROb2RlKGVsZW1lbnQpIHtcbiAgaWYgKGdldE5vZGVOYW1lKGVsZW1lbnQpID09PSAnaHRtbCcpIHtcbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuXG4gIHJldHVybiAoLy8gdGhpcyBpcyBhIHF1aWNrZXIgKGJ1dCBsZXNzIHR5cGUgc2FmZSkgd2F5IHRvIHNhdmUgcXVpdGUgc29tZSBieXRlcyBmcm9tIHRoZSBidW5kbGVcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dXG4gICAgLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddXG4gICAgZWxlbWVudC5hc3NpZ25lZFNsb3QgfHwgLy8gc3RlcCBpbnRvIHRoZSBzaGFkb3cgRE9NIG9mIHRoZSBwYXJlbnQgb2YgYSBzbG90dGVkIG5vZGVcbiAgICBlbGVtZW50LnBhcmVudE5vZGUgfHwgKCAvLyBET00gRWxlbWVudCBkZXRlY3RlZFxuICAgIGlzU2hhZG93Um9vdChlbGVtZW50KSA/IGVsZW1lbnQuaG9zdCA6IG51bGwpIHx8IC8vIFNoYWRvd1Jvb3QgZGV0ZWN0ZWRcbiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYWxsXTogSFRNTEVsZW1lbnQgaXMgYSBOb2RlXG4gICAgZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpIC8vIGZhbGxiYWNrXG5cbiAgKTtcbn0iLCJpbXBvcnQgZ2V0UGFyZW50Tm9kZSBmcm9tIFwiLi9nZXRQYXJlbnROb2RlLmpzXCI7XG5pbXBvcnQgaXNTY3JvbGxQYXJlbnQgZnJvbSBcIi4vaXNTY3JvbGxQYXJlbnQuanNcIjtcbmltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuaW1wb3J0IHsgaXNIVE1MRWxlbWVudCB9IGZyb20gXCIuL2luc3RhbmNlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChub2RlKSB7XG4gIGlmIChbJ2h0bWwnLCAnYm9keScsICcjZG9jdW1lbnQnXS5pbmRleE9mKGdldE5vZGVOYW1lKG5vZGUpKSA+PSAwKSB7XG4gICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXTogYXNzdW1lIGJvZHkgaXMgYWx3YXlzIGF2YWlsYWJsZVxuICAgIHJldHVybiBub2RlLm93bmVyRG9jdW1lbnQuYm9keTtcbiAgfVxuXG4gIGlmIChpc0hUTUxFbGVtZW50KG5vZGUpICYmIGlzU2Nyb2xsUGFyZW50KG5vZGUpKSB7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cblxuICByZXR1cm4gZ2V0U2Nyb2xsUGFyZW50KGdldFBhcmVudE5vZGUobm9kZSkpO1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgZ2V0RG9jdW1lbnRFbGVtZW50IGZyb20gXCIuL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldFdpbmRvd1Njcm9sbEJhclggZnJvbSBcIi4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qc1wiO1xuaW1wb3J0IGlzTGF5b3V0Vmlld3BvcnQgZnJvbSBcIi4vaXNMYXlvdXRWaWV3cG9ydC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIHZhciB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIHZhciBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICB2YXIgdmlzdWFsVmlld3BvcnQgPSB3aW4udmlzdWFsVmlld3BvcnQ7XG4gIHZhciB3aWR0aCA9IGh0bWwuY2xpZW50V2lkdGg7XG4gIHZhciBoZWlnaHQgPSBodG1sLmNsaWVudEhlaWdodDtcbiAgdmFyIHggPSAwO1xuICB2YXIgeSA9IDA7XG5cbiAgaWYgKHZpc3VhbFZpZXdwb3J0KSB7XG4gICAgd2lkdGggPSB2aXN1YWxWaWV3cG9ydC53aWR0aDtcbiAgICBoZWlnaHQgPSB2aXN1YWxWaWV3cG9ydC5oZWlnaHQ7XG4gICAgdmFyIGxheW91dFZpZXdwb3J0ID0gaXNMYXlvdXRWaWV3cG9ydCgpO1xuXG4gICAgaWYgKGxheW91dFZpZXdwb3J0IHx8ICFsYXlvdXRWaWV3cG9ydCAmJiBzdHJhdGVneSA9PT0gJ2ZpeGVkJykge1xuICAgICAgeCA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQ7XG4gICAgICB5ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHg6IHggKyBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpLFxuICAgIHk6IHlcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRXaW5kb3cobm9kZSkge1xuICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuXG4gIGlmIChub2RlLnRvU3RyaW5nKCkgIT09ICdbb2JqZWN0IFdpbmRvd10nKSB7XG4gICAgdmFyIG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQ7XG4gICAgcmV0dXJuIG93bmVyRG9jdW1lbnQgPyBvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IHx8IHdpbmRvdyA6IHdpbmRvdztcbiAgfVxuXG4gIHJldHVybiBub2RlO1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGwobm9kZSkge1xuICB2YXIgd2luID0gZ2V0V2luZG93KG5vZGUpO1xuICB2YXIgc2Nyb2xsTGVmdCA9IHdpbi5wYWdlWE9mZnNldDtcbiAgdmFyIHNjcm9sbFRvcCA9IHdpbi5wYWdlWU9mZnNldDtcbiAgcmV0dXJuIHtcbiAgICBzY3JvbGxMZWZ0OiBzY3JvbGxMZWZ0LFxuICAgIHNjcm9sbFRvcDogc2Nyb2xsVG9wXG4gIH07XG59IiwiaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzXCI7XG5pbXBvcnQgZ2V0V2luZG93U2Nyb2xsIGZyb20gXCIuL2dldFdpbmRvd1Njcm9sbC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KSB7XG4gIC8vIElmIDxodG1sPiBoYXMgYSBDU1Mgd2lkdGggZ3JlYXRlciB0aGFuIHRoZSB2aWV3cG9ydCwgdGhlbiB0aGlzIHdpbGwgYmVcbiAgLy8gaW5jb3JyZWN0IGZvciBSVEwuXG4gIC8vIFBvcHBlciAxIGlzIGJyb2tlbiBpbiB0aGlzIGNhc2UgYW5kIG5ldmVyIGhhZCBhIGJ1ZyByZXBvcnQgc28gbGV0J3MgYXNzdW1lXG4gIC8vIGl0J3Mgbm90IGFuIGlzc3VlLiBJIGRvbid0IHRoaW5rIGFueW9uZSBldmVyIHNwZWNpZmllcyB3aWR0aCBvbiA8aHRtbD5cbiAgLy8gYW55d2F5LlxuICAvLyBCcm93c2VycyB3aGVyZSB0aGUgbGVmdCBzY3JvbGxiYXIgZG9lc24ndCBjYXVzZSBhbiBpc3N1ZSByZXBvcnQgYDBgIGZvclxuICAvLyB0aGlzIChlLmcuIEVkZ2UgMjAxOSwgSUUxMSwgU2FmYXJpKVxuICByZXR1cm4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkubGVmdCArIGdldFdpbmRvd1Njcm9sbChlbGVtZW50KS5zY3JvbGxMZWZ0O1xufSIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIGlzRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkVsZW1lbnQ7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgRWxlbWVudDtcbn1cblxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudChub2RlKSB7XG4gIHZhciBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLkhUTUxFbGVtZW50O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xufVxuXG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICAvLyBJRSAxMSBoYXMgbm8gU2hhZG93Um9vdFxuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIE93bkVsZW1lbnQgPSBnZXRXaW5kb3cobm9kZSkuU2hhZG93Um9vdDtcbiAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBPd25FbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBTaGFkb3dSb290O1xufVxuXG5leHBvcnQgeyBpc0VsZW1lbnQsIGlzSFRNTEVsZW1lbnQsIGlzU2hhZG93Um9vdCB9OyIsImltcG9ydCBnZXRVQVN0cmluZyBmcm9tIFwiLi4vdXRpbHMvdXNlckFnZW50LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0xheW91dFZpZXdwb3J0KCkge1xuICByZXR1cm4gIS9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pLnRlc3QoZ2V0VUFTdHJpbmcoKSk7XG59IiwiaW1wb3J0IGdldENvbXB1dGVkU3R5bGUgZnJvbSBcIi4vZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTY3JvbGxQYXJlbnQoZWxlbWVudCkge1xuICAvLyBGaXJlZm94IHdhbnRzIHVzIHRvIGNoZWNrIGAteGAgYW5kIGAteWAgdmFyaWF0aW9ucyBhcyB3ZWxsXG4gIHZhciBfZ2V0Q29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCksXG4gICAgICBvdmVyZmxvdyA9IF9nZXRDb21wdXRlZFN0eWxlLm92ZXJmbG93LFxuICAgICAgb3ZlcmZsb3dYID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3dYLFxuICAgICAgb3ZlcmZsb3dZID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3dZO1xuXG4gIHJldHVybiAvYXV0b3xzY3JvbGx8b3ZlcmxheXxoaWRkZW4vLnRlc3Qob3ZlcmZsb3cgKyBvdmVyZmxvd1kgKyBvdmVyZmxvd1gpO1xufSIsImltcG9ydCBnZXROb2RlTmFtZSBmcm9tIFwiLi9nZXROb2RlTmFtZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gWyd0YWJsZScsICd0ZCcsICd0aCddLmluZGV4T2YoZ2V0Tm9kZU5hbWUoZWxlbWVudCkpID49IDA7XG59IiwiaW1wb3J0IGdldFNjcm9sbFBhcmVudCBmcm9tIFwiLi9nZXRTY3JvbGxQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRQYXJlbnROb2RlIGZyb20gXCIuL2dldFBhcmVudE5vZGUuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4vZ2V0V2luZG93LmpzXCI7XG5pbXBvcnQgaXNTY3JvbGxQYXJlbnQgZnJvbSBcIi4vaXNTY3JvbGxQYXJlbnQuanNcIjtcbi8qXG5naXZlbiBhIERPTSBlbGVtZW50LCByZXR1cm4gdGhlIGxpc3Qgb2YgYWxsIHNjcm9sbCBwYXJlbnRzLCB1cCB0aGUgbGlzdCBvZiBhbmNlc29yc1xudW50aWwgd2UgZ2V0IHRvIHRoZSB0b3Agd2luZG93IG9iamVjdC4gVGhpcyBsaXN0IGlzIHdoYXQgd2UgYXR0YWNoIHNjcm9sbCBsaXN0ZW5lcnNcbnRvLCBiZWNhdXNlIGlmIGFueSBvZiB0aGVzZSBwYXJlbnQgZWxlbWVudHMgc2Nyb2xsLCB3ZSdsbCBuZWVkIHRvIHJlLWNhbGN1bGF0ZSB0aGVcbnJlZmVyZW5jZSBlbGVtZW50J3MgcG9zaXRpb24uXG4qL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsaXN0U2Nyb2xsUGFyZW50cyhlbGVtZW50LCBsaXN0KSB7XG4gIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47XG5cbiAgaWYgKGxpc3QgPT09IHZvaWQgMCkge1xuICAgIGxpc3QgPSBbXTtcbiAgfVxuXG4gIHZhciBzY3JvbGxQYXJlbnQgPSBnZXRTY3JvbGxQYXJlbnQoZWxlbWVudCk7XG4gIHZhciBpc0JvZHkgPSBzY3JvbGxQYXJlbnQgPT09ICgoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHkpO1xuICB2YXIgd2luID0gZ2V0V2luZG93KHNjcm9sbFBhcmVudCk7XG4gIHZhciB0YXJnZXQgPSBpc0JvZHkgPyBbd2luXS5jb25jYXQod2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc1Njcm9sbFBhcmVudChzY3JvbGxQYXJlbnQpID8gc2Nyb2xsUGFyZW50IDogW10pIDogc2Nyb2xsUGFyZW50O1xuICB2YXIgdXBkYXRlZExpc3QgPSBsaXN0LmNvbmNhdCh0YXJnZXQpO1xuICByZXR1cm4gaXNCb2R5ID8gdXBkYXRlZExpc3QgOiAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYWxsXTogaXNCb2R5IHRlbGxzIHVzIHRhcmdldCB3aWxsIGJlIGFuIEhUTUxFbGVtZW50IGhlcmVcbiAgdXBkYXRlZExpc3QuY29uY2F0KGxpc3RTY3JvbGxQYXJlbnRzKGdldFBhcmVudE5vZGUodGFyZ2V0KSkpO1xufSIsImV4cG9ydCB2YXIgdG9wID0gJ3RvcCc7XG5leHBvcnQgdmFyIGJvdHRvbSA9ICdib3R0b20nO1xuZXhwb3J0IHZhciByaWdodCA9ICdyaWdodCc7XG5leHBvcnQgdmFyIGxlZnQgPSAnbGVmdCc7XG5leHBvcnQgdmFyIGF1dG8gPSAnYXV0byc7XG5leHBvcnQgdmFyIGJhc2VQbGFjZW1lbnRzID0gW3RvcCwgYm90dG9tLCByaWdodCwgbGVmdF07XG5leHBvcnQgdmFyIHN0YXJ0ID0gJ3N0YXJ0JztcbmV4cG9ydCB2YXIgZW5kID0gJ2VuZCc7XG5leHBvcnQgdmFyIGNsaXBwaW5nUGFyZW50cyA9ICdjbGlwcGluZ1BhcmVudHMnO1xuZXhwb3J0IHZhciB2aWV3cG9ydCA9ICd2aWV3cG9ydCc7XG5leHBvcnQgdmFyIHBvcHBlciA9ICdwb3BwZXInO1xuZXhwb3J0IHZhciByZWZlcmVuY2UgPSAncmVmZXJlbmNlJztcbmV4cG9ydCB2YXIgdmFyaWF0aW9uUGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9iYXNlUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQgKyBcIi1cIiArIHN0YXJ0LCBwbGFjZW1lbnQgKyBcIi1cIiArIGVuZF0pO1xufSwgW10pO1xuZXhwb3J0IHZhciBwbGFjZW1lbnRzID0gLyojX19QVVJFX18qL1tdLmNvbmNhdChiYXNlUGxhY2VtZW50cywgW2F1dG9dKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7XG4gIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQsIHBsYWNlbWVudCArIFwiLVwiICsgc3RhcnQsIHBsYWNlbWVudCArIFwiLVwiICsgZW5kXSk7XG59LCBbXSk7IC8vIG1vZGlmaWVycyB0aGF0IG5lZWQgdG8gcmVhZCB0aGUgRE9NXG5cbmV4cG9ydCB2YXIgYmVmb3JlUmVhZCA9ICdiZWZvcmVSZWFkJztcbmV4cG9ydCB2YXIgcmVhZCA9ICdyZWFkJztcbmV4cG9ydCB2YXIgYWZ0ZXJSZWFkID0gJ2FmdGVyUmVhZCc7IC8vIHB1cmUtbG9naWMgbW9kaWZpZXJzXG5cbmV4cG9ydCB2YXIgYmVmb3JlTWFpbiA9ICdiZWZvcmVNYWluJztcbmV4cG9ydCB2YXIgbWFpbiA9ICdtYWluJztcbmV4cG9ydCB2YXIgYWZ0ZXJNYWluID0gJ2FmdGVyTWFpbic7IC8vIG1vZGlmaWVyIHdpdGggdGhlIHB1cnBvc2UgdG8gd3JpdGUgdG8gdGhlIERPTSAob3Igd3JpdGUgaW50byBhIGZyYW1ld29yayBzdGF0ZSlcblxuZXhwb3J0IHZhciBiZWZvcmVXcml0ZSA9ICdiZWZvcmVXcml0ZSc7XG5leHBvcnQgdmFyIHdyaXRlID0gJ3dyaXRlJztcbmV4cG9ydCB2YXIgYWZ0ZXJXcml0ZSA9ICdhZnRlcldyaXRlJztcbmV4cG9ydCB2YXIgbW9kaWZpZXJQaGFzZXMgPSBbYmVmb3JlUmVhZCwgcmVhZCwgYWZ0ZXJSZWFkLCBiZWZvcmVNYWluLCBtYWluLCBhZnRlck1haW4sIGJlZm9yZVdyaXRlLCB3cml0ZSwgYWZ0ZXJXcml0ZV07IiwiaW1wb3J0IGdldE5vZGVOYW1lIGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Tm9kZU5hbWUuanNcIjtcbmltcG9ydCB7IGlzSFRNTEVsZW1lbnQgfSBmcm9tIFwiLi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanNcIjsgLy8gVGhpcyBtb2RpZmllciB0YWtlcyB0aGUgc3R5bGVzIHByZXBhcmVkIGJ5IHRoZSBgY29tcHV0ZVN0eWxlc2AgbW9kaWZpZXJcbi8vIGFuZCBhcHBsaWVzIHRoZW0gdG8gdGhlIEhUTUxFbGVtZW50cyBzdWNoIGFzIHBvcHBlciBhbmQgYXJyb3dcblxuZnVuY3Rpb24gYXBwbHlTdHlsZXMoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlO1xuICBPYmplY3Qua2V5cyhzdGF0ZS5lbGVtZW50cykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgIHZhciBzdHlsZSA9IHN0YXRlLnN0eWxlc1tuYW1lXSB8fCB7fTtcbiAgICB2YXIgYXR0cmlidXRlcyA9IHN0YXRlLmF0dHJpYnV0ZXNbbmFtZV0gfHwge307XG4gICAgdmFyIGVsZW1lbnQgPSBzdGF0ZS5lbGVtZW50c1tuYW1lXTsgLy8gYXJyb3cgaXMgb3B0aW9uYWwgKyB2aXJ0dWFsIGVsZW1lbnRzXG5cbiAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgIWdldE5vZGVOYW1lKGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBGbG93IGRvZXNuJ3Qgc3VwcG9ydCB0byBleHRlbmQgdGhpcyBwcm9wZXJ0eSwgYnV0IGl0J3MgdGhlIG1vc3RcbiAgICAvLyBlZmZlY3RpdmUgd2F5IHRvIGFwcGx5IHN0eWxlcyB0byBhbiBIVE1MRWxlbWVudFxuICAgIC8vICRGbG93Rml4TWVbY2Fubm90LXdyaXRlXVxuXG5cbiAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHN0eWxlKTtcbiAgICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW25hbWVdO1xuXG4gICAgICBpZiAodmFsdWUgPT09IGZhbHNlKSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUgPT09IHRydWUgPyAnJyA6IHZhbHVlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGVmZmVjdChfcmVmMikge1xuICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZTtcbiAgdmFyIGluaXRpYWxTdHlsZXMgPSB7XG4gICAgcG9wcGVyOiB7XG4gICAgICBwb3NpdGlvbjogc3RhdGUub3B0aW9ucy5zdHJhdGVneSxcbiAgICAgIGxlZnQ6ICcwJyxcbiAgICAgIHRvcDogJzAnLFxuICAgICAgbWFyZ2luOiAnMCdcbiAgICB9LFxuICAgIGFycm93OiB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJ1xuICAgIH0sXG4gICAgcmVmZXJlbmNlOiB7fVxuICB9O1xuICBPYmplY3QuYXNzaWduKHN0YXRlLmVsZW1lbnRzLnBvcHBlci5zdHlsZSwgaW5pdGlhbFN0eWxlcy5wb3BwZXIpO1xuICBzdGF0ZS5zdHlsZXMgPSBpbml0aWFsU3R5bGVzO1xuXG4gIGlmIChzdGF0ZS5lbGVtZW50cy5hcnJvdykge1xuICAgIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMuYXJyb3cuc3R5bGUsIGluaXRpYWxTdHlsZXMuYXJyb3cpO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBPYmplY3Qua2V5cyhzdGF0ZS5lbGVtZW50cykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdmFyIGVsZW1lbnQgPSBzdGF0ZS5lbGVtZW50c1tuYW1lXTtcbiAgICAgIHZhciBhdHRyaWJ1dGVzID0gc3RhdGUuYXR0cmlidXRlc1tuYW1lXSB8fCB7fTtcbiAgICAgIHZhciBzdHlsZVByb3BlcnRpZXMgPSBPYmplY3Qua2V5cyhzdGF0ZS5zdHlsZXMuaGFzT3duUHJvcGVydHkobmFtZSkgPyBzdGF0ZS5zdHlsZXNbbmFtZV0gOiBpbml0aWFsU3R5bGVzW25hbWVdKTsgLy8gU2V0IGFsbCB2YWx1ZXMgdG8gYW4gZW1wdHkgc3RyaW5nIHRvIHVuc2V0IHRoZW1cblxuICAgICAgdmFyIHN0eWxlID0gc3R5bGVQcm9wZXJ0aWVzLnJlZHVjZShmdW5jdGlvbiAoc3R5bGUsIHByb3BlcnR5KSB7XG4gICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9ICcnO1xuICAgICAgICByZXR1cm4gc3R5bGU7XG4gICAgICB9LCB7fSk7IC8vIGFycm93IGlzIG9wdGlvbmFsICsgdmlydHVhbCBlbGVtZW50c1xuXG4gICAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgIWdldE5vZGVOYW1lKGVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCBzdHlsZSk7XG4gICAgICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyaWJ1dGUpIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnYXBwbHlTdHlsZXMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3dyaXRlJyxcbiAgZm46IGFwcGx5U3R5bGVzLFxuICBlZmZlY3Q6IGVmZmVjdCxcbiAgcmVxdWlyZXM6IFsnY29tcHV0ZVN0eWxlcyddXG59OyIsImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi4vZG9tLXV0aWxzL2NvbnRhaW5zLmpzXCI7XG5pbXBvcnQgZ2V0T2Zmc2V0UGFyZW50IGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzXCI7XG5pbXBvcnQgZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IHdpdGhpbiB9IGZyb20gXCIuLi91dGlscy93aXRoaW4uanNcIjtcbmltcG9ydCBtZXJnZVBhZGRpbmdPYmplY3QgZnJvbSBcIi4uL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi4vdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzXCI7XG5pbXBvcnQgeyBsZWZ0LCByaWdodCwgYmFzZVBsYWNlbWVudHMsIHRvcCwgYm90dG9tIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxudmFyIHRvUGFkZGluZ09iamVjdCA9IGZ1bmN0aW9uIHRvUGFkZGluZ09iamVjdChwYWRkaW5nLCBzdGF0ZSkge1xuICBwYWRkaW5nID0gdHlwZW9mIHBhZGRpbmcgPT09ICdmdW5jdGlvbicgPyBwYWRkaW5nKE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnJlY3RzLCB7XG4gICAgcGxhY2VtZW50OiBzdGF0ZS5wbGFjZW1lbnRcbiAgfSkpIDogcGFkZGluZztcbiAgcmV0dXJuIG1lcmdlUGFkZGluZ09iamVjdCh0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBwYWRkaW5nIDogZXhwYW5kVG9IYXNoTWFwKHBhZGRpbmcsIGJhc2VQbGFjZW1lbnRzKSk7XG59O1xuXG5mdW5jdGlvbiBhcnJvdyhfcmVmKSB7XG4gIHZhciBfc3RhdGUkbW9kaWZpZXJzRGF0YSQ7XG5cbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWUsXG4gICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zO1xuICB2YXIgYXJyb3dFbGVtZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3c7XG4gIHZhciBwb3BwZXJPZmZzZXRzID0gc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzO1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQoc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGF4aXMgPSBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQoYmFzZVBsYWNlbWVudCk7XG4gIHZhciBpc1ZlcnRpY2FsID0gW2xlZnQsIHJpZ2h0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID49IDA7XG4gIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gIGlmICghYXJyb3dFbGVtZW50IHx8ICFwb3BwZXJPZmZzZXRzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHBhZGRpbmdPYmplY3QgPSB0b1BhZGRpbmdPYmplY3Qob3B0aW9ucy5wYWRkaW5nLCBzdGF0ZSk7XG4gIHZhciBhcnJvd1JlY3QgPSBnZXRMYXlvdXRSZWN0KGFycm93RWxlbWVudCk7XG4gIHZhciBtaW5Qcm9wID0gYXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgdmFyIG1heFByb3AgPSBheGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgdmFyIGVuZERpZmYgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbbGVuXSArIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXSAtIHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5wb3BwZXJbbGVuXTtcbiAgdmFyIHN0YXJ0RGlmZiA9IHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbYXhpc107XG4gIHZhciBhcnJvd09mZnNldFBhcmVudCA9IGdldE9mZnNldFBhcmVudChhcnJvd0VsZW1lbnQpO1xuICB2YXIgY2xpZW50U2l6ZSA9IGFycm93T2Zmc2V0UGFyZW50ID8gYXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50SGVpZ2h0IHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRXaWR0aCB8fCAwIDogMDtcbiAgdmFyIGNlbnRlclRvUmVmZXJlbmNlID0gZW5kRGlmZiAvIDIgLSBzdGFydERpZmYgLyAyOyAvLyBNYWtlIHN1cmUgdGhlIGFycm93IGRvZXNuJ3Qgb3ZlcmZsb3cgdGhlIHBvcHBlciBpZiB0aGUgY2VudGVyIHBvaW50IGlzXG4gIC8vIG91dHNpZGUgb2YgdGhlIHBvcHBlciBib3VuZHNcblxuICB2YXIgbWluID0gcGFkZGluZ09iamVjdFttaW5Qcm9wXTtcbiAgdmFyIG1heCA9IGNsaWVudFNpemUgLSBhcnJvd1JlY3RbbGVuXSAtIHBhZGRpbmdPYmplY3RbbWF4UHJvcF07XG4gIHZhciBjZW50ZXIgPSBjbGllbnRTaXplIC8gMiAtIGFycm93UmVjdFtsZW5dIC8gMiArIGNlbnRlclRvUmVmZXJlbmNlO1xuICB2YXIgb2Zmc2V0ID0gd2l0aGluKG1pbiwgY2VudGVyLCBtYXgpOyAvLyBQcmV2ZW50cyBicmVha2luZyBzeW50YXggaGlnaGxpZ2h0aW5nLi4uXG5cbiAgdmFyIGF4aXNQcm9wID0gYXhpcztcbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IChfc3RhdGUkbW9kaWZpZXJzRGF0YSQgPSB7fSwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkW2F4aXNQcm9wXSA9IG9mZnNldCwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkLmNlbnRlck9mZnNldCA9IG9mZnNldCAtIGNlbnRlciwgX3N0YXRlJG1vZGlmaWVyc0RhdGEkKTtcbn1cblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYyKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnM7XG4gIHZhciBfb3B0aW9ucyRlbGVtZW50ID0gb3B0aW9ucy5lbGVtZW50LFxuICAgICAgYXJyb3dFbGVtZW50ID0gX29wdGlvbnMkZWxlbWVudCA9PT0gdm9pZCAwID8gJ1tkYXRhLXBvcHBlci1hcnJvd10nIDogX29wdGlvbnMkZWxlbWVudDtcblxuICBpZiAoYXJyb3dFbGVtZW50ID09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH0gLy8gQ1NTIHNlbGVjdG9yXG5cblxuICBpZiAodHlwZW9mIGFycm93RWxlbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5wb3BwZXIucXVlcnlTZWxlY3RvcihhcnJvd0VsZW1lbnQpO1xuXG4gICAgaWYgKCFhcnJvd0VsZW1lbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbnRhaW5zKHN0YXRlLmVsZW1lbnRzLnBvcHBlciwgYXJyb3dFbGVtZW50KSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHN0YXRlLmVsZW1lbnRzLmFycm93ID0gYXJyb3dFbGVtZW50O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnYXJyb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogYXJyb3csXG4gIGVmZmVjdDogZWZmZWN0LFxuICByZXF1aXJlczogWydwb3BwZXJPZmZzZXRzJ10sXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsncHJldmVudE92ZXJmbG93J11cbn07IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBlbmQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRXaW5kb3cuanNcIjtcbmltcG9ydCBnZXREb2N1bWVudEVsZW1lbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanNcIjtcbmltcG9ydCBnZXRDb21wdXRlZFN0eWxlIGZyb20gXCIuLi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IHsgcm91bmQgfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbnZhciB1bnNldFNpZGVzID0ge1xuICB0b3A6ICdhdXRvJyxcbiAgcmlnaHQ6ICdhdXRvJyxcbiAgYm90dG9tOiAnYXV0bycsXG4gIGxlZnQ6ICdhdXRvJ1xufTsgLy8gUm91bmQgdGhlIG9mZnNldHMgdG8gdGhlIG5lYXJlc3Qgc3VpdGFibGUgc3VicGl4ZWwgYmFzZWQgb24gdGhlIERQUi5cbi8vIFpvb21pbmcgY2FuIGNoYW5nZSB0aGUgRFBSLCBidXQgaXQgc2VlbXMgdG8gcmVwb3J0IGEgdmFsdWUgdGhhdCB3aWxsXG4vLyBjbGVhbmx5IGRpdmlkZSB0aGUgdmFsdWVzIGludG8gdGhlIGFwcHJvcHJpYXRlIHN1YnBpeGVscy5cblxuZnVuY3Rpb24gcm91bmRPZmZzZXRzQnlEUFIoX3JlZiwgd2luKSB7XG4gIHZhciB4ID0gX3JlZi54LFxuICAgICAgeSA9IF9yZWYueTtcbiAgdmFyIGRwciA9IHdpbi5kZXZpY2VQaXhlbFJhdGlvIHx8IDE7XG4gIHJldHVybiB7XG4gICAgeDogcm91bmQoeCAqIGRwcikgLyBkcHIgfHwgMCxcbiAgICB5OiByb3VuZCh5ICogZHByKSAvIGRwciB8fCAwXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXBUb1N0eWxlcyhfcmVmMikge1xuICB2YXIgX09iamVjdCRhc3NpZ24yO1xuXG4gIHZhciBwb3BwZXIgPSBfcmVmMi5wb3BwZXIsXG4gICAgICBwb3BwZXJSZWN0ID0gX3JlZjIucG9wcGVyUmVjdCxcbiAgICAgIHBsYWNlbWVudCA9IF9yZWYyLnBsYWNlbWVudCxcbiAgICAgIHZhcmlhdGlvbiA9IF9yZWYyLnZhcmlhdGlvbixcbiAgICAgIG9mZnNldHMgPSBfcmVmMi5vZmZzZXRzLFxuICAgICAgcG9zaXRpb24gPSBfcmVmMi5wb3NpdGlvbixcbiAgICAgIGdwdUFjY2VsZXJhdGlvbiA9IF9yZWYyLmdwdUFjY2VsZXJhdGlvbixcbiAgICAgIGFkYXB0aXZlID0gX3JlZjIuYWRhcHRpdmUsXG4gICAgICByb3VuZE9mZnNldHMgPSBfcmVmMi5yb3VuZE9mZnNldHMsXG4gICAgICBpc0ZpeGVkID0gX3JlZjIuaXNGaXhlZDtcbiAgdmFyIF9vZmZzZXRzJHggPSBvZmZzZXRzLngsXG4gICAgICB4ID0gX29mZnNldHMkeCA9PT0gdm9pZCAwID8gMCA6IF9vZmZzZXRzJHgsXG4gICAgICBfb2Zmc2V0cyR5ID0gb2Zmc2V0cy55LFxuICAgICAgeSA9IF9vZmZzZXRzJHkgPT09IHZvaWQgMCA/IDAgOiBfb2Zmc2V0cyR5O1xuXG4gIHZhciBfcmVmMyA9IHR5cGVvZiByb3VuZE9mZnNldHMgPT09ICdmdW5jdGlvbicgPyByb3VuZE9mZnNldHMoe1xuICAgIHg6IHgsXG4gICAgeTogeVxuICB9KSA6IHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcblxuICB4ID0gX3JlZjMueDtcbiAgeSA9IF9yZWYzLnk7XG4gIHZhciBoYXNYID0gb2Zmc2V0cy5oYXNPd25Qcm9wZXJ0eSgneCcpO1xuICB2YXIgaGFzWSA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3knKTtcbiAgdmFyIHNpZGVYID0gbGVmdDtcbiAgdmFyIHNpZGVZID0gdG9wO1xuICB2YXIgd2luID0gd2luZG93O1xuXG4gIGlmIChhZGFwdGl2ZSkge1xuICAgIHZhciBvZmZzZXRQYXJlbnQgPSBnZXRPZmZzZXRQYXJlbnQocG9wcGVyKTtcbiAgICB2YXIgaGVpZ2h0UHJvcCA9ICdjbGllbnRIZWlnaHQnO1xuICAgIHZhciB3aWR0aFByb3AgPSAnY2xpZW50V2lkdGgnO1xuXG4gICAgaWYgKG9mZnNldFBhcmVudCA9PT0gZ2V0V2luZG93KHBvcHBlcikpIHtcbiAgICAgIG9mZnNldFBhcmVudCA9IGdldERvY3VtZW50RWxlbWVudChwb3BwZXIpO1xuXG4gICAgICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uICE9PSAnc3RhdGljJyAmJiBwb3NpdGlvbiA9PT0gJ2Fic29sdXRlJykge1xuICAgICAgICBoZWlnaHRQcm9wID0gJ3Njcm9sbEhlaWdodCc7XG4gICAgICAgIHdpZHRoUHJvcCA9ICdzY3JvbGxXaWR0aCc7XG4gICAgICB9XG4gICAgfSAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYXN0XTogZm9yY2UgdHlwZSByZWZpbmVtZW50LCB3ZSBjb21wYXJlIG9mZnNldFBhcmVudCB3aXRoIHdpbmRvdyBhYm92ZSwgYnV0IEZsb3cgZG9lc24ndCBkZXRlY3QgaXRcblxuXG4gICAgb2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50O1xuXG4gICAgaWYgKHBsYWNlbWVudCA9PT0gdG9wIHx8IChwbGFjZW1lbnQgPT09IGxlZnQgfHwgcGxhY2VtZW50ID09PSByaWdodCkgJiYgdmFyaWF0aW9uID09PSBlbmQpIHtcbiAgICAgIHNpZGVZID0gYm90dG9tO1xuICAgICAgdmFyIG9mZnNldFkgPSBpc0ZpeGVkICYmIG9mZnNldFBhcmVudCA9PT0gd2luICYmIHdpbi52aXN1YWxWaWV3cG9ydCA/IHdpbi52aXN1YWxWaWV3cG9ydC5oZWlnaHQgOiAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICAgIG9mZnNldFBhcmVudFtoZWlnaHRQcm9wXTtcbiAgICAgIHkgLT0gb2Zmc2V0WSAtIHBvcHBlclJlY3QuaGVpZ2h0O1xuICAgICAgeSAqPSBncHVBY2NlbGVyYXRpb24gPyAxIDogLTE7XG4gICAgfVxuXG4gICAgaWYgKHBsYWNlbWVudCA9PT0gbGVmdCB8fCAocGxhY2VtZW50ID09PSB0b3AgfHwgcGxhY2VtZW50ID09PSBib3R0b20pICYmIHZhcmlhdGlvbiA9PT0gZW5kKSB7XG4gICAgICBzaWRlWCA9IHJpZ2h0O1xuICAgICAgdmFyIG9mZnNldFggPSBpc0ZpeGVkICYmIG9mZnNldFBhcmVudCA9PT0gd2luICYmIHdpbi52aXN1YWxWaWV3cG9ydCA/IHdpbi52aXN1YWxWaWV3cG9ydC53aWR0aCA6IC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXVxuICAgICAgb2Zmc2V0UGFyZW50W3dpZHRoUHJvcF07XG4gICAgICB4IC09IG9mZnNldFggLSBwb3BwZXJSZWN0LndpZHRoO1xuICAgICAgeCAqPSBncHVBY2NlbGVyYXRpb24gPyAxIDogLTE7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbW1vblN0eWxlcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgIHBvc2l0aW9uOiBwb3NpdGlvblxuICB9LCBhZGFwdGl2ZSAmJiB1bnNldFNpZGVzKTtcblxuICB2YXIgX3JlZjQgPSByb3VuZE9mZnNldHMgPT09IHRydWUgPyByb3VuZE9mZnNldHNCeURQUih7XG4gICAgeDogeCxcbiAgICB5OiB5XG4gIH0sIGdldFdpbmRvdyhwb3BwZXIpKSA6IHtcbiAgICB4OiB4LFxuICAgIHk6IHlcbiAgfTtcblxuICB4ID0gX3JlZjQueDtcbiAgeSA9IF9yZWY0Lnk7XG5cbiAgaWYgKGdwdUFjY2VsZXJhdGlvbikge1xuICAgIHZhciBfT2JqZWN0JGFzc2lnbjtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIChfT2JqZWN0JGFzc2lnbiA9IHt9LCBfT2JqZWN0JGFzc2lnbltzaWRlWV0gPSBoYXNZID8gJzAnIDogJycsIF9PYmplY3QkYXNzaWduW3NpZGVYXSA9IGhhc1ggPyAnMCcgOiAnJywgX09iamVjdCRhc3NpZ24udHJhbnNmb3JtID0gKHdpbi5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIDw9IDEgPyBcInRyYW5zbGF0ZShcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4KVwiIDogXCJ0cmFuc2xhdGUzZChcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4LCAwKVwiLCBfT2JqZWN0JGFzc2lnbikpO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgKF9PYmplY3QkYXNzaWduMiA9IHt9LCBfT2JqZWN0JGFzc2lnbjJbc2lkZVldID0gaGFzWSA/IHkgKyBcInB4XCIgOiAnJywgX09iamVjdCRhc3NpZ24yW3NpZGVYXSA9IGhhc1ggPyB4ICsgXCJweFwiIDogJycsIF9PYmplY3QkYXNzaWduMi50cmFuc2Zvcm0gPSAnJywgX09iamVjdCRhc3NpZ24yKSk7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVTdHlsZXMoX3JlZjUpIHtcbiAgdmFyIHN0YXRlID0gX3JlZjUuc3RhdGUsXG4gICAgICBvcHRpb25zID0gX3JlZjUub3B0aW9ucztcbiAgdmFyIF9vcHRpb25zJGdwdUFjY2VsZXJhdCA9IG9wdGlvbnMuZ3B1QWNjZWxlcmF0aW9uLFxuICAgICAgZ3B1QWNjZWxlcmF0aW9uID0gX29wdGlvbnMkZ3B1QWNjZWxlcmF0ID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkZ3B1QWNjZWxlcmF0LFxuICAgICAgX29wdGlvbnMkYWRhcHRpdmUgPSBvcHRpb25zLmFkYXB0aXZlLFxuICAgICAgYWRhcHRpdmUgPSBfb3B0aW9ucyRhZGFwdGl2ZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFkYXB0aXZlLFxuICAgICAgX29wdGlvbnMkcm91bmRPZmZzZXRzID0gb3B0aW9ucy5yb3VuZE9mZnNldHMsXG4gICAgICByb3VuZE9mZnNldHMgPSBfb3B0aW9ucyRyb3VuZE9mZnNldHMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRyb3VuZE9mZnNldHM7XG4gIHZhciBjb21tb25TdHlsZXMgPSB7XG4gICAgcGxhY2VtZW50OiBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCksXG4gICAgdmFyaWF0aW9uOiBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KSxcbiAgICBwb3BwZXI6IHN0YXRlLmVsZW1lbnRzLnBvcHBlcixcbiAgICBwb3BwZXJSZWN0OiBzdGF0ZS5yZWN0cy5wb3BwZXIsXG4gICAgZ3B1QWNjZWxlcmF0aW9uOiBncHVBY2NlbGVyYXRpb24sXG4gICAgaXNGaXhlZDogc3RhdGUub3B0aW9ucy5zdHJhdGVneSA9PT0gJ2ZpeGVkJ1xuICB9O1xuXG4gIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5zdHlsZXMucG9wcGVyLCBtYXBUb1N0eWxlcyhPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIHtcbiAgICAgIG9mZnNldHM6IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxcbiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LFxuICAgICAgYWRhcHRpdmU6IGFkYXB0aXZlLFxuICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHNcbiAgICB9KSkpO1xuICB9XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEuYXJyb3cgIT0gbnVsbCkge1xuICAgIHN0YXRlLnN0eWxlcy5hcnJvdyA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnN0eWxlcy5hcnJvdywgbWFwVG9TdHlsZXMoT2JqZWN0LmFzc2lnbih7fSwgY29tbW9uU3R5bGVzLCB7XG4gICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLmFycm93LFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBhZGFwdGl2ZTogZmFsc2UsXG4gICAgICByb3VuZE9mZnNldHM6IHJvdW5kT2Zmc2V0c1xuICAgIH0pKSk7XG4gIH1cblxuICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7XG4gICAgJ2RhdGEtcG9wcGVyLXBsYWNlbWVudCc6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ2NvbXB1dGVTdHlsZXMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ2JlZm9yZVdyaXRlJyxcbiAgZm46IGNvbXB1dGVTdHlsZXMsXG4gIGRhdGE6IHt9XG59OyIsImltcG9ydCBnZXRXaW5kb3cgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRXaW5kb3cuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG52YXIgcGFzc2l2ZSA9IHtcbiAgcGFzc2l2ZTogdHJ1ZVxufTtcblxuZnVuY3Rpb24gZWZmZWN0KF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIGluc3RhbmNlID0gX3JlZi5pbnN0YW5jZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnM7XG4gIHZhciBfb3B0aW9ucyRzY3JvbGwgPSBvcHRpb25zLnNjcm9sbCxcbiAgICAgIHNjcm9sbCA9IF9vcHRpb25zJHNjcm9sbCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHNjcm9sbCxcbiAgICAgIF9vcHRpb25zJHJlc2l6ZSA9IG9wdGlvbnMucmVzaXplLFxuICAgICAgcmVzaXplID0gX29wdGlvbnMkcmVzaXplID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkcmVzaXplO1xuICB2YXIgd2luZG93ID0gZ2V0V2luZG93KHN0YXRlLmVsZW1lbnRzLnBvcHBlcik7XG4gIHZhciBzY3JvbGxQYXJlbnRzID0gW10uY29uY2F0KHN0YXRlLnNjcm9sbFBhcmVudHMucmVmZXJlbmNlLCBzdGF0ZS5zY3JvbGxQYXJlbnRzLnBvcHBlcik7XG5cbiAgaWYgKHNjcm9sbCkge1xuICAgIHNjcm9sbFBhcmVudHMuZm9yRWFjaChmdW5jdGlvbiAoc2Nyb2xsUGFyZW50KSB7XG4gICAgICBzY3JvbGxQYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTtcbiAgICB9KTtcbiAgfVxuXG4gIGlmIChyZXNpemUpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHNjcm9sbCkge1xuICAgICAgc2Nyb2xsUGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChzY3JvbGxQYXJlbnQpIHtcbiAgICAgICAgc2Nyb2xsUGFyZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocmVzaXplKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTtcbiAgICB9XG4gIH07XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdldmVudExpc3RlbmVycycsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnd3JpdGUnLFxuICBmbjogZnVuY3Rpb24gZm4oKSB7fSxcbiAgZWZmZWN0OiBlZmZlY3QsXG4gIGRhdGE6IHt9XG59OyIsImltcG9ydCBnZXRPcHBvc2l0ZVBsYWNlbWVudCBmcm9tIFwiLi4vdXRpbHMvZ2V0T3Bwb3NpdGVQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZGV0ZWN0T3ZlcmZsb3cgZnJvbSBcIi4uL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgY29tcHV0ZUF1dG9QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyBib3R0b20sIHRvcCwgc3RhcnQsIHJpZ2h0LCBsZWZ0LCBhdXRvIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuLi91dGlscy9nZXRWYXJpYXRpb24uanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5mdW5jdGlvbiBnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyhwbGFjZW1lbnQpIHtcbiAgaWYgKGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0bykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHZhciBvcHBvc2l0ZVBsYWNlbWVudCA9IGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIHJldHVybiBbZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KG9wcG9zaXRlUGxhY2VtZW50KV07XG59XG5cbmZ1bmN0aW9uIGZsaXAoX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0uX3NraXApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgX29wdGlvbnMkbWFpbkF4aXMgPSBvcHRpb25zLm1haW5BeGlzLFxuICAgICAgY2hlY2tNYWluQXhpcyA9IF9vcHRpb25zJG1haW5BeGlzID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkbWFpbkF4aXMsXG4gICAgICBfb3B0aW9ucyRhbHRBeGlzID0gb3B0aW9ucy5hbHRBeGlzLFxuICAgICAgY2hlY2tBbHRBeGlzID0gX29wdGlvbnMkYWx0QXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBzcGVjaWZpZWRGYWxsYmFja1BsYWNlbWVudHMgPSBvcHRpb25zLmZhbGxiYWNrUGxhY2VtZW50cyxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9IG9wdGlvbnMuZmxpcFZhcmlhdGlvbnMsXG4gICAgICBmbGlwVmFyaWF0aW9ucyA9IF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGZsaXBWYXJpYXRpbyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IG9wdGlvbnMuYWxsb3dlZEF1dG9QbGFjZW1lbnRzO1xuICB2YXIgcHJlZmVycmVkUGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwcmVmZXJyZWRQbGFjZW1lbnQpO1xuICB2YXIgaXNCYXNlUGxhY2VtZW50ID0gYmFzZVBsYWNlbWVudCA9PT0gcHJlZmVycmVkUGxhY2VtZW50O1xuICB2YXIgZmFsbGJhY2tQbGFjZW1lbnRzID0gc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzIHx8IChpc0Jhc2VQbGFjZW1lbnQgfHwgIWZsaXBWYXJpYXRpb25zID8gW2dldE9wcG9zaXRlUGxhY2VtZW50KHByZWZlcnJlZFBsYWNlbWVudCldIDogZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMocHJlZmVycmVkUGxhY2VtZW50KSk7XG4gIHZhciBwbGFjZW1lbnRzID0gW3ByZWZlcnJlZFBsYWNlbWVudF0uY29uY2F0KGZhbGxiYWNrUGxhY2VtZW50cykucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIHJldHVybiBhY2MuY29uY2F0KGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSA9PT0gYXV0byA/IGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCB7XG4gICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LFxuICAgICAgcGFkZGluZzogcGFkZGluZyxcbiAgICAgIGZsaXBWYXJpYXRpb25zOiBmbGlwVmFyaWF0aW9ucyxcbiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50czogYWxsb3dlZEF1dG9QbGFjZW1lbnRzXG4gICAgfSkgOiBwbGFjZW1lbnQpO1xuICB9LCBbXSk7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIGNoZWNrc01hcCA9IG5ldyBNYXAoKTtcbiAgdmFyIG1ha2VGYWxsYmFja0NoZWNrcyA9IHRydWU7XG4gIHZhciBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRzWzBdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGxhY2VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwbGFjZW1lbnQgPSBwbGFjZW1lbnRzW2ldO1xuXG4gICAgdmFyIF9iYXNlUGxhY2VtZW50ID0gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuXG4gICAgdmFyIGlzU3RhcnRWYXJpYXRpb24gPSBnZXRWYXJpYXRpb24ocGxhY2VtZW50KSA9PT0gc3RhcnQ7XG4gICAgdmFyIGlzVmVydGljYWwgPSBbdG9wLCBib3R0b21dLmluZGV4T2YoX2Jhc2VQbGFjZW1lbnQpID49IDA7XG4gICAgdmFyIGxlbiA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG4gICAgdmFyIG92ZXJmbG93ID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBhbHRCb3VuZGFyeTogYWx0Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nXG4gICAgfSk7XG4gICAgdmFyIG1haW5WYXJpYXRpb25TaWRlID0gaXNWZXJ0aWNhbCA/IGlzU3RhcnRWYXJpYXRpb24gPyByaWdodCA6IGxlZnQgOiBpc1N0YXJ0VmFyaWF0aW9uID8gYm90dG9tIDogdG9wO1xuXG4gICAgaWYgKHJlZmVyZW5jZVJlY3RbbGVuXSA+IHBvcHBlclJlY3RbbGVuXSkge1xuICAgICAgbWFpblZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgfVxuXG4gICAgdmFyIGFsdFZhcmlhdGlvblNpZGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChtYWluVmFyaWF0aW9uU2lkZSk7XG4gICAgdmFyIGNoZWNrcyA9IFtdO1xuXG4gICAgaWYgKGNoZWNrTWFpbkF4aXMpIHtcbiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W19iYXNlUGxhY2VtZW50XSA8PSAwKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tBbHRBeGlzKSB7XG4gICAgICBjaGVja3MucHVzaChvdmVyZmxvd1ttYWluVmFyaWF0aW9uU2lkZV0gPD0gMCwgb3ZlcmZsb3dbYWx0VmFyaWF0aW9uU2lkZV0gPD0gMCk7XG4gICAgfVxuXG4gICAgaWYgKGNoZWNrcy5ldmVyeShmdW5jdGlvbiAoY2hlY2spIHtcbiAgICAgIHJldHVybiBjaGVjaztcbiAgICB9KSkge1xuICAgICAgZmlyc3RGaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50O1xuICAgICAgbWFrZUZhbGxiYWNrQ2hlY2tzID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBjaGVja3NNYXAuc2V0KHBsYWNlbWVudCwgY2hlY2tzKTtcbiAgfVxuXG4gIGlmIChtYWtlRmFsbGJhY2tDaGVja3MpIHtcbiAgICAvLyBgMmAgbWF5IGJlIGRlc2lyZWQgaW4gc29tZSBjYXNlcyDigJMgcmVzZWFyY2ggbGF0ZXJcbiAgICB2YXIgbnVtYmVyT2ZDaGVja3MgPSBmbGlwVmFyaWF0aW9ucyA/IDMgOiAxO1xuXG4gICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoX2kpIHtcbiAgICAgIHZhciBmaXR0aW5nUGxhY2VtZW50ID0gcGxhY2VtZW50cy5maW5kKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICAgICAgdmFyIGNoZWNrcyA9IGNoZWNrc01hcC5nZXQocGxhY2VtZW50KTtcblxuICAgICAgICBpZiAoY2hlY2tzKSB7XG4gICAgICAgICAgcmV0dXJuIGNoZWNrcy5zbGljZSgwLCBfaSkuZXZlcnkoZnVuY3Rpb24gKGNoZWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hlY2s7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoZml0dGluZ1BsYWNlbWVudCkge1xuICAgICAgICBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBmaXR0aW5nUGxhY2VtZW50O1xuICAgICAgICByZXR1cm4gXCJicmVha1wiO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmb3IgKHZhciBfaSA9IG51bWJlck9mQ2hlY2tzOyBfaSA+IDA7IF9pLS0pIHtcbiAgICAgIHZhciBfcmV0ID0gX2xvb3AoX2kpO1xuXG4gICAgICBpZiAoX3JldCA9PT0gXCJicmVha1wiKSBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoc3RhdGUucGxhY2VtZW50ICE9PSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQpIHtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwID0gdHJ1ZTtcbiAgICBzdGF0ZS5wbGFjZW1lbnQgPSBmaXJzdEZpdHRpbmdQbGFjZW1lbnQ7XG4gICAgc3RhdGUucmVzZXQgPSB0cnVlO1xuICB9XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdmbGlwJyxcbiAgZW5hYmxlZDogdHJ1ZSxcbiAgcGhhc2U6ICdtYWluJyxcbiAgZm46IGZsaXAsXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsnb2Zmc2V0J10sXG4gIGRhdGE6IHtcbiAgICBfc2tpcDogZmFsc2VcbiAgfVxufTsiLCJpbXBvcnQgeyB0b3AsIGJvdHRvbSwgbGVmdCwgcmlnaHQgfSBmcm9tIFwiLi4vZW51bXMuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcblxuZnVuY3Rpb24gZ2V0U2lkZU9mZnNldHMob3ZlcmZsb3csIHJlY3QsIHByZXZlbnRlZE9mZnNldHMpIHtcbiAgaWYgKHByZXZlbnRlZE9mZnNldHMgPT09IHZvaWQgMCkge1xuICAgIHByZXZlbnRlZE9mZnNldHMgPSB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHRvcDogb3ZlcmZsb3cudG9wIC0gcmVjdC5oZWlnaHQgLSBwcmV2ZW50ZWRPZmZzZXRzLnksXG4gICAgcmlnaHQ6IG92ZXJmbG93LnJpZ2h0IC0gcmVjdC53aWR0aCArIHByZXZlbnRlZE9mZnNldHMueCxcbiAgICBib3R0b206IG92ZXJmbG93LmJvdHRvbSAtIHJlY3QuaGVpZ2h0ICsgcHJldmVudGVkT2Zmc2V0cy55LFxuICAgIGxlZnQ6IG92ZXJmbG93LmxlZnQgLSByZWN0LndpZHRoIC0gcHJldmVudGVkT2Zmc2V0cy54XG4gIH07XG59XG5cbmZ1bmN0aW9uIGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChvdmVyZmxvdykge1xuICByZXR1cm4gW3RvcCwgcmlnaHQsIGJvdHRvbSwgbGVmdF0uc29tZShmdW5jdGlvbiAoc2lkZSkge1xuICAgIHJldHVybiBvdmVyZmxvd1tzaWRlXSA+PSAwO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGlkZShfcmVmKSB7XG4gIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsXG4gICAgICBuYW1lID0gX3JlZi5uYW1lO1xuICB2YXIgcmVmZXJlbmNlUmVjdCA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZTtcbiAgdmFyIHBvcHBlclJlY3QgPSBzdGF0ZS5yZWN0cy5wb3BwZXI7XG4gIHZhciBwcmV2ZW50ZWRPZmZzZXRzID0gc3RhdGUubW9kaWZpZXJzRGF0YS5wcmV2ZW50T3ZlcmZsb3c7XG4gIHZhciByZWZlcmVuY2VPdmVyZmxvdyA9IGRldGVjdE92ZXJmbG93KHN0YXRlLCB7XG4gICAgZWxlbWVudENvbnRleHQ6ICdyZWZlcmVuY2UnXG4gIH0pO1xuICB2YXIgcG9wcGVyQWx0T3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGFsdEJvdW5kYXJ5OiB0cnVlXG4gIH0pO1xuICB2YXIgcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocmVmZXJlbmNlT3ZlcmZsb3csIHJlZmVyZW5jZVJlY3QpO1xuICB2YXIgcG9wcGVyRXNjYXBlT2Zmc2V0cyA9IGdldFNpZGVPZmZzZXRzKHBvcHBlckFsdE92ZXJmbG93LCBwb3BwZXJSZWN0LCBwcmV2ZW50ZWRPZmZzZXRzKTtcbiAgdmFyIGlzUmVmZXJlbmNlSGlkZGVuID0gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKHJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cyk7XG4gIHZhciBoYXNQb3BwZXJFc2NhcGVkID0gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKHBvcHBlckVzY2FwZU9mZnNldHMpO1xuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0ge1xuICAgIHJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0czogcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzLFxuICAgIHBvcHBlckVzY2FwZU9mZnNldHM6IHBvcHBlckVzY2FwZU9mZnNldHMsXG4gICAgaXNSZWZlcmVuY2VIaWRkZW46IGlzUmVmZXJlbmNlSGlkZGVuLFxuICAgIGhhc1BvcHBlckVzY2FwZWQ6IGhhc1BvcHBlckVzY2FwZWRcbiAgfTtcbiAgc3RhdGUuYXR0cmlidXRlcy5wb3BwZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciwge1xuICAgICdkYXRhLXBvcHBlci1yZWZlcmVuY2UtaGlkZGVuJzogaXNSZWZlcmVuY2VIaWRkZW4sXG4gICAgJ2RhdGEtcG9wcGVyLWVzY2FwZWQnOiBoYXNQb3BwZXJFc2NhcGVkXG4gIH0pO1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnaGlkZScsXG4gIGVuYWJsZWQ6IHRydWUsXG4gIHBoYXNlOiAnbWFpbicsXG4gIHJlcXVpcmVzSWZFeGlzdHM6IFsncHJldmVudE92ZXJmbG93J10sXG4gIGZuOiBoaWRlXG59OyIsImV4cG9ydCB7IGRlZmF1bHQgYXMgYXBwbHlTdHlsZXMgfSBmcm9tIFwiLi9hcHBseVN0eWxlcy5qc1wiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhcnJvdyB9IGZyb20gXCIuL2Fycm93LmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGNvbXB1dGVTdHlsZXMgfSBmcm9tIFwiLi9jb21wdXRlU3R5bGVzLmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGV2ZW50TGlzdGVuZXJzIH0gZnJvbSBcIi4vZXZlbnRMaXN0ZW5lcnMuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZmxpcCB9IGZyb20gXCIuL2ZsaXAuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaGlkZSB9IGZyb20gXCIuL2hpZGUuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgb2Zmc2V0IH0gZnJvbSBcIi4vb2Zmc2V0LmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHBvcHBlck9mZnNldHMgfSBmcm9tIFwiLi9wb3BwZXJPZmZzZXRzLmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHByZXZlbnRPdmVyZmxvdyB9IGZyb20gXCIuL3ByZXZlbnRPdmVyZmxvdy5qc1wiOyIsImltcG9ydCBnZXRCYXNlUGxhY2VtZW50IGZyb20gXCIuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgeyB0b3AsIGxlZnQsIHJpZ2h0LCBwbGFjZW1lbnRzIH0gZnJvbSBcIi4uL2VudW1zLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3RhbmNlQW5kU2tpZGRpbmdUb1hZKHBsYWNlbWVudCwgcmVjdHMsIG9mZnNldCkge1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgdmFyIGludmVydERpc3RhbmNlID0gW2xlZnQsIHRvcF0uaW5kZXhPZihiYXNlUGxhY2VtZW50KSA+PSAwID8gLTEgOiAxO1xuXG4gIHZhciBfcmVmID0gdHlwZW9mIG9mZnNldCA9PT0gJ2Z1bmN0aW9uJyA/IG9mZnNldChPYmplY3QuYXNzaWduKHt9LCByZWN0cywge1xuICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gIH0pKSA6IG9mZnNldCxcbiAgICAgIHNraWRkaW5nID0gX3JlZlswXSxcbiAgICAgIGRpc3RhbmNlID0gX3JlZlsxXTtcblxuICBza2lkZGluZyA9IHNraWRkaW5nIHx8IDA7XG4gIGRpc3RhbmNlID0gKGRpc3RhbmNlIHx8IDApICogaW52ZXJ0RGlzdGFuY2U7XG4gIHJldHVybiBbbGVmdCwgcmlnaHRdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMCA/IHtcbiAgICB4OiBkaXN0YW5jZSxcbiAgICB5OiBza2lkZGluZ1xuICB9IDoge1xuICAgIHg6IHNraWRkaW5nLFxuICAgIHk6IGRpc3RhbmNlXG4gIH07XG59XG5cbmZ1bmN0aW9uIG9mZnNldChfcmVmMikge1xuICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZSxcbiAgICAgIG9wdGlvbnMgPSBfcmVmMi5vcHRpb25zLFxuICAgICAgbmFtZSA9IF9yZWYyLm5hbWU7XG4gIHZhciBfb3B0aW9ucyRvZmZzZXQgPSBvcHRpb25zLm9mZnNldCxcbiAgICAgIG9mZnNldCA9IF9vcHRpb25zJG9mZnNldCA9PT0gdm9pZCAwID8gWzAsIDBdIDogX29wdGlvbnMkb2Zmc2V0O1xuICB2YXIgZGF0YSA9IHBsYWNlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIGFjY1twbGFjZW1lbnRdID0gZGlzdGFuY2VBbmRTa2lkZGluZ1RvWFkocGxhY2VtZW50LCBzdGF0ZS5yZWN0cywgb2Zmc2V0KTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHZhciBfZGF0YSRzdGF0ZSRwbGFjZW1lbnQgPSBkYXRhW3N0YXRlLnBsYWNlbWVudF0sXG4gICAgICB4ID0gX2RhdGEkc3RhdGUkcGxhY2VtZW50LngsXG4gICAgICB5ID0gX2RhdGEkc3RhdGUkcGxhY2VtZW50Lnk7XG5cbiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyAhPSBudWxsKSB7XG4gICAgc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLnggKz0geDtcbiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMueSArPSB5O1xuICB9XG5cbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGRhdGE7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdvZmZzZXQnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICByZXF1aXJlczogWydwb3BwZXJPZmZzZXRzJ10sXG4gIGZuOiBvZmZzZXRcbn07IiwiaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuLi91dGlscy9jb21wdXRlT2Zmc2V0cy5qc1wiO1xuXG5mdW5jdGlvbiBwb3BwZXJPZmZzZXRzKF9yZWYpIHtcbiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIC8vIE9mZnNldHMgYXJlIHRoZSBhY3R1YWwgcG9zaXRpb24gdGhlIHBvcHBlciBuZWVkcyB0byBoYXZlIHRvIGJlXG4gIC8vIHByb3Blcmx5IHBvc2l0aW9uZWQgbmVhciBpdHMgcmVmZXJlbmNlIGVsZW1lbnRcbiAgLy8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBwbGFjZW1lbnQsIGFuZCB3aWxsIGJlIGFkanVzdGVkIGJ5XG4gIC8vIHRoZSBtb2RpZmllcnMgaW4gdGhlIG5leHQgc3RlcFxuICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gY29tcHV0ZU9mZnNldHMoe1xuICAgIHJlZmVyZW5jZTogc3RhdGUucmVjdHMucmVmZXJlbmNlLFxuICAgIGVsZW1lbnQ6IHN0YXRlLnJlY3RzLnBvcHBlcixcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudFxuICB9KTtcbn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3BvcHBlck9mZnNldHMnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ3JlYWQnLFxuICBmbjogcG9wcGVyT2Zmc2V0cyxcbiAgZGF0YToge31cbn07IiwiaW1wb3J0IHsgdG9wLCBsZWZ0LCByaWdodCwgYm90dG9tLCBzdGFydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGdldEJhc2VQbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanNcIjtcbmltcG9ydCBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQgZnJvbSBcIi4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qc1wiO1xuaW1wb3J0IGdldEFsdEF4aXMgZnJvbSBcIi4uL3V0aWxzL2dldEFsdEF4aXMuanNcIjtcbmltcG9ydCB7IHdpdGhpbiwgd2l0aGluTWF4Q2xhbXAgfSBmcm9tIFwiLi4vdXRpbHMvd2l0aGluLmpzXCI7XG5pbXBvcnQgZ2V0TGF5b3V0UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanNcIjtcbmltcG9ydCBnZXRPZmZzZXRQYXJlbnQgZnJvbSBcIi4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanNcIjtcbmltcG9ydCBkZXRlY3RPdmVyZmxvdyBmcm9tIFwiLi4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBnZXRWYXJpYXRpb24gZnJvbSBcIi4uL3V0aWxzL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IGdldEZyZXNoU2lkZU9iamVjdCBmcm9tIFwiLi4vdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzXCI7XG5pbXBvcnQgeyBtaW4gYXMgbWF0aE1pbiwgbWF4IGFzIG1hdGhNYXggfSBmcm9tIFwiLi4vdXRpbHMvbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBwcmV2ZW50T3ZlcmZsb3coX3JlZikge1xuICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7XG4gIHZhciBfb3B0aW9ucyRtYWluQXhpcyA9IG9wdGlvbnMubWFpbkF4aXMsXG4gICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcyxcbiAgICAgIF9vcHRpb25zJGFsdEF4aXMgPSBvcHRpb25zLmFsdEF4aXMsXG4gICAgICBjaGVja0FsdEF4aXMgPSBfb3B0aW9ucyRhbHRBeGlzID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGFsdEF4aXMsXG4gICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBvcHRpb25zLnJvb3RCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsXG4gICAgICBfb3B0aW9ucyR0ZXRoZXIgPSBvcHRpb25zLnRldGhlcixcbiAgICAgIHRldGhlciA9IF9vcHRpb25zJHRldGhlciA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJHRldGhlcixcbiAgICAgIF9vcHRpb25zJHRldGhlck9mZnNldCA9IG9wdGlvbnMudGV0aGVyT2Zmc2V0LFxuICAgICAgdGV0aGVyT2Zmc2V0ID0gX29wdGlvbnMkdGV0aGVyT2Zmc2V0ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkdGV0aGVyT2Zmc2V0O1xuICB2YXIgb3ZlcmZsb3cgPSBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwge1xuICAgIGJvdW5kYXJ5OiBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSxcbiAgICBwYWRkaW5nOiBwYWRkaW5nLFxuICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeVxuICB9KTtcbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBnZXRCYXNlUGxhY2VtZW50KHN0YXRlLnBsYWNlbWVudCk7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24oc3RhdGUucGxhY2VtZW50KTtcbiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9ICF2YXJpYXRpb247XG4gIHZhciBtYWluQXhpcyA9IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChiYXNlUGxhY2VtZW50KTtcbiAgdmFyIGFsdEF4aXMgPSBnZXRBbHRBeGlzKG1haW5BeGlzKTtcbiAgdmFyIHBvcHBlck9mZnNldHMgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHM7XG4gIHZhciByZWZlcmVuY2VSZWN0ID0gc3RhdGUucmVjdHMucmVmZXJlbmNlO1xuICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjtcbiAgdmFyIHRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldCA9PT0gJ2Z1bmN0aW9uJyA/IHRldGhlck9mZnNldChPYmplY3QuYXNzaWduKHt9LCBzdGF0ZS5yZWN0cywge1xuICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50XG4gIH0pKSA6IHRldGhlck9mZnNldDtcbiAgdmFyIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZSA9IHR5cGVvZiB0ZXRoZXJPZmZzZXRWYWx1ZSA9PT0gJ251bWJlcicgPyB7XG4gICAgbWFpbkF4aXM6IHRldGhlck9mZnNldFZhbHVlLFxuICAgIGFsdEF4aXM6IHRldGhlck9mZnNldFZhbHVlXG4gIH0gOiBPYmplY3QuYXNzaWduKHtcbiAgICBtYWluQXhpczogMCxcbiAgICBhbHRBeGlzOiAwXG4gIH0sIHRldGhlck9mZnNldFZhbHVlKTtcbiAgdmFyIG9mZnNldE1vZGlmaWVyU3RhdGUgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldCA/IHN0YXRlLm1vZGlmaWVyc0RhdGEub2Zmc2V0W3N0YXRlLnBsYWNlbWVudF0gOiBudWxsO1xuICB2YXIgZGF0YSA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcblxuICBpZiAoIXBvcHBlck9mZnNldHMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoY2hlY2tNYWluQXhpcykge1xuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQ7XG5cbiAgICB2YXIgbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3knID8gdG9wIDogbGVmdDtcbiAgICB2YXIgYWx0U2lkZSA9IG1haW5BeGlzID09PSAneScgPyBib3R0b20gOiByaWdodDtcbiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJztcbiAgICB2YXIgb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1ttYWluQXhpc107XG4gICAgdmFyIG1pbiA9IG9mZnNldCArIG92ZXJmbG93W21haW5TaWRlXTtcbiAgICB2YXIgbWF4ID0gb2Zmc2V0IC0gb3ZlcmZsb3dbYWx0U2lkZV07XG4gICAgdmFyIGFkZGl0aXZlID0gdGV0aGVyID8gLXBvcHBlclJlY3RbbGVuXSAvIDIgOiAwO1xuICAgIHZhciBtaW5MZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gcmVmZXJlbmNlUmVjdFtsZW5dIDogcG9wcGVyUmVjdFtsZW5dO1xuICAgIHZhciBtYXhMZW4gPSB2YXJpYXRpb24gPT09IHN0YXJ0ID8gLXBvcHBlclJlY3RbbGVuXSA6IC1yZWZlcmVuY2VSZWN0W2xlbl07IC8vIFdlIG5lZWQgdG8gaW5jbHVkZSB0aGUgYXJyb3cgaW4gdGhlIGNhbGN1bGF0aW9uIHNvIHRoZSBhcnJvdyBkb2Vzbid0IGdvXG4gICAgLy8gb3V0c2lkZSB0aGUgcmVmZXJlbmNlIGJvdW5kc1xuXG4gICAgdmFyIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLmFycm93O1xuICAgIHZhciBhcnJvd1JlY3QgPSB0ZXRoZXIgJiYgYXJyb3dFbGVtZW50ID8gZ2V0TGF5b3V0UmVjdChhcnJvd0VsZW1lbnQpIDoge1xuICAgICAgd2lkdGg6IDAsXG4gICAgICBoZWlnaHQ6IDBcbiAgICB9O1xuICAgIHZhciBhcnJvd1BhZGRpbmdPYmplY3QgPSBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10gPyBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10ucGFkZGluZyA6IGdldEZyZXNoU2lkZU9iamVjdCgpO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNaW4gPSBhcnJvd1BhZGRpbmdPYmplY3RbbWFpblNpZGVdO1xuICAgIHZhciBhcnJvd1BhZGRpbmdNYXggPSBhcnJvd1BhZGRpbmdPYmplY3RbYWx0U2lkZV07IC8vIElmIHRoZSByZWZlcmVuY2UgbGVuZ3RoIGlzIHNtYWxsZXIgdGhhbiB0aGUgYXJyb3cgbGVuZ3RoLCB3ZSBkb24ndCB3YW50XG4gICAgLy8gdG8gaW5jbHVkZSBpdHMgZnVsbCBzaXplIGluIHRoZSBjYWxjdWxhdGlvbi4gSWYgdGhlIHJlZmVyZW5jZSBpcyBzbWFsbFxuICAgIC8vIGFuZCBuZWFyIHRoZSBlZGdlIG9mIGEgYm91bmRhcnksIHRoZSBwb3BwZXIgY2FuIG92ZXJmbG93IGV2ZW4gaWYgdGhlXG4gICAgLy8gcmVmZXJlbmNlIGlzIG5vdCBvdmVyZmxvd2luZyBhcyB3ZWxsIChlLmcuIHZpcnR1YWwgZWxlbWVudHMgd2l0aCBub1xuICAgIC8vIHdpZHRoIG9yIGhlaWdodClcblxuICAgIHZhciBhcnJvd0xlbiA9IHdpdGhpbigwLCByZWZlcmVuY2VSZWN0W2xlbl0sIGFycm93UmVjdFtsZW5dKTtcbiAgICB2YXIgbWluT2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gcmVmZXJlbmNlUmVjdFtsZW5dIC8gMiAtIGFkZGl0aXZlIC0gYXJyb3dMZW4gLSBhcnJvd1BhZGRpbmdNaW4gLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXMgOiBtaW5MZW4gLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcztcbiAgICB2YXIgbWF4T2Zmc2V0ID0gaXNCYXNlUGxhY2VtZW50ID8gLXJlZmVyZW5jZVJlY3RbbGVuXSAvIDIgKyBhZGRpdGl2ZSArIGFycm93TGVuICsgYXJyb3dQYWRkaW5nTWF4ICsgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzIDogbWF4TGVuICsgYXJyb3dMZW4gKyBhcnJvd1BhZGRpbmdNYXggKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUubWFpbkF4aXM7XG4gICAgdmFyIGFycm93T2Zmc2V0UGFyZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3cgJiYgZ2V0T2Zmc2V0UGFyZW50KHN0YXRlLmVsZW1lbnRzLmFycm93KTtcbiAgICB2YXIgY2xpZW50T2Zmc2V0ID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBtYWluQXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50VG9wIHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRMZWZ0IHx8IDAgOiAwO1xuICAgIHZhciBvZmZzZXRNb2RpZmllclZhbHVlID0gKF9vZmZzZXRNb2RpZmllclN0YXRlJCA9IG9mZnNldE1vZGlmaWVyU3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IG9mZnNldE1vZGlmaWVyU3RhdGVbbWFpbkF4aXNdKSAhPSBudWxsID8gX29mZnNldE1vZGlmaWVyU3RhdGUkIDogMDtcbiAgICB2YXIgdGV0aGVyTWluID0gb2Zmc2V0ICsgbWluT2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZSAtIGNsaWVudE9mZnNldDtcbiAgICB2YXIgdGV0aGVyTWF4ID0gb2Zmc2V0ICsgbWF4T2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZTtcbiAgICB2YXIgcHJldmVudGVkT2Zmc2V0ID0gd2l0aGluKHRldGhlciA/IG1hdGhNaW4obWluLCB0ZXRoZXJNaW4pIDogbWluLCBvZmZzZXQsIHRldGhlciA/IG1hdGhNYXgobWF4LCB0ZXRoZXJNYXgpIDogbWF4KTtcbiAgICBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldDtcbiAgICBkYXRhW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldCAtIG9mZnNldDtcbiAgfVxuXG4gIGlmIChjaGVja0FsdEF4aXMpIHtcbiAgICB2YXIgX29mZnNldE1vZGlmaWVyU3RhdGUkMjtcblxuICAgIHZhciBfbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3gnID8gdG9wIDogbGVmdDtcblxuICAgIHZhciBfYWx0U2lkZSA9IG1haW5BeGlzID09PSAneCcgPyBib3R0b20gOiByaWdodDtcblxuICAgIHZhciBfb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1thbHRBeGlzXTtcblxuICAgIHZhciBfbGVuID0gYWx0QXhpcyA9PT0gJ3knID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuXG4gICAgdmFyIF9taW4gPSBfb2Zmc2V0ICsgb3ZlcmZsb3dbX21haW5TaWRlXTtcblxuICAgIHZhciBfbWF4ID0gX29mZnNldCAtIG92ZXJmbG93W19hbHRTaWRlXTtcblxuICAgIHZhciBpc09yaWdpblNpZGUgPSBbdG9wLCBsZWZ0XS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpICE9PSAtMTtcblxuICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSA9IChfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVthbHRBeGlzXSkgIT0gbnVsbCA/IF9vZmZzZXRNb2RpZmllclN0YXRlJDIgOiAwO1xuXG4gICAgdmFyIF90ZXRoZXJNaW4gPSBpc09yaWdpblNpZGUgPyBfbWluIDogX29mZnNldCAtIHJlZmVyZW5jZVJlY3RbX2xlbl0gLSBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgKyBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcztcblxuICAgIHZhciBfdGV0aGVyTWF4ID0gaXNPcmlnaW5TaWRlID8gX29mZnNldCArIHJlZmVyZW5jZVJlY3RbX2xlbl0gKyBwb3BwZXJSZWN0W19sZW5dIC0gX29mZnNldE1vZGlmaWVyVmFsdWUgLSBub3JtYWxpemVkVGV0aGVyT2Zmc2V0VmFsdWUuYWx0QXhpcyA6IF9tYXg7XG5cbiAgICB2YXIgX3ByZXZlbnRlZE9mZnNldCA9IHRldGhlciAmJiBpc09yaWdpblNpZGUgPyB3aXRoaW5NYXhDbGFtcChfdGV0aGVyTWluLCBfb2Zmc2V0LCBfdGV0aGVyTWF4KSA6IHdpdGhpbih0ZXRoZXIgPyBfdGV0aGVyTWluIDogX21pbiwgX29mZnNldCwgdGV0aGVyID8gX3RldGhlck1heCA6IF9tYXgpO1xuXG4gICAgcG9wcGVyT2Zmc2V0c1thbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQ7XG4gICAgZGF0YVthbHRBeGlzXSA9IF9wcmV2ZW50ZWRPZmZzZXQgLSBfb2Zmc2V0O1xuICB9XG5cbiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9IGRhdGE7XG59IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLFxuICBlbmFibGVkOiB0cnVlLFxuICBwaGFzZTogJ21haW4nLFxuICBmbjogcHJldmVudE92ZXJmbG93LFxuICByZXF1aXJlc0lmRXhpc3RzOiBbJ29mZnNldCddXG59OyIsImltcG9ydCB7IHBvcHBlckdlbmVyYXRvciwgZGV0ZWN0T3ZlcmZsb3cgfSBmcm9tIFwiLi9jcmVhdGVQb3BwZXIuanNcIjtcbmltcG9ydCBldmVudExpc3RlbmVycyBmcm9tIFwiLi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanNcIjtcbmltcG9ydCBwb3BwZXJPZmZzZXRzIGZyb20gXCIuL21vZGlmaWVycy9wb3BwZXJPZmZzZXRzLmpzXCI7XG5pbXBvcnQgY29tcHV0ZVN0eWxlcyBmcm9tIFwiLi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qc1wiO1xuaW1wb3J0IGFwcGx5U3R5bGVzIGZyb20gXCIuL21vZGlmaWVycy9hcHBseVN0eWxlcy5qc1wiO1xudmFyIGRlZmF1bHRNb2RpZmllcnMgPSBbZXZlbnRMaXN0ZW5lcnMsIHBvcHBlck9mZnNldHMsIGNvbXB1dGVTdHlsZXMsIGFwcGx5U3R5bGVzXTtcbnZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovcG9wcGVyR2VuZXJhdG9yKHtcbiAgZGVmYXVsdE1vZGlmaWVyczogZGVmYXVsdE1vZGlmaWVyc1xufSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXNcblxuZXhwb3J0IHsgY3JlYXRlUG9wcGVyLCBwb3BwZXJHZW5lcmF0b3IsIGRlZmF1bHRNb2RpZmllcnMsIGRldGVjdE92ZXJmbG93IH07IiwiaW1wb3J0IHsgcG9wcGVyR2VuZXJhdG9yLCBkZXRlY3RPdmVyZmxvdyB9IGZyb20gXCIuL2NyZWF0ZVBvcHBlci5qc1wiO1xuaW1wb3J0IGV2ZW50TGlzdGVuZXJzIGZyb20gXCIuL21vZGlmaWVycy9ldmVudExpc3RlbmVycy5qc1wiO1xuaW1wb3J0IHBvcHBlck9mZnNldHMgZnJvbSBcIi4vbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanNcIjtcbmltcG9ydCBjb21wdXRlU3R5bGVzIGZyb20gXCIuL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzXCI7XG5pbXBvcnQgYXBwbHlTdHlsZXMgZnJvbSBcIi4vbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzXCI7XG5pbXBvcnQgb2Zmc2V0IGZyb20gXCIuL21vZGlmaWVycy9vZmZzZXQuanNcIjtcbmltcG9ydCBmbGlwIGZyb20gXCIuL21vZGlmaWVycy9mbGlwLmpzXCI7XG5pbXBvcnQgcHJldmVudE92ZXJmbG93IGZyb20gXCIuL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanNcIjtcbmltcG9ydCBhcnJvdyBmcm9tIFwiLi9tb2RpZmllcnMvYXJyb3cuanNcIjtcbmltcG9ydCBoaWRlIGZyb20gXCIuL21vZGlmaWVycy9oaWRlLmpzXCI7XG52YXIgZGVmYXVsdE1vZGlmaWVycyA9IFtldmVudExpc3RlbmVycywgcG9wcGVyT2Zmc2V0cywgY29tcHV0ZVN0eWxlcywgYXBwbHlTdHlsZXMsIG9mZnNldCwgZmxpcCwgcHJldmVudE92ZXJmbG93LCBhcnJvdywgaGlkZV07XG52YXIgY3JlYXRlUG9wcGVyID0gLyojX19QVVJFX18qL3BvcHBlckdlbmVyYXRvcih7XG4gIGRlZmF1bHRNb2RpZmllcnM6IGRlZmF1bHRNb2RpZmllcnNcbn0pOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciwgcG9wcGVyR2VuZXJhdG9yLCBkZWZhdWx0TW9kaWZpZXJzLCBkZXRlY3RPdmVyZmxvdyB9OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzXG5cbmV4cG9ydCB7IGNyZWF0ZVBvcHBlciBhcyBjcmVhdGVQb3BwZXJMaXRlIH0gZnJvbSBcIi4vcG9wcGVyLWxpdGUuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgKiBmcm9tIFwiLi9tb2RpZmllcnMvaW5kZXguanNcIjsiLCJpbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IHsgdmFyaWF0aW9uUGxhY2VtZW50cywgYmFzZVBsYWNlbWVudHMsIHBsYWNlbWVudHMgYXMgYWxsUGxhY2VtZW50cyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IGRldGVjdE92ZXJmbG93IGZyb20gXCIuL2RldGVjdE92ZXJmbG93LmpzXCI7XG5pbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlQXV0b1BsYWNlbWVudChzdGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgIGJvdW5kYXJ5ID0gX29wdGlvbnMuYm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICBwYWRkaW5nID0gX29wdGlvbnMucGFkZGluZyxcbiAgICAgIGZsaXBWYXJpYXRpb25zID0gX29wdGlvbnMuZmxpcFZhcmlhdGlvbnMsXG4gICAgICBfb3B0aW9ucyRhbGxvd2VkQXV0b1AgPSBfb3B0aW9ucy5hbGxvd2VkQXV0b1BsYWNlbWVudHMsXG4gICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHMgPSBfb3B0aW9ucyRhbGxvd2VkQXV0b1AgPT09IHZvaWQgMCA/IGFsbFBsYWNlbWVudHMgOiBfb3B0aW9ucyRhbGxvd2VkQXV0b1A7XG4gIHZhciB2YXJpYXRpb24gPSBnZXRWYXJpYXRpb24ocGxhY2VtZW50KTtcbiAgdmFyIHBsYWNlbWVudHMgPSB2YXJpYXRpb24gPyBmbGlwVmFyaWF0aW9ucyA/IHZhcmlhdGlvblBsYWNlbWVudHMgOiB2YXJpYXRpb25QbGFjZW1lbnRzLmZpbHRlcihmdW5jdGlvbiAocGxhY2VtZW50KSB7XG4gICAgcmV0dXJuIGdldFZhcmlhdGlvbihwbGFjZW1lbnQpID09PSB2YXJpYXRpb247XG4gIH0pIDogYmFzZVBsYWNlbWVudHM7XG4gIHZhciBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICByZXR1cm4gYWxsb3dlZEF1dG9QbGFjZW1lbnRzLmluZGV4T2YocGxhY2VtZW50KSA+PSAwO1xuICB9KTtcblxuICBpZiAoYWxsb3dlZFBsYWNlbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgYWxsb3dlZFBsYWNlbWVudHMgPSBwbGFjZW1lbnRzO1xuICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXR5cGVdOiBGbG93IHNlZW1zIHRvIGhhdmUgcHJvYmxlbXMgd2l0aCB0d28gYXJyYXkgdW5pb25zLi4uXG5cblxuICB2YXIgb3ZlcmZsb3dzID0gYWxsb3dlZFBsYWNlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkge1xuICAgIGFjY1twbGFjZW1lbnRdID0gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIHtcbiAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LFxuICAgICAgcm9vdEJvdW5kYXJ5OiByb290Qm91bmRhcnksXG4gICAgICBwYWRkaW5nOiBwYWRkaW5nXG4gICAgfSlbZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpXTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvdmVyZmxvd3MpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gb3ZlcmZsb3dzW2FdIC0gb3ZlcmZsb3dzW2JdO1xuICB9KTtcbn0iLCJpbXBvcnQgZ2V0QmFzZVBsYWNlbWVudCBmcm9tIFwiLi9nZXRCYXNlUGxhY2VtZW50LmpzXCI7XG5pbXBvcnQgZ2V0VmFyaWF0aW9uIGZyb20gXCIuL2dldFZhcmlhdGlvbi5qc1wiO1xuaW1wb3J0IGdldE1haW5BeGlzRnJvbVBsYWNlbWVudCBmcm9tIFwiLi9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanNcIjtcbmltcG9ydCB7IHRvcCwgcmlnaHQsIGJvdHRvbSwgbGVmdCwgc3RhcnQsIGVuZCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tcHV0ZU9mZnNldHMoX3JlZikge1xuICB2YXIgcmVmZXJlbmNlID0gX3JlZi5yZWZlcmVuY2UsXG4gICAgICBlbGVtZW50ID0gX3JlZi5lbGVtZW50LFxuICAgICAgcGxhY2VtZW50ID0gX3JlZi5wbGFjZW1lbnQ7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gcGxhY2VtZW50ID8gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpIDogbnVsbDtcbiAgdmFyIHZhcmlhdGlvbiA9IHBsYWNlbWVudCA/IGdldFZhcmlhdGlvbihwbGFjZW1lbnQpIDogbnVsbDtcbiAgdmFyIGNvbW1vblggPSByZWZlcmVuY2UueCArIHJlZmVyZW5jZS53aWR0aCAvIDIgLSBlbGVtZW50LndpZHRoIC8gMjtcbiAgdmFyIGNvbW1vblkgPSByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHQgLyAyIC0gZWxlbWVudC5oZWlnaHQgLyAyO1xuICB2YXIgb2Zmc2V0cztcblxuICBzd2l0Y2ggKGJhc2VQbGFjZW1lbnQpIHtcbiAgICBjYXNlIHRvcDpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IGNvbW1vblgsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55IC0gZWxlbWVudC5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgYm90dG9tOlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIHJpZ2h0OlxuICAgICAgb2Zmc2V0cyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGgsXG4gICAgICAgIHk6IGNvbW1vbllcbiAgICAgIH07XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgbGVmdDpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54IC0gZWxlbWVudC53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIG9mZnNldHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54LFxuICAgICAgICB5OiByZWZlcmVuY2UueVxuICAgICAgfTtcbiAgfVxuXG4gIHZhciBtYWluQXhpcyA9IGJhc2VQbGFjZW1lbnQgPyBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQoYmFzZVBsYWNlbWVudCkgOiBudWxsO1xuXG4gIGlmIChtYWluQXhpcyAhPSBudWxsKSB7XG4gICAgdmFyIGxlbiA9IG1haW5BeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG5cbiAgICBzd2l0Y2ggKHZhcmlhdGlvbikge1xuICAgICAgY2FzZSBzdGFydDpcbiAgICAgICAgb2Zmc2V0c1ttYWluQXhpc10gPSBvZmZzZXRzW21haW5BeGlzXSAtIChyZWZlcmVuY2VbbGVuXSAvIDIgLSBlbGVtZW50W2xlbl0gLyAyKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgZW5kOlxuICAgICAgICBvZmZzZXRzW21haW5BeGlzXSA9IG9mZnNldHNbbWFpbkF4aXNdICsgKHJlZmVyZW5jZVtsZW5dIC8gMiAtIGVsZW1lbnRbbGVuXSAvIDIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2Zmc2V0cztcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWJvdW5jZShmbikge1xuICB2YXIgcGVuZGluZztcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXBlbmRpbmcpIHtcbiAgICAgIHBlbmRpbmcgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBwZW5kaW5nID0gdW5kZWZpbmVkO1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBlbmRpbmc7XG4gIH07XG59IiwiaW1wb3J0IGdldENsaXBwaW5nUmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qc1wiO1xuaW1wb3J0IGdldERvY3VtZW50RWxlbWVudCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qc1wiO1xuaW1wb3J0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBmcm9tIFwiLi4vZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qc1wiO1xuaW1wb3J0IGNvbXB1dGVPZmZzZXRzIGZyb20gXCIuL2NvbXB1dGVPZmZzZXRzLmpzXCI7XG5pbXBvcnQgcmVjdFRvQ2xpZW50UmVjdCBmcm9tIFwiLi9yZWN0VG9DbGllbnRSZWN0LmpzXCI7XG5pbXBvcnQgeyBjbGlwcGluZ1BhcmVudHMsIHJlZmVyZW5jZSwgcG9wcGVyLCBib3R0b20sIHRvcCwgcmlnaHQsIGJhc2VQbGFjZW1lbnRzLCB2aWV3cG9ydCB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSBcIi4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzXCI7XG5pbXBvcnQgbWVyZ2VQYWRkaW5nT2JqZWN0IGZyb20gXCIuL21lcmdlUGFkZGluZ09iamVjdC5qc1wiO1xuaW1wb3J0IGV4cGFuZFRvSGFzaE1hcCBmcm9tIFwiLi9leHBhbmRUb0hhc2hNYXAuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlc1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZXRlY3RPdmVyZmxvdyhzdGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zJHBsYWNlbWVudCA9IF9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zJHBsYWNlbWVudCA9PT0gdm9pZCAwID8gc3RhdGUucGxhY2VtZW50IDogX29wdGlvbnMkcGxhY2VtZW50LFxuICAgICAgX29wdGlvbnMkc3RyYXRlZ3kgPSBfb3B0aW9ucy5zdHJhdGVneSxcbiAgICAgIHN0cmF0ZWd5ID0gX29wdGlvbnMkc3RyYXRlZ3kgPT09IHZvaWQgMCA/IHN0YXRlLnN0cmF0ZWd5IDogX29wdGlvbnMkc3RyYXRlZ3ksXG4gICAgICBfb3B0aW9ucyRib3VuZGFyeSA9IF9vcHRpb25zLmJvdW5kYXJ5LFxuICAgICAgYm91bmRhcnkgPSBfb3B0aW9ucyRib3VuZGFyeSA9PT0gdm9pZCAwID8gY2xpcHBpbmdQYXJlbnRzIDogX29wdGlvbnMkYm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRyb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksXG4gICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucyRyb290Qm91bmRhcnkgPT09IHZvaWQgMCA/IHZpZXdwb3J0IDogX29wdGlvbnMkcm9vdEJvdW5kYXJ5LFxuICAgICAgX29wdGlvbnMkZWxlbWVudENvbnRlID0gX29wdGlvbnMuZWxlbWVudENvbnRleHQsXG4gICAgICBlbGVtZW50Q29udGV4dCA9IF9vcHRpb25zJGVsZW1lbnRDb250ZSA9PT0gdm9pZCAwID8gcG9wcGVyIDogX29wdGlvbnMkZWxlbWVudENvbnRlLFxuICAgICAgX29wdGlvbnMkYWx0Qm91bmRhcnkgPSBfb3B0aW9ucy5hbHRCb3VuZGFyeSxcbiAgICAgIGFsdEJvdW5kYXJ5ID0gX29wdGlvbnMkYWx0Qm91bmRhcnkgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkYWx0Qm91bmRhcnksXG4gICAgICBfb3B0aW9ucyRwYWRkaW5nID0gX29wdGlvbnMucGFkZGluZyxcbiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucyRwYWRkaW5nID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkcGFkZGluZztcbiAgdmFyIHBhZGRpbmdPYmplY3QgPSBtZXJnZVBhZGRpbmdPYmplY3QodHlwZW9mIHBhZGRpbmcgIT09ICdudW1iZXInID8gcGFkZGluZyA6IGV4cGFuZFRvSGFzaE1hcChwYWRkaW5nLCBiYXNlUGxhY2VtZW50cykpO1xuICB2YXIgYWx0Q29udGV4dCA9IGVsZW1lbnRDb250ZXh0ID09PSBwb3BwZXIgPyByZWZlcmVuY2UgOiBwb3BwZXI7XG4gIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyO1xuICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW2FsdEJvdW5kYXJ5ID8gYWx0Q29udGV4dCA6IGVsZW1lbnRDb250ZXh0XTtcbiAgdmFyIGNsaXBwaW5nQ2xpZW50UmVjdCA9IGdldENsaXBwaW5nUmVjdChpc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50IDogZWxlbWVudC5jb250ZXh0RWxlbWVudCB8fCBnZXREb2N1bWVudEVsZW1lbnQoc3RhdGUuZWxlbWVudHMucG9wcGVyKSwgYm91bmRhcnksIHJvb3RCb3VuZGFyeSwgc3RyYXRlZ3kpO1xuICB2YXIgcmVmZXJlbmNlQ2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChzdGF0ZS5lbGVtZW50cy5yZWZlcmVuY2UpO1xuICB2YXIgcG9wcGVyT2Zmc2V0cyA9IGNvbXB1dGVPZmZzZXRzKHtcbiAgICByZWZlcmVuY2U6IHJlZmVyZW5jZUNsaWVudFJlY3QsXG4gICAgZWxlbWVudDogcG9wcGVyUmVjdCxcbiAgICBzdHJhdGVneTogJ2Fic29sdXRlJyxcbiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICB9KTtcbiAgdmFyIHBvcHBlckNsaWVudFJlY3QgPSByZWN0VG9DbGllbnRSZWN0KE9iamVjdC5hc3NpZ24oe30sIHBvcHBlclJlY3QsIHBvcHBlck9mZnNldHMpKTtcbiAgdmFyIGVsZW1lbnRDbGllbnRSZWN0ID0gZWxlbWVudENvbnRleHQgPT09IHBvcHBlciA/IHBvcHBlckNsaWVudFJlY3QgOiByZWZlcmVuY2VDbGllbnRSZWN0OyAvLyBwb3NpdGl2ZSA9IG92ZXJmbG93aW5nIHRoZSBjbGlwcGluZyByZWN0XG4gIC8vIDAgb3IgbmVnYXRpdmUgPSB3aXRoaW4gdGhlIGNsaXBwaW5nIHJlY3RcblxuICB2YXIgb3ZlcmZsb3dPZmZzZXRzID0ge1xuICAgIHRvcDogY2xpcHBpbmdDbGllbnRSZWN0LnRvcCAtIGVsZW1lbnRDbGllbnRSZWN0LnRvcCArIHBhZGRpbmdPYmplY3QudG9wLFxuICAgIGJvdHRvbTogZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tLFxuICAgIGxlZnQ6IGNsaXBwaW5nQ2xpZW50UmVjdC5sZWZ0IC0gZWxlbWVudENsaWVudFJlY3QubGVmdCArIHBhZGRpbmdPYmplY3QubGVmdCxcbiAgICByaWdodDogZWxlbWVudENsaWVudFJlY3QucmlnaHQgLSBjbGlwcGluZ0NsaWVudFJlY3QucmlnaHQgKyBwYWRkaW5nT2JqZWN0LnJpZ2h0XG4gIH07XG4gIHZhciBvZmZzZXREYXRhID0gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXQ7IC8vIE9mZnNldHMgY2FuIGJlIGFwcGxpZWQgb25seSB0byB0aGUgcG9wcGVyIGVsZW1lbnRcblxuICBpZiAoZWxlbWVudENvbnRleHQgPT09IHBvcHBlciAmJiBvZmZzZXREYXRhKSB7XG4gICAgdmFyIG9mZnNldCA9IG9mZnNldERhdGFbcGxhY2VtZW50XTtcbiAgICBPYmplY3Qua2V5cyhvdmVyZmxvd09mZnNldHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIG11bHRpcGx5ID0gW3JpZ2h0LCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gMSA6IC0xO1xuICAgICAgdmFyIGF4aXMgPSBbdG9wLCBib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gJ3knIDogJ3gnO1xuICAgICAgb3ZlcmZsb3dPZmZzZXRzW2tleV0gKz0gb2Zmc2V0W2F4aXNdICogbXVsdGlwbHk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gb3ZlcmZsb3dPZmZzZXRzO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4cGFuZFRvSGFzaE1hcCh2YWx1ZSwga2V5cykge1xuICByZXR1cm4ga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKGhhc2hNYXAsIGtleSkge1xuICAgIGhhc2hNYXBba2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiBoYXNoTWFwO1xuICB9LCB7fSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QWx0QXhpcyhheGlzKSB7XG4gIHJldHVybiBheGlzID09PSAneCcgPyAneScgOiAneCc7XG59IiwiaW1wb3J0IHsgYXV0byB9IGZyb20gXCIuLi9lbnVtcy5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QmFzZVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEZyZXNoU2lkZU9iamVjdCgpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IDAsXG4gICAgcmlnaHQ6IDAsXG4gICAgYm90dG9tOiAwLFxuICAgIGxlZnQ6IDBcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBbJ3RvcCcsICdib3R0b20nXS5pbmRleE9mKHBsYWNlbWVudCkgPj0gMCA/ICd4JyA6ICd5Jztcbn0iLCJ2YXIgaGFzaCA9IHtcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgcmlnaHQ6ICdsZWZ0JyxcbiAgYm90dG9tOiAndG9wJyxcbiAgdG9wOiAnYm90dG9tJ1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnJlcGxhY2UoL2xlZnR8cmlnaHR8Ym90dG9tfHRvcC9nLCBmdW5jdGlvbiAobWF0Y2hlZCkge1xuICAgIHJldHVybiBoYXNoW21hdGNoZWRdO1xuICB9KTtcbn0iLCJ2YXIgaGFzaCA9IHtcbiAgc3RhcnQ6ICdlbmQnLFxuICBlbmQ6ICdzdGFydCdcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5yZXBsYWNlKC9zdGFydHxlbmQvZywgZnVuY3Rpb24gKG1hdGNoZWQpIHtcbiAgICByZXR1cm4gaGFzaFttYXRjaGVkXTtcbiAgfSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VmFyaWF0aW9uKHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07XG59IiwiZXhwb3J0IHZhciBtYXggPSBNYXRoLm1heDtcbmV4cG9ydCB2YXIgbWluID0gTWF0aC5taW47XG5leHBvcnQgdmFyIHJvdW5kID0gTWF0aC5yb3VuZDsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZXJnZUJ5TmFtZShtb2RpZmllcnMpIHtcbiAgdmFyIG1lcmdlZCA9IG1vZGlmaWVycy5yZWR1Y2UoZnVuY3Rpb24gKG1lcmdlZCwgY3VycmVudCkge1xuICAgIHZhciBleGlzdGluZyA9IG1lcmdlZFtjdXJyZW50Lm5hbWVdO1xuICAgIG1lcmdlZFtjdXJyZW50Lm5hbWVdID0gZXhpc3RpbmcgPyBPYmplY3QuYXNzaWduKHt9LCBleGlzdGluZywgY3VycmVudCwge1xuICAgICAgb3B0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgZXhpc3Rpbmcub3B0aW9ucywgY3VycmVudC5vcHRpb25zKSxcbiAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLmRhdGEsIGN1cnJlbnQuZGF0YSlcbiAgICB9KSA6IGN1cnJlbnQ7XG4gICAgcmV0dXJuIG1lcmdlZDtcbiAgfSwge30pOyAvLyBJRTExIGRvZXMgbm90IHN1cHBvcnQgT2JqZWN0LnZhbHVlc1xuXG4gIHJldHVybiBPYmplY3Qua2V5cyhtZXJnZWQpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIG1lcmdlZFtrZXldO1xuICB9KTtcbn0iLCJpbXBvcnQgZ2V0RnJlc2hTaWRlT2JqZWN0IGZyb20gXCIuL2dldEZyZXNoU2lkZU9iamVjdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VQYWRkaW5nT2JqZWN0KHBhZGRpbmdPYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGdldEZyZXNoU2lkZU9iamVjdCgpLCBwYWRkaW5nT2JqZWN0KTtcbn0iLCJpbXBvcnQgeyBtb2RpZmllclBoYXNlcyB9IGZyb20gXCIuLi9lbnVtcy5qc1wiOyAvLyBzb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ5ODc1MjU1XG5cbmZ1bmN0aW9uIG9yZGVyKG1vZGlmaWVycykge1xuICB2YXIgbWFwID0gbmV3IE1hcCgpO1xuICB2YXIgdmlzaXRlZCA9IG5ldyBTZXQoKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBtYXAuc2V0KG1vZGlmaWVyLm5hbWUsIG1vZGlmaWVyKTtcbiAgfSk7IC8vIE9uIHZpc2l0aW5nIG9iamVjdCwgY2hlY2sgZm9yIGl0cyBkZXBlbmRlbmNpZXMgYW5kIHZpc2l0IHRoZW0gcmVjdXJzaXZlbHlcblxuICBmdW5jdGlvbiBzb3J0KG1vZGlmaWVyKSB7XG4gICAgdmlzaXRlZC5hZGQobW9kaWZpZXIubmFtZSk7XG4gICAgdmFyIHJlcXVpcmVzID0gW10uY29uY2F0KG1vZGlmaWVyLnJlcXVpcmVzIHx8IFtdLCBtb2RpZmllci5yZXF1aXJlc0lmRXhpc3RzIHx8IFtdKTtcbiAgICByZXF1aXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChkZXApIHtcbiAgICAgIGlmICghdmlzaXRlZC5oYXMoZGVwKSkge1xuICAgICAgICB2YXIgZGVwTW9kaWZpZXIgPSBtYXAuZ2V0KGRlcCk7XG5cbiAgICAgICAgaWYgKGRlcE1vZGlmaWVyKSB7XG4gICAgICAgICAgc29ydChkZXBNb2RpZmllcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXN1bHQucHVzaChtb2RpZmllcik7XG4gIH1cblxuICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICBpZiAoIXZpc2l0ZWQuaGFzKG1vZGlmaWVyLm5hbWUpKSB7XG4gICAgICAvLyBjaGVjayBmb3IgdmlzaXRlZCBvYmplY3RcbiAgICAgIHNvcnQobW9kaWZpZXIpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9yZGVyTW9kaWZpZXJzKG1vZGlmaWVycykge1xuICAvLyBvcmRlciBiYXNlZCBvbiBkZXBlbmRlbmNpZXNcbiAgdmFyIG9yZGVyZWRNb2RpZmllcnMgPSBvcmRlcihtb2RpZmllcnMpOyAvLyBvcmRlciBiYXNlZCBvbiBwaGFzZVxuXG4gIHJldHVybiBtb2RpZmllclBoYXNlcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGhhc2UpIHtcbiAgICByZXR1cm4gYWNjLmNvbmNhdChvcmRlcmVkTW9kaWZpZXJzLmZpbHRlcihmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICAgIHJldHVybiBtb2RpZmllci5waGFzZSA9PT0gcGhhc2U7XG4gICAgfSkpO1xuICB9LCBbXSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCByZWN0LCB7XG4gICAgbGVmdDogcmVjdC54LFxuICAgIHRvcDogcmVjdC55LFxuICAgIHJpZ2h0OiByZWN0LnggKyByZWN0LndpZHRoLFxuICAgIGJvdHRvbTogcmVjdC55ICsgcmVjdC5oZWlnaHRcbiAgfSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VUFTdHJpbmcoKSB7XG4gIHZhciB1YURhdGEgPSBuYXZpZ2F0b3IudXNlckFnZW50RGF0YTtcblxuICBpZiAodWFEYXRhICE9IG51bGwgJiYgdWFEYXRhLmJyYW5kcyAmJiBBcnJheS5pc0FycmF5KHVhRGF0YS5icmFuZHMpKSB7XG4gICAgcmV0dXJuIHVhRGF0YS5icmFuZHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICByZXR1cm4gaXRlbS5icmFuZCArIFwiL1wiICsgaXRlbS52ZXJzaW9uO1xuICAgIH0pLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50O1xufSIsImltcG9ydCB7IG1heCBhcyBtYXRoTWF4LCBtaW4gYXMgbWF0aE1pbiB9IGZyb20gXCIuL21hdGguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB3aXRoaW4obWluLCB2YWx1ZSwgbWF4KSB7XG4gIHJldHVybiBtYXRoTWF4KG1pbiwgbWF0aE1pbih2YWx1ZSwgbWF4KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gd2l0aGluTWF4Q2xhbXAobWluLCB2YWx1ZSwgbWF4KSB7XG4gIHZhciB2ID0gd2l0aGluKG1pbiwgdmFsdWUsIG1heCk7XG4gIHJldHVybiB2ID4gbWF4ID8gbWF4IDogdjtcbn0iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIGFsd2F5c09wZW46IGZhbHNlLFxuICAgIGFjdGl2ZUNsYXNzZXM6ICdiZy1ncmF5LTEwMCBkYXJrOmJnLWdyYXktODAwIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LXdoaXRlJyxcbiAgICBpbmFjdGl2ZUNsYXNzZXM6ICd0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMCcsXG4gICAgb25PcGVuOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25DbG9zZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uVG9nZ2xlOiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIEFjY29yZGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBY2NvcmRpb24oYWNjb3JkaW9uRWwsIGl0ZW1zLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGFjY29yZGlvbkVsID09PSB2b2lkIDApIHsgYWNjb3JkaW9uRWwgPSBudWxsOyB9XG4gICAgICAgIGlmIChpdGVtcyA9PT0gdm9pZCAwKSB7IGl0ZW1zID0gW107IH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0gRGVmYXVsdDsgfVxuICAgICAgICBpZiAoaW5zdGFuY2VPcHRpb25zID09PSB2b2lkIDApIHsgaW5zdGFuY2VPcHRpb25zID0gRGVmYXVsdEluc3RhbmNlT3B0aW9uczsgfVxuICAgICAgICB0aGlzLl9pbnN0YW5jZUlkID0gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA/IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgOiBhY2NvcmRpb25FbC5pZDtcbiAgICAgICAgdGhpcy5fYWNjb3JkaW9uRWwgPSBhY2NvcmRpb25FbDtcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBEZWZhdWx0KSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0FjY29yZGlvbicsIHRoaXMsIHRoaXMuX2luc3RhbmNlSWQsIGluc3RhbmNlT3B0aW9ucy5vdmVycmlkZSk7XG4gICAgfVxuICAgIEFjY29yZGlvbi5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuX2l0ZW1zLmxlbmd0aCAmJiAhdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIC8vIHNob3cgYWNjb3JkaW9uIGl0ZW0gYmFzZWQgb24gY2xpY2tcbiAgICAgICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMub3BlbihpdGVtLmlkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlKGl0ZW0uaWQpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaXRlbS50cmlnZ2VyRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgICAgIC8vIFN0b3JlIHRoZSBjbGlja0hhbmRsZXIgaW4gYSBwcm9wZXJ0eSBvZiB0aGUgaXRlbSBmb3IgcmVtb3ZhbCBsYXRlclxuICAgICAgICAgICAgICAgIGl0ZW0uY2xpY2tIYW5kbGVyID0gY2xpY2tIYW5kbGVyO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2l0ZW1zLmxlbmd0aCAmJiB0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgIGl0ZW0udHJpZ2dlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaXRlbS5jbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgICAgIC8vIENsZWFuIHVwIGJ5IGRlbGV0aW5nIHRoZSBjbGlja0hhbmRsZXIgcHJvcGVydHkgZnJvbSB0aGUgaXRlbVxuICAgICAgICAgICAgICAgIGRlbGV0ZSBpdGVtLmNsaWNrSGFuZGxlcjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQWNjb3JkaW9uLnByb3RvdHlwZS5yZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaW5zdGFuY2VzLnJlbW92ZUluc3RhbmNlKCdBY2NvcmRpb24nLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUuZGVzdHJveUFuZFJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJbnN0YW5jZSgpO1xuICAgIH07XG4gICAgQWNjb3JkaW9uLnByb3RvdHlwZS5nZXRJdGVtID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pdGVtcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGl0ZW0uaWQgPT09IGlkOyB9KVswXTtcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgaXRlbSA9IHRoaXMuZ2V0SXRlbShpZCk7XG4gICAgICAgIC8vIGRvbid0IGhpZGUgb3RoZXIgYWNjb3JkaW9ucyBpZiBhbHdheXMgb3BlblxuICAgICAgICBpZiAoIXRoaXMuX29wdGlvbnMuYWx3YXlzT3Blbikge1xuICAgICAgICAgICAgdGhpcy5faXRlbXMubWFwKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICBpZiAoaSAhPT0gaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAoX2EgPSBpLnRyaWdnZXJFbC5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfYSwgX3RoaXMuX29wdGlvbnMuYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgICAgICAgICAgICAgKF9iID0gaS50cmlnZ2VyRWwuY2xhc3NMaXN0KS5hZGQuYXBwbHkoX2IsIF90aGlzLl9vcHRpb25zLmluYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgICAgICAgICAgICAgaS50YXJnZXRFbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgaS50cmlnZ2VyRWwuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG4gICAgICAgICAgICAgICAgICAgIGkuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJvdGF0ZSBpY29uIGlmIHNldFxuICAgICAgICAgICAgICAgICAgICBpZiAoaS5pY29uRWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGkuaWNvbkVsLmNsYXNzTGlzdC5hZGQoJ3JvdGF0ZS0xODAnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNob3cgYWN0aXZlIGl0ZW1cbiAgICAgICAgKF9hID0gaXRlbS50cmlnZ2VyRWwuY2xhc3NMaXN0KS5hZGQuYXBwbHkoX2EsIHRoaXMuX29wdGlvbnMuYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgKF9iID0gaXRlbS50cmlnZ2VyRWwuY2xhc3NMaXN0KS5yZW1vdmUuYXBwbHkoX2IsIHRoaXMuX29wdGlvbnMuaW5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICBpdGVtLnRyaWdnZXJFbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpO1xuICAgICAgICBpdGVtLnRhcmdldEVsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICBpdGVtLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIC8vIHJvdGF0ZSBpY29uIGlmIHNldFxuICAgICAgICBpZiAoaXRlbS5pY29uRWwpIHtcbiAgICAgICAgICAgIGl0ZW0uaWNvbkVsLmNsYXNzTGlzdC5yZW1vdmUoJ3JvdGF0ZS0xODAnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uT3Blbih0aGlzLCBpdGVtKTtcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIHZhciBpdGVtID0gdGhpcy5nZXRJdGVtKGlkKTtcbiAgICAgICAgaWYgKGl0ZW0uYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKGlkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub3BlbihpZCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSh0aGlzLCBpdGVtKTtcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLmdldEl0ZW0oaWQpO1xuICAgICAgICAoX2EgPSBpdGVtLnRyaWdnZXJFbC5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfYSwgdGhpcy5fb3B0aW9ucy5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAoX2IgPSBpdGVtLnRyaWdnZXJFbC5jbGFzc0xpc3QpLmFkZC5hcHBseShfYiwgdGhpcy5fb3B0aW9ucy5pbmFjdGl2ZUNsYXNzZXMuc3BsaXQoJyAnKSk7XG4gICAgICAgIGl0ZW0udGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIGl0ZW0udHJpZ2dlckVsLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICAgICAgICBpdGVtLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAvLyByb3RhdGUgaWNvbiBpZiBzZXRcbiAgICAgICAgaWYgKGl0ZW0uaWNvbkVsKSB7XG4gICAgICAgICAgICBpdGVtLmljb25FbC5jbGFzc0xpc3QuYWRkKCdyb3RhdGUtMTgwJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkNsb3NlKHRoaXMsIGl0ZW0pO1xuICAgIH07XG4gICAgQWNjb3JkaW9uLnByb3RvdHlwZS51cGRhdGVPbk9wZW4gPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbk9wZW4gPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUudXBkYXRlT25DbG9zZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uQ2xvc2UgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIEFjY29yZGlvbi5wcm90b3R5cGUudXBkYXRlT25Ub2dnbGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIEFjY29yZGlvbjtcbn0oKSk7XG5leHBvcnQgZnVuY3Rpb24gaW5pdEFjY29yZGlvbnMoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtYWNjb3JkaW9uXScpLmZvckVhY2goZnVuY3Rpb24gKCRhY2NvcmRpb25FbCkge1xuICAgICAgICB2YXIgYWx3YXlzT3BlbiA9ICRhY2NvcmRpb25FbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYWNjb3JkaW9uJyk7XG4gICAgICAgIHZhciBhY3RpdmVDbGFzc2VzID0gJGFjY29yZGlvbkVsLmdldEF0dHJpYnV0ZSgnZGF0YS1hY3RpdmUtY2xhc3NlcycpO1xuICAgICAgICB2YXIgaW5hY3RpdmVDbGFzc2VzID0gJGFjY29yZGlvbkVsLmdldEF0dHJpYnV0ZSgnZGF0YS1pbmFjdGl2ZS1jbGFzc2VzJyk7XG4gICAgICAgIHZhciBpdGVtcyA9IFtdO1xuICAgICAgICAkYWNjb3JkaW9uRWxcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1hY2NvcmRpb24tdGFyZ2V0XScpXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICAgICAgLy8gQ29uc2lkZXIgb25seSBpdGVtcyB0aGF0IGRpcmVjdGx5IGJlbG9uZyB0byAkYWNjb3JkaW9uRWxcbiAgICAgICAgICAgIC8vICh0byBtYWtlIG5lc3RlZCBhY2NvcmRpb25zIHdvcmspLlxuICAgICAgICAgICAgaWYgKCR0cmlnZ2VyRWwuY2xvc2VzdCgnW2RhdGEtYWNjb3JkaW9uXScpID09PSAkYWNjb3JkaW9uRWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWFjY29yZGlvbi10YXJnZXQnKSxcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlckVsOiAkdHJpZ2dlckVsLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRFbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcigkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1hY2NvcmRpb24tdGFyZ2V0JykpLFxuICAgICAgICAgICAgICAgICAgICBpY29uRWw6ICR0cmlnZ2VyRWwucXVlcnlTZWxlY3RvcignW2RhdGEtYWNjb3JkaW9uLWljb25dJyksXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ3RydWUnXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgbmV3IEFjY29yZGlvbigkYWNjb3JkaW9uRWwsIGl0ZW1zLCB7XG4gICAgICAgICAgICBhbHdheXNPcGVuOiBhbHdheXNPcGVuID09PSAnb3BlbicgPyB0cnVlIDogZmFsc2UsXG4gICAgICAgICAgICBhY3RpdmVDbGFzc2VzOiBhY3RpdmVDbGFzc2VzXG4gICAgICAgICAgICAgICAgPyBhY3RpdmVDbGFzc2VzXG4gICAgICAgICAgICAgICAgOiBEZWZhdWx0LmFjdGl2ZUNsYXNzZXMsXG4gICAgICAgICAgICBpbmFjdGl2ZUNsYXNzZXM6IGluYWN0aXZlQ2xhc3Nlc1xuICAgICAgICAgICAgICAgID8gaW5hY3RpdmVDbGFzc2VzXG4gICAgICAgICAgICAgICAgOiBEZWZhdWx0LmluYWN0aXZlQ2xhc3NlcyxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuQWNjb3JkaW9uID0gQWNjb3JkaW9uO1xuICAgIHdpbmRvdy5pbml0QWNjb3JkaW9ucyA9IGluaXRBY2NvcmRpb25zO1xufVxuZXhwb3J0IGRlZmF1bHQgQWNjb3JkaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgaW5zdGFuY2VzIGZyb20gJy4uLy4uL2RvbS9pbnN0YW5jZXMnO1xudmFyIERlZmF1bHQgPSB7XG4gICAgZGVmYXVsdFBvc2l0aW9uOiAwLFxuICAgIGluZGljYXRvcnM6IHtcbiAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICBhY3RpdmVDbGFzc2VzOiAnYmctd2hpdGUgZGFyazpiZy1ncmF5LTgwMCcsXG4gICAgICAgIGluYWN0aXZlQ2xhc3NlczogJ2JnLXdoaXRlLzUwIGRhcms6YmctZ3JheS04MDAvNTAgaG92ZXI6Ymctd2hpdGUgZGFyazpob3ZlcjpiZy1ncmF5LTgwMCcsXG4gICAgfSxcbiAgICBpbnRlcnZhbDogMzAwMCxcbiAgICBvbk5leHQ6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvblByZXY6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvbkNoYW5nZTogZnVuY3Rpb24gKCkgeyB9LFxufTtcbnZhciBEZWZhdWx0SW5zdGFuY2VPcHRpb25zID0ge1xuICAgIGlkOiBudWxsLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbnZhciBDYXJvdXNlbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDYXJvdXNlbChjYXJvdXNlbEVsLCBpdGVtcywgb3B0aW9ucywgaW5zdGFuY2VPcHRpb25zKSB7XG4gICAgICAgIGlmIChjYXJvdXNlbEVsID09PSB2b2lkIDApIHsgY2Fyb3VzZWxFbCA9IG51bGw7IH1cbiAgICAgICAgaWYgKGl0ZW1zID09PSB2b2lkIDApIHsgaXRlbXMgPSBbXTsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgID8gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA6IGNhcm91c2VsRWwuaWQ7XG4gICAgICAgIHRoaXMuX2Nhcm91c2VsRWwgPSBjYXJvdXNlbEVsO1xuICAgICAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xuICAgICAgICB0aGlzLl9vcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oe30sIERlZmF1bHQpLCBvcHRpb25zKSwgeyBpbmRpY2F0b3JzOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdC5pbmRpY2F0b3JzKSwgb3B0aW9ucy5pbmRpY2F0b3JzKSB9KTtcbiAgICAgICAgdGhpcy5fYWN0aXZlSXRlbSA9IHRoaXMuZ2V0SXRlbSh0aGlzLl9vcHRpb25zLmRlZmF1bHRQb3NpdGlvbik7XG4gICAgICAgIHRoaXMuX2luZGljYXRvcnMgPSB0aGlzLl9vcHRpb25zLmluZGljYXRvcnMuaXRlbXM7XG4gICAgICAgIHRoaXMuX2ludGVydmFsRHVyYXRpb24gPSB0aGlzLl9vcHRpb25zLmludGVydmFsO1xuICAgICAgICB0aGlzLl9pbnRlcnZhbEluc3RhbmNlID0gbnVsbDtcbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIGluc3RhbmNlcy5hZGRJbnN0YW5jZSgnQ2Fyb3VzZWwnLCB0aGlzLCB0aGlzLl9pbnN0YW5jZUlkLCBpbnN0YW5jZU9wdGlvbnMub3ZlcnJpZGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBpbml0aWFsaXplIGNhcm91c2VsIGFuZCBpdGVtcyBiYXNlZCBvbiBhY3RpdmUgb25lXG4gICAgICovXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl9pdGVtcy5sZW5ndGggJiYgIXRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl9pdGVtcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICBpdGVtLmVsLmNsYXNzTGlzdC5hZGQoJ2Fic29sdXRlJywgJ2luc2V0LTAnLCAndHJhbnNpdGlvbi10cmFuc2Zvcm0nLCAndHJhbnNmb3JtJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIGlmIG5vIGFjdGl2ZSBpdGVtIGlzIHNldCB0aGVuIGZpcnN0IHBvc2l0aW9uIGlzIGRlZmF1bHRcbiAgICAgICAgICAgIGlmICh0aGlzLmdldEFjdGl2ZUl0ZW0oKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVUbyh0aGlzLmdldEFjdGl2ZUl0ZW0oKS5wb3NpdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNsaWRlVG8oMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pbmRpY2F0b3JzLm1hcChmdW5jdGlvbiAoaW5kaWNhdG9yLCBwb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIGluZGljYXRvci5lbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2xpZGVUbyhwb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0Nhcm91c2VsJywgdGhpcy5faW5zdGFuY2VJZCk7XG4gICAgfTtcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuZGVzdHJveUFuZFJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJbnN0YW5jZSgpO1xuICAgIH07XG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLmdldEl0ZW0gPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2l0ZW1zW3Bvc2l0aW9uXTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNsaWRlIHRvIHRoZSBlbGVtZW50IGJhc2VkIG9uIGlkXG4gICAgICogQHBhcmFtIHsqfSBwb3NpdGlvblxuICAgICAqL1xuICAgIENhcm91c2VsLnByb3RvdHlwZS5zbGlkZVRvID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHZhciBuZXh0SXRlbSA9IHRoaXMuX2l0ZW1zW3Bvc2l0aW9uXTtcbiAgICAgICAgdmFyIHJvdGF0aW9uSXRlbXMgPSB7XG4gICAgICAgICAgICBsZWZ0OiBuZXh0SXRlbS5wb3NpdGlvbiA9PT0gMFxuICAgICAgICAgICAgICAgID8gdGhpcy5faXRlbXNbdGhpcy5faXRlbXMubGVuZ3RoIC0gMV1cbiAgICAgICAgICAgICAgICA6IHRoaXMuX2l0ZW1zW25leHRJdGVtLnBvc2l0aW9uIC0gMV0sXG4gICAgICAgICAgICBtaWRkbGU6IG5leHRJdGVtLFxuICAgICAgICAgICAgcmlnaHQ6IG5leHRJdGVtLnBvc2l0aW9uID09PSB0aGlzLl9pdGVtcy5sZW5ndGggLSAxXG4gICAgICAgICAgICAgICAgPyB0aGlzLl9pdGVtc1swXVxuICAgICAgICAgICAgICAgIDogdGhpcy5faXRlbXNbbmV4dEl0ZW0ucG9zaXRpb24gKyAxXSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fcm90YXRlKHJvdGF0aW9uSXRlbXMpO1xuICAgICAgICB0aGlzLl9zZXRBY3RpdmVJdGVtKG5leHRJdGVtKTtcbiAgICAgICAgaWYgKHRoaXMuX2ludGVydmFsSW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMuY3ljbGUoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uQ2hhbmdlKHRoaXMpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQmFzZWQgb24gdGhlIGN1cnJlbnRseSBhY3RpdmUgaXRlbSBpdCB3aWxsIGdvIHRvIHRoZSBuZXh0IHBvc2l0aW9uXG4gICAgICovXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhY3RpdmVJdGVtID0gdGhpcy5nZXRBY3RpdmVJdGVtKCk7XG4gICAgICAgIHZhciBuZXh0SXRlbSA9IG51bGw7XG4gICAgICAgIC8vIGNoZWNrIGlmIGxhc3QgaXRlbVxuICAgICAgICBpZiAoYWN0aXZlSXRlbS5wb3NpdGlvbiA9PT0gdGhpcy5faXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgbmV4dEl0ZW0gPSB0aGlzLl9pdGVtc1swXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG5leHRJdGVtID0gdGhpcy5faXRlbXNbYWN0aXZlSXRlbS5wb3NpdGlvbiArIDFdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2xpZGVUbyhuZXh0SXRlbS5wb3NpdGlvbik7XG4gICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMuX29wdGlvbnMub25OZXh0KHRoaXMpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQmFzZWQgb24gdGhlIGN1cnJlbnRseSBhY3RpdmUgaXRlbSBpdCB3aWxsIGdvIHRvIHRoZSBwcmV2aW91cyBwb3NpdGlvblxuICAgICAqL1xuICAgIENhcm91c2VsLnByb3RvdHlwZS5wcmV2ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYWN0aXZlSXRlbSA9IHRoaXMuZ2V0QWN0aXZlSXRlbSgpO1xuICAgICAgICB2YXIgcHJldkl0ZW0gPSBudWxsO1xuICAgICAgICAvLyBjaGVjayBpZiBmaXJzdCBpdGVtXG4gICAgICAgIGlmIChhY3RpdmVJdGVtLnBvc2l0aW9uID09PSAwKSB7XG4gICAgICAgICAgICBwcmV2SXRlbSA9IHRoaXMuX2l0ZW1zW3RoaXMuX2l0ZW1zLmxlbmd0aCAtIDFdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJldkl0ZW0gPSB0aGlzLl9pdGVtc1thY3RpdmVJdGVtLnBvc2l0aW9uIC0gMV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zbGlkZVRvKHByZXZJdGVtLnBvc2l0aW9uKTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblByZXYodGhpcyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBhcHBsaWVzIHRoZSB0cmFuc2Zvcm0gY2xhc3NlcyBiYXNlZCBvbiB0aGUgbGVmdCwgbWlkZGxlLCBhbmQgcmlnaHQgcm90YXRpb24gY2Fyb3VzZWwgaXRlbXNcbiAgICAgKiBAcGFyYW0geyp9IHJvdGF0aW9uSXRlbXNcbiAgICAgKi9cbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3JvdGF0ZSA9IGZ1bmN0aW9uIChyb3RhdGlvbkl0ZW1zKSB7XG4gICAgICAgIC8vIHJlc2V0XG4gICAgICAgIHRoaXMuX2l0ZW1zLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgaXRlbS5lbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEhhbmRsaW5nIHRoZSBjYXNlIHdoZW4gdGhlcmUgaXMgb25seSBvbmUgaXRlbVxuICAgICAgICBpZiAodGhpcy5faXRlbXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICByb3RhdGlvbkl0ZW1zLm1pZGRsZS5lbC5jbGFzc0xpc3QucmVtb3ZlKCctdHJhbnNsYXRlLXgtZnVsbCcsICd0cmFuc2xhdGUteC1mdWxsJywgJ3RyYW5zbGF0ZS14LTAnLCAnaGlkZGVuJywgJ3otMTAnKTtcbiAgICAgICAgICAgIHJvdGF0aW9uSXRlbXMubWlkZGxlLmVsLmNsYXNzTGlzdC5hZGQoJ3RyYW5zbGF0ZS14LTAnLCAnei0yMCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIGxlZnQgaXRlbSAocHJldmlvdXNseSBhY3RpdmUpXG4gICAgICAgIHJvdGF0aW9uSXRlbXMubGVmdC5lbC5jbGFzc0xpc3QucmVtb3ZlKCctdHJhbnNsYXRlLXgtZnVsbCcsICd0cmFuc2xhdGUteC1mdWxsJywgJ3RyYW5zbGF0ZS14LTAnLCAnaGlkZGVuJywgJ3otMjAnKTtcbiAgICAgICAgcm90YXRpb25JdGVtcy5sZWZ0LmVsLmNsYXNzTGlzdC5hZGQoJy10cmFuc2xhdGUteC1mdWxsJywgJ3otMTAnKTtcbiAgICAgICAgLy8gY3VycmVudGx5IGFjdGl2ZSBpdGVtXG4gICAgICAgIHJvdGF0aW9uSXRlbXMubWlkZGxlLmVsLmNsYXNzTGlzdC5yZW1vdmUoJy10cmFuc2xhdGUteC1mdWxsJywgJ3RyYW5zbGF0ZS14LWZ1bGwnLCAndHJhbnNsYXRlLXgtMCcsICdoaWRkZW4nLCAnei0xMCcpO1xuICAgICAgICByb3RhdGlvbkl0ZW1zLm1pZGRsZS5lbC5jbGFzc0xpc3QuYWRkKCd0cmFuc2xhdGUteC0wJywgJ3otMzAnKTtcbiAgICAgICAgLy8gcmlnaHQgaXRlbSAodXBjb21pbmcgYWN0aXZlKVxuICAgICAgICByb3RhdGlvbkl0ZW1zLnJpZ2h0LmVsLmNsYXNzTGlzdC5yZW1vdmUoJy10cmFuc2xhdGUteC1mdWxsJywgJ3RyYW5zbGF0ZS14LWZ1bGwnLCAndHJhbnNsYXRlLXgtMCcsICdoaWRkZW4nLCAnei0zMCcpO1xuICAgICAgICByb3RhdGlvbkl0ZW1zLnJpZ2h0LmVsLmNsYXNzTGlzdC5hZGQoJ3RyYW5zbGF0ZS14LWZ1bGwnLCAnei0yMCcpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogU2V0IGFuIGludGVydmFsIHRvIGN5Y2xlIHRocm91Z2ggdGhlIGNhcm91c2VsIGl0ZW1zXG4gICAgICovXG4gICAgQ2Fyb3VzZWwucHJvdG90eXBlLmN5Y2xlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMuX2ludGVydmFsSW5zdGFuY2UgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLm5leHQoKTtcbiAgICAgICAgICAgIH0sIHRoaXMuX2ludGVydmFsRHVyYXRpb24pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDbGVhcnMgdGhlIGN5Y2xpbmcgaW50ZXJ2YWxcbiAgICAgKi9cbiAgICBDYXJvdXNlbC5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5faW50ZXJ2YWxJbnN0YW5jZSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGN1cnJlbnRseSBhY3RpdmUgaXRlbVxuICAgICAqL1xuICAgIENhcm91c2VsLnByb3RvdHlwZS5nZXRBY3RpdmVJdGVtID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlSXRlbTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY3VycmVudGx5IGFjdGl2ZSBpdGVtIGFuZCBkYXRhIGF0dHJpYnV0ZVxuICAgICAqIEBwYXJhbSB7Kn0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBDYXJvdXNlbC5wcm90b3R5cGUuX3NldEFjdGl2ZUl0ZW0gPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLl9hY3RpdmVJdGVtID0gaXRlbTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gaXRlbS5wb3NpdGlvbjtcbiAgICAgICAgLy8gdXBkYXRlIHRoZSBpbmRpY2F0b3JzIGlmIGF2YWlsYWJsZVxuICAgICAgICBpZiAodGhpcy5faW5kaWNhdG9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMuX2luZGljYXRvcnMubWFwKGZ1bmN0aW9uIChpbmRpY2F0b3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIGluZGljYXRvci5lbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcsICdmYWxzZScpO1xuICAgICAgICAgICAgICAgIChfYSA9IGluZGljYXRvci5lbC5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfYSwgX3RoaXMuX29wdGlvbnMuaW5kaWNhdG9ycy5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAgICAgICAgIChfYiA9IGluZGljYXRvci5lbC5jbGFzc0xpc3QpLmFkZC5hcHBseShfYiwgX3RoaXMuX29wdGlvbnMuaW5kaWNhdG9ycy5pbmFjdGl2ZUNsYXNzZXMuc3BsaXQoJyAnKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIChfYSA9IHRoaXMuX2luZGljYXRvcnNbcG9zaXRpb25dLmVsLmNsYXNzTGlzdCkuYWRkLmFwcGx5KF9hLCB0aGlzLl9vcHRpb25zLmluZGljYXRvcnMuYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgICAgIChfYiA9IHRoaXMuX2luZGljYXRvcnNbcG9zaXRpb25dLmVsLmNsYXNzTGlzdCkucmVtb3ZlLmFwcGx5KF9iLCB0aGlzLl9vcHRpb25zLmluZGljYXRvcnMuaW5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAgICAgdGhpcy5faW5kaWNhdG9yc1twb3NpdGlvbl0uZWwuc2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnLCAndHJ1ZScpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUudXBkYXRlT25OZXh0ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25OZXh0ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUudXBkYXRlT25QcmV2ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25QcmV2ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBDYXJvdXNlbC5wcm90b3R5cGUudXBkYXRlT25DaGFuZ2UgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkNoYW5nZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIENhcm91c2VsO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0Q2Fyb3VzZWxzKCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNhcm91c2VsXScpLmZvckVhY2goZnVuY3Rpb24gKCRjYXJvdXNlbEVsKSB7XG4gICAgICAgIHZhciBpbnRlcnZhbCA9ICRjYXJvdXNlbEVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jYXJvdXNlbC1pbnRlcnZhbCcpO1xuICAgICAgICB2YXIgc2xpZGUgPSAkY2Fyb3VzZWxFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY2Fyb3VzZWwnKSA9PT0gJ3NsaWRlJ1xuICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICA6IGZhbHNlO1xuICAgICAgICB2YXIgaXRlbXMgPSBbXTtcbiAgICAgICAgdmFyIGRlZmF1bHRQb3NpdGlvbiA9IDA7XG4gICAgICAgIGlmICgkY2Fyb3VzZWxFbC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jYXJvdXNlbC1pdGVtXScpLmxlbmd0aCkge1xuICAgICAgICAgICAgQXJyYXkuZnJvbSgkY2Fyb3VzZWxFbC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jYXJvdXNlbC1pdGVtXScpKS5tYXAoZnVuY3Rpb24gKCRjYXJvdXNlbEl0ZW1FbCwgcG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICBlbDogJGNhcm91c2VsSXRlbUVsLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmICgkY2Fyb3VzZWxJdGVtRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWNhcm91c2VsLWl0ZW0nKSA9PT1cbiAgICAgICAgICAgICAgICAgICAgJ2FjdGl2ZScpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGluZGljYXRvcnMgPSBbXTtcbiAgICAgICAgaWYgKCRjYXJvdXNlbEVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNhcm91c2VsLXNsaWRlLXRvXScpLmxlbmd0aCkge1xuICAgICAgICAgICAgQXJyYXkuZnJvbSgkY2Fyb3VzZWxFbC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jYXJvdXNlbC1zbGlkZS10b10nKSkubWFwKGZ1bmN0aW9uICgkaW5kaWNhdG9yRWwpIHtcbiAgICAgICAgICAgICAgICBpbmRpY2F0b3JzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcGFyc2VJbnQoJGluZGljYXRvckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jYXJvdXNlbC1zbGlkZS10bycpKSxcbiAgICAgICAgICAgICAgICAgICAgZWw6ICRpbmRpY2F0b3JFbCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjYXJvdXNlbCA9IG5ldyBDYXJvdXNlbCgkY2Fyb3VzZWxFbCwgaXRlbXMsIHtcbiAgICAgICAgICAgIGRlZmF1bHRQb3NpdGlvbjogZGVmYXVsdFBvc2l0aW9uLFxuICAgICAgICAgICAgaW5kaWNhdG9yczoge1xuICAgICAgICAgICAgICAgIGl0ZW1zOiBpbmRpY2F0b3JzLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGludGVydmFsOiBpbnRlcnZhbCA/IGludGVydmFsIDogRGVmYXVsdC5pbnRlcnZhbCxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChzbGlkZSkge1xuICAgICAgICAgICAgY2Fyb3VzZWwuY3ljbGUoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjaGVjayBmb3IgY29udHJvbHNcbiAgICAgICAgdmFyIGNhcm91c2VsTmV4dEVsID0gJGNhcm91c2VsRWwucXVlcnlTZWxlY3RvcignW2RhdGEtY2Fyb3VzZWwtbmV4dF0nKTtcbiAgICAgICAgdmFyIGNhcm91c2VsUHJldkVsID0gJGNhcm91c2VsRWwucXVlcnlTZWxlY3RvcignW2RhdGEtY2Fyb3VzZWwtcHJldl0nKTtcbiAgICAgICAgaWYgKGNhcm91c2VsTmV4dEVsKSB7XG4gICAgICAgICAgICBjYXJvdXNlbE5leHRFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjYXJvdXNlbC5uZXh0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2Fyb3VzZWxQcmV2RWwpIHtcbiAgICAgICAgICAgIGNhcm91c2VsUHJldkVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNhcm91c2VsLnByZXYoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuQ2Fyb3VzZWwgPSBDYXJvdXNlbDtcbiAgICB3aW5kb3cuaW5pdENhcm91c2VscyA9IGluaXRDYXJvdXNlbHM7XG59XG5leHBvcnQgZGVmYXVsdCBDYXJvdXNlbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIGh0bWxFbnRpdGllczogZmFsc2UsXG4gICAgY29udGVudFR5cGU6ICdpbnB1dCcsXG4gICAgb25Db3B5OiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIENvcHlDbGlwYm9hcmQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29weUNsaXBib2FyZCh0cmlnZ2VyRWwsIHRhcmdldEVsLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRyaWdnZXJFbCA9PT0gdm9pZCAwKSB7IHRyaWdnZXJFbCA9IG51bGw7IH1cbiAgICAgICAgaWYgKHRhcmdldEVsID09PSB2b2lkIDApIHsgdGFyZ2V0RWwgPSBudWxsOyB9XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IERlZmF1bHQ7IH1cbiAgICAgICAgaWYgKGluc3RhbmNlT3B0aW9ucyA9PT0gdm9pZCAwKSB7IGluc3RhbmNlT3B0aW9ucyA9IERlZmF1bHRJbnN0YW5jZU9wdGlvbnM7IH1cbiAgICAgICAgdGhpcy5faW5zdGFuY2VJZCA9IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgPyBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgIDogdGFyZ2V0RWwuaWQ7XG4gICAgICAgIHRoaXMuX3RyaWdnZXJFbCA9IHRyaWdnZXJFbDtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwgPSB0YXJnZXRFbDtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBEZWZhdWx0KSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0NvcHlDbGlwYm9hcmQnLCB0aGlzLCB0aGlzLl9pbnN0YW5jZUlkLCBpbnN0YW5jZU9wdGlvbnMub3ZlcnJpZGUpO1xuICAgIH1cbiAgICBDb3B5Q2xpcGJvYXJkLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5fdGFyZ2V0RWwgJiYgdGhpcy5fdHJpZ2dlckVsICYmICF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5fdHJpZ2dlckVsQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmNvcHkoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBjbGlja2luZyBvbiB0aGUgdHJpZ2dlciBlbGVtZW50IHNob3VsZCBjb3B5IHRoZSB2YWx1ZSBvZiB0aGUgdGFyZ2V0IGVsZW1lbnRcbiAgICAgICAgICAgIGlmICh0aGlzLl90cmlnZ2VyRWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl90cmlnZ2VyRWxDbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDb3B5Q2xpcGJvYXJkLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX3RhcmdldEVsICYmIHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdHJpZ2dlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fdHJpZ2dlckVsQ2xpY2tIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvcHlDbGlwYm9hcmQucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0NvcHlDbGlwYm9hcmQnLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIENvcHlDbGlwYm9hcmQucHJvdG90eXBlLmRlc3Ryb3lBbmRSZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMucmVtb3ZlSW5zdGFuY2UoKTtcbiAgICB9O1xuICAgIENvcHlDbGlwYm9hcmQucHJvdG90eXBlLmdldFRhcmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5jb250ZW50VHlwZSA9PT0gJ2lucHV0Jykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldEVsLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLmNvbnRlbnRUeXBlID09PSAnaW5uZXJIVE1MJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldEVsLmlubmVySFRNTDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5jb250ZW50VHlwZSA9PT0gJ3RleHRDb250ZW50Jykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldEVsLnRleHRDb250ZW50LnJlcGxhY2UoL1xccysvZywgJyAnKS50cmltKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvcHlDbGlwYm9hcmQucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0VG9Db3B5ID0gdGhpcy5nZXRUYXJnZXRWYWx1ZSgpO1xuICAgICAgICAvLyBDaGVjayBpZiBIVE1MRW50aXRpZXMgb3B0aW9uIGlzIGVuYWJsZWRcbiAgICAgICAgaWYgKHRoaXMuX29wdGlvbnMuaHRtbEVudGl0aWVzKSB7XG4gICAgICAgICAgICAvLyBFbmNvZGUgdGhlIHRleHQgdXNpbmcgSFRNTCBlbnRpdGllc1xuICAgICAgICAgICAgdGV4dFRvQ29weSA9IHRoaXMuZGVjb2RlSFRNTCh0ZXh0VG9Db3B5KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDcmVhdGUgYSB0ZW1wb3JhcnkgdGV4dGFyZWEgZWxlbWVudFxuICAgICAgICB2YXIgdGVtcFRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgdGVtcFRleHRBcmVhLnZhbHVlID0gdGV4dFRvQ29weTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZW1wVGV4dEFyZWEpO1xuICAgICAgICAvLyBTZWxlY3QgdGhlIHRleHQgaW5zaWRlIHRoZSB0ZXh0YXJlYSBhbmQgY29weSBpdCB0byB0aGUgY2xpcGJvYXJkXG4gICAgICAgIHRlbXBUZXh0QXJlYS5zZWxlY3QoKTtcbiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTtcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSB0ZW1wb3JhcnkgdGV4dGFyZWFcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0ZW1wVGV4dEFyZWEpO1xuICAgICAgICAvLyBDYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uQ29weSh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHRleHRUb0NvcHk7XG4gICAgfTtcbiAgICAvLyBGdW5jdGlvbiB0byBlbmNvZGUgdGV4dCBpbnRvIEhUTUwgZW50aXRpZXNcbiAgICBDb3B5Q2xpcGJvYXJkLnByb3RvdHlwZS5kZWNvZGVIVE1MID0gZnVuY3Rpb24gKGh0bWwpIHtcbiAgICAgICAgdmFyIHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgdGV4dGFyZWEuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgcmV0dXJuIHRleHRhcmVhLnRleHRDb250ZW50O1xuICAgIH07XG4gICAgQ29weUNsaXBib2FyZC5wcm90b3R5cGUudXBkYXRlT25Db3B5Q2FsbGJhY2sgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkNvcHkgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIHJldHVybiBDb3B5Q2xpcGJvYXJkO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0Q29weUNsaXBib2FyZHMoKSB7XG4gICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNvcHktdG8tY2xpcGJvYXJkLXRhcmdldF0nKVxuICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgdGFyZ2V0SWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jb3B5LXRvLWNsaXBib2FyZC10YXJnZXQnKTtcbiAgICAgICAgdmFyICR0YXJnZXRFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldElkKTtcbiAgICAgICAgdmFyIGNvbnRlbnRUeXBlID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29weS10by1jbGlwYm9hcmQtY29udGVudC10eXBlJyk7XG4gICAgICAgIHZhciBodG1sRW50aXRpZXMgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jb3B5LXRvLWNsaXBib2FyZC1odG1sLWVudGl0aWVzJyk7XG4gICAgICAgIC8vIGNoZWNrIGlmIHRoZSB0YXJnZXQgZWxlbWVudCBleGlzdHNcbiAgICAgICAgaWYgKCR0YXJnZXRFbCkge1xuICAgICAgICAgICAgaWYgKCFpbnN0YW5jZXMuaW5zdGFuY2VFeGlzdHMoJ0NvcHlDbGlwYm9hcmQnLCAkdGFyZ2V0RWwuZ2V0QXR0cmlidXRlKCdpZCcpKSkge1xuICAgICAgICAgICAgICAgIG5ldyBDb3B5Q2xpcGJvYXJkKCR0cmlnZ2VyRWwsICR0YXJnZXRFbCwge1xuICAgICAgICAgICAgICAgICAgICBodG1sRW50aXRpZXM6IGh0bWxFbnRpdGllcyAmJiBodG1sRW50aXRpZXMgPT09ICd0cnVlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQuaHRtbEVudGl0aWVzLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogY29udGVudFR5cGVcbiAgICAgICAgICAgICAgICAgICAgICAgID8gY29udGVudFR5cGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDogRGVmYXVsdC5jb250ZW50VHlwZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGUgdGFyZ2V0IGVsZW1lbnQgd2l0aCBpZCBcXFwiXCIuY29uY2F0KHRhcmdldElkLCBcIlxcXCIgZG9lcyBub3QgZXhpc3QuIFBsZWFzZSBjaGVjayB0aGUgZGF0YS1jb3B5LXRvLWNsaXBib2FyZC10YXJnZXQgYXR0cmlidXRlLlwiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5Db3B5Q2xpcGJvYXJkID0gQ29weUNsaXBib2FyZDtcbiAgICB3aW5kb3cuaW5pdENsaXBib2FyZHMgPSBpbml0Q29weUNsaXBib2FyZHM7XG59XG5leHBvcnQgZGVmYXVsdCBDb3B5Q2xpcGJvYXJkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgaW5zdGFuY2VzIGZyb20gJy4uLy4uL2RvbS9pbnN0YW5jZXMnO1xudmFyIERlZmF1bHQgPSB7XG4gICAgb25Db2xsYXBzZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uRXhwYW5kOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25Ub2dnbGU6IGZ1bmN0aW9uICgpIHsgfSxcbn07XG52YXIgRGVmYXVsdEluc3RhbmNlT3B0aW9ucyA9IHtcbiAgICBpZDogbnVsbCxcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG52YXIgQ29sbGFwc2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29sbGFwc2UodGFyZ2V0RWwsIHRyaWdnZXJFbCwgb3B0aW9ucywgaW5zdGFuY2VPcHRpb25zKSB7XG4gICAgICAgIGlmICh0YXJnZXRFbCA9PT0gdm9pZCAwKSB7IHRhcmdldEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAodHJpZ2dlckVsID09PSB2b2lkIDApIHsgdHJpZ2dlckVsID0gbnVsbDsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgID8gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA6IHRhcmdldEVsLmlkO1xuICAgICAgICB0aGlzLl90YXJnZXRFbCA9IHRhcmdldEVsO1xuICAgICAgICB0aGlzLl90cmlnZ2VyRWwgPSB0cmlnZ2VyRWw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0NvbGxhcHNlJywgdGhpcywgdGhpcy5faW5zdGFuY2VJZCwgaW5zdGFuY2VPcHRpb25zLm92ZXJyaWRlKTtcbiAgICB9XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl90cmlnZ2VyRWwgJiYgdGhpcy5fdGFyZ2V0RWwgJiYgIXRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsLmhhc0F0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdmlzaWJsZSA9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3RyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ3RydWUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZml4IHVudGlsIHYyIG5vdCB0byBicmVhayBwcmV2aW91cyBzaW5nbGUgY29sbGFwc2VzIHdoaWNoIGJlY2FtZSBkaXNtaXNzXG4gICAgICAgICAgICAgICAgdGhpcy5fdmlzaWJsZSA9ICF0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuY29udGFpbnMoJ2hpZGRlbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fY2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnRvZ2dsZSgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvbGxhcHNlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0NvbGxhcHNlJywgdGhpcy5faW5zdGFuY2VJZCk7XG4gICAgfTtcbiAgICBDb2xsYXBzZS5wcm90b3R5cGUuZGVzdHJveUFuZFJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJbnN0YW5jZSgpO1xuICAgIH07XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmNvbGxhcHNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgaWYgKHRoaXMuX3RyaWdnZXJFbCkge1xuICAgICAgICAgICAgdGhpcy5fdHJpZ2dlckVsLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICdmYWxzZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkNvbGxhcHNlKHRoaXMpO1xuICAgIH07XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLmV4cGFuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgIGlmICh0aGlzLl90cmlnZ2VyRWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3RyaWdnZXJFbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSB0cnVlO1xuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uRXhwYW5kKHRoaXMpO1xuICAgIH07XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Zpc2libGUpIHtcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZXhwYW5kKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSh0aGlzKTtcbiAgICB9O1xuICAgIENvbGxhcHNlLnByb3RvdHlwZS51cGRhdGVPbkNvbGxhcHNlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25Db2xsYXBzZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgQ29sbGFwc2UucHJvdG90eXBlLnVwZGF0ZU9uRXhwYW5kID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25FeHBhbmQgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIENvbGxhcHNlLnByb3RvdHlwZS51cGRhdGVPblRvZ2dsZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uVG9nZ2xlID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gQ29sbGFwc2U7XG59KCkpO1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRDb2xsYXBzZXMoKSB7XG4gICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWNvbGxhcHNlLXRvZ2dsZV0nKVxuICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgdGFyZ2V0SWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1jb2xsYXBzZS10b2dnbGUnKTtcbiAgICAgICAgdmFyICR0YXJnZXRFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldElkKTtcbiAgICAgICAgLy8gY2hlY2sgaWYgdGhlIHRhcmdldCBlbGVtZW50IGV4aXN0c1xuICAgICAgICBpZiAoJHRhcmdldEVsKSB7XG4gICAgICAgICAgICBpZiAoIWluc3RhbmNlcy5pbnN0YW5jZUV4aXN0cygnQ29sbGFwc2UnLCAkdGFyZ2V0RWwuZ2V0QXR0cmlidXRlKCdpZCcpKSkge1xuICAgICAgICAgICAgICAgIG5ldyBDb2xsYXBzZSgkdGFyZ2V0RWwsICR0cmlnZ2VyRWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgaW5zdGFuY2UgZXhpc3RzIGFscmVhZHkgZm9yIHRoZSBzYW1lIHRhcmdldCBlbGVtZW50IHRoZW4gY3JlYXRlIGEgbmV3IG9uZSB3aXRoIGEgZGlmZmVyZW50IHRyaWdnZXIgZWxlbWVudFxuICAgICAgICAgICAgICAgIG5ldyBDb2xsYXBzZSgkdGFyZ2V0RWwsICR0cmlnZ2VyRWwsIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiAkdGFyZ2V0RWwuZ2V0QXR0cmlidXRlKCdpZCcpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdfJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZXMuX2dlbmVyYXRlUmFuZG9tSWQoKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGUgdGFyZ2V0IGVsZW1lbnQgd2l0aCBpZCBcXFwiXCIuY29uY2F0KHRhcmdldElkLCBcIlxcXCIgZG9lcyBub3QgZXhpc3QuIFBsZWFzZSBjaGVjayB0aGUgZGF0YS1jb2xsYXBzZS10b2dnbGUgYXR0cmlidXRlLlwiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5Db2xsYXBzZSA9IENvbGxhcHNlO1xuICAgIHdpbmRvdy5pbml0Q29sbGFwc2VzID0gaW5pdENvbGxhcHNlcztcbn1cbmV4cG9ydCBkZWZhdWx0IENvbGxhcHNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgaW5zdGFuY2VzIGZyb20gJy4uLy4uL2RvbS9pbnN0YW5jZXMnO1xudmFyIERlZmF1bHQgPSB7XG4gICAgdHJpZ2dlclR5cGU6ICdob3ZlcicsXG4gICAgb25TaG93OiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25IaWRlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25Ub2dnbGU6IGZ1bmN0aW9uICgpIHsgfSxcbn07XG52YXIgRGVmYXVsdEluc3RhbmNlT3B0aW9ucyA9IHtcbiAgICBpZDogbnVsbCxcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG52YXIgRGlhbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEaWFsKHBhcmVudEVsLCB0cmlnZ2VyRWwsIHRhcmdldEVsLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHBhcmVudEVsID09PSB2b2lkIDApIHsgcGFyZW50RWwgPSBudWxsOyB9XG4gICAgICAgIGlmICh0cmlnZ2VyRWwgPT09IHZvaWQgMCkgeyB0cmlnZ2VyRWwgPSBudWxsOyB9XG4gICAgICAgIGlmICh0YXJnZXRFbCA9PT0gdm9pZCAwKSB7IHRhcmdldEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgID8gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA6IHRhcmdldEVsLmlkO1xuICAgICAgICB0aGlzLl9wYXJlbnRFbCA9IHBhcmVudEVsO1xuICAgICAgICB0aGlzLl90cmlnZ2VyRWwgPSB0cmlnZ2VyRWw7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsID0gdGFyZ2V0RWw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0RpYWwnLCB0aGlzLCB0aGlzLl9pbnN0YW5jZUlkLCBpbnN0YW5jZU9wdGlvbnMub3ZlcnJpZGUpO1xuICAgIH1cbiAgICBEaWFsLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX3RhcmdldEVsICYmICF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJFdmVudFR5cGVzID0gdGhpcy5fZ2V0VHJpZ2dlckV2ZW50VHlwZXModGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSk7XG4gICAgICAgICAgICB0aGlzLl9zaG93RXZlbnRIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLnNob3coKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRUeXBlcy5zaG93RXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5fc2hvd0V2ZW50SGFuZGxlcik7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLmFkZEV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9zaG93RXZlbnRIYW5kbGVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5faGlkZUV2ZW50SGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl9wYXJlbnRFbC5tYXRjaGVzKCc6aG92ZXInKSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudFR5cGVzLmhpZGVFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fcGFyZW50RWwuYWRkRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX2hpZGVFdmVudEhhbmRsZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJFdmVudFR5cGVzID0gdGhpcy5fZ2V0VHJpZ2dlckV2ZW50VHlwZXModGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRUeXBlcy5zaG93RXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5fc2hvd0V2ZW50SGFuZGxlcik7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9zaG93RXZlbnRIYW5kbGVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50VHlwZXMuaGlkZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgICAgIF90aGlzLl9wYXJlbnRFbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faGlkZUV2ZW50SGFuZGxlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0RpYWwnLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLmRlc3Ryb3lBbmRSZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMucmVtb3ZlSW5zdGFuY2UoKTtcbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsKSB7XG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSh0aGlzKTtcbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsKSB7XG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ3RydWUnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl92aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3codGhpcyk7XG4gICAgfTtcbiAgICBEaWFsLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl92aXNpYmxlKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEaWFsLnByb3RvdHlwZS5pc0hpZGRlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLl92aXNpYmxlO1xuICAgIH07XG4gICAgRGlhbC5wcm90b3R5cGUuaXNWaXNpYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmlzaWJsZTtcbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLl9nZXRUcmlnZ2VyRXZlbnRUeXBlcyA9IGZ1bmN0aW9uICh0cmlnZ2VyVHlwZSkge1xuICAgICAgICBzd2l0Y2ggKHRyaWdnZXJUeXBlKSB7XG4gICAgICAgICAgICBjYXNlICdob3Zlcic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogWydtb3VzZWVudGVyJywgJ2ZvY3VzJ10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFsnbW91c2VsZWF2ZScsICdibHVyJ10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgJ2NsaWNrJzpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzaG93RXZlbnRzOiBbJ2NsaWNrJywgJ2ZvY3VzJ10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFsnZm9jdXNvdXQnLCAnYmx1ciddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlICdub25lJzpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzaG93RXZlbnRzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZUV2ZW50czogW10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogWydtb3VzZWVudGVyJywgJ2ZvY3VzJ10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFsnbW91c2VsZWF2ZScsICdibHVyJ10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRGlhbC5wcm90b3R5cGUudXBkYXRlT25TaG93ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBEaWFsLnByb3RvdHlwZS51cGRhdGVPbkhpZGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkhpZGUgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIERpYWwucHJvdG90eXBlLnVwZGF0ZU9uVG9nZ2xlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25Ub2dnbGUgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIHJldHVybiBEaWFsO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0RGlhbHMoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZGlhbC1pbml0XScpLmZvckVhY2goZnVuY3Rpb24gKCRwYXJlbnRFbCkge1xuICAgICAgICB2YXIgJHRyaWdnZXJFbCA9ICRwYXJlbnRFbC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1kaWFsLXRvZ2dsZV0nKTtcbiAgICAgICAgaWYgKCR0cmlnZ2VyRWwpIHtcbiAgICAgICAgICAgIHZhciBkaWFsSWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kaWFsLXRvZ2dsZScpO1xuICAgICAgICAgICAgdmFyICRkaWFsRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaWFsSWQpO1xuICAgICAgICAgICAgaWYgKCRkaWFsRWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgdHJpZ2dlclR5cGUgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kaWFsLXRyaWdnZXInKTtcbiAgICAgICAgICAgICAgICBuZXcgRGlhbCgkcGFyZW50RWwsICR0cmlnZ2VyRWwsICRkaWFsRWwsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlclR5cGU6IHRyaWdnZXJUeXBlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHRyaWdnZXJUeXBlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQudHJpZ2dlclR5cGUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRGlhbCB3aXRoIGlkIFwiLmNvbmNhdChkaWFsSWQsIFwiIGRvZXMgbm90IGV4aXN0LiBBcmUgeW91IHN1cmUgdGhhdCB0aGUgZGF0YS1kaWFsLXRvZ2dsZSBhdHRyaWJ1dGUgcG9pbnRzIHRvIHRoZSBjb3JyZWN0IG1vZGFsIGlkP1wiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRGlhbCB3aXRoIGlkIFwiLmNvbmNhdCgkcGFyZW50RWwuaWQsIFwiIGRvZXMgbm90IGhhdmUgYSB0cmlnZ2VyIGVsZW1lbnQuIEFyZSB5b3Ugc3VyZSB0aGF0IHRoZSBkYXRhLWRpYWwtdG9nZ2xlIGF0dHJpYnV0ZSBleGlzdHM/XCIpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LkRpYWwgPSBEaWFsO1xuICAgIHdpbmRvdy5pbml0RGlhbHMgPSBpbml0RGlhbHM7XG59XG5leHBvcnQgZGVmYXVsdCBEaWFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlLmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5pbXBvcnQgaW5zdGFuY2VzIGZyb20gJy4uLy4uL2RvbS9pbnN0YW5jZXMnO1xudmFyIERlZmF1bHQgPSB7XG4gICAgdHJhbnNpdGlvbjogJ3RyYW5zaXRpb24tb3BhY2l0eScsXG4gICAgZHVyYXRpb246IDMwMCxcbiAgICB0aW1pbmc6ICdlYXNlLW91dCcsXG4gICAgb25IaWRlOiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIERpc21pc3MgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGlzbWlzcyh0YXJnZXRFbCwgdHJpZ2dlckVsLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRhcmdldEVsID09PSB2b2lkIDApIHsgdGFyZ2V0RWwgPSBudWxsOyB9XG4gICAgICAgIGlmICh0cmlnZ2VyRWwgPT09IHZvaWQgMCkgeyB0cmlnZ2VyRWwgPSBudWxsOyB9XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IERlZmF1bHQ7IH1cbiAgICAgICAgaWYgKGluc3RhbmNlT3B0aW9ucyA9PT0gdm9pZCAwKSB7IGluc3RhbmNlT3B0aW9ucyA9IERlZmF1bHRJbnN0YW5jZU9wdGlvbnM7IH1cbiAgICAgICAgdGhpcy5faW5zdGFuY2VJZCA9IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgPyBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgIDogdGFyZ2V0RWwuaWQ7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsID0gdGFyZ2V0RWw7XG4gICAgICAgIHRoaXMuX3RyaWdnZXJFbCA9IHRyaWdnZXJFbDtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBEZWZhdWx0KSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0Rpc21pc3MnLCB0aGlzLCB0aGlzLl9pbnN0YW5jZUlkLCBpbnN0YW5jZU9wdGlvbnMub3ZlcnJpZGUpO1xuICAgIH1cbiAgICBEaXNtaXNzLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX3RhcmdldEVsICYmICF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5fY2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmhpZGUoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEaXNtaXNzLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl90cmlnZ2VyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRGlzbWlzcy5wcm90b3R5cGUucmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlcy5yZW1vdmVJbnN0YW5jZSgnRGlzbWlzcycsIHRoaXMuX2luc3RhbmNlSWQpO1xuICAgIH07XG4gICAgRGlzbWlzcy5wcm90b3R5cGUuZGVzdHJveUFuZFJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJbnN0YW5jZSgpO1xuICAgIH07XG4gICAgRGlzbWlzcy5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9vcHRpb25zLnRyYW5zaXRpb24sIFwiZHVyYXRpb24tXCIuY29uY2F0KHRoaXMuX29wdGlvbnMuZHVyYXRpb24pLCB0aGlzLl9vcHRpb25zLnRpbWluZywgJ29wYWNpdHktMCcpO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgfSwgdGhpcy5fb3B0aW9ucy5kdXJhdGlvbik7XG4gICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMuX29wdGlvbnMub25IaWRlKHRoaXMsIHRoaXMuX3RhcmdldEVsKTtcbiAgICB9O1xuICAgIERpc21pc3MucHJvdG90eXBlLnVwZGF0ZU9uSGlkZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIERpc21pc3M7XG59KCkpO1xuZXhwb3J0IGZ1bmN0aW9uIGluaXREaXNtaXNzZXMoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZGlzbWlzcy10YXJnZXRdJykuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgdGFyZ2V0SWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kaXNtaXNzLXRhcmdldCcpO1xuICAgICAgICB2YXIgJGRpc21pc3NFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0SWQpO1xuICAgICAgICBpZiAoJGRpc21pc3NFbCkge1xuICAgICAgICAgICAgbmV3IERpc21pc3MoJGRpc21pc3NFbCwgJHRyaWdnZXJFbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIGRpc21pc3MgZWxlbWVudCB3aXRoIGlkIFxcXCJcIi5jb25jYXQodGFyZ2V0SWQsIFwiXFxcIiBkb2VzIG5vdCBleGlzdC4gUGxlYXNlIGNoZWNrIHRoZSBkYXRhLWRpc21pc3MtdGFyZ2V0IGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuRGlzbWlzcyA9IERpc21pc3M7XG4gICAgd2luZG93LmluaXREaXNtaXNzZXMgPSBpbml0RGlzbWlzc2VzO1xufVxuZXhwb3J0IGRlZmF1bHQgRGlzbWlzcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIHBsYWNlbWVudDogJ2xlZnQnLFxuICAgIGJvZHlTY3JvbGxpbmc6IGZhbHNlLFxuICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgIGVkZ2U6IGZhbHNlLFxuICAgIGVkZ2VPZmZzZXQ6ICdib3R0b20tWzYwcHhdJyxcbiAgICBiYWNrZHJvcENsYXNzZXM6ICdiZy1ncmF5LTkwMC81MCBkYXJrOmJnLWdyYXktOTAwLzgwIGZpeGVkIGluc2V0LTAgei0zMCcsXG4gICAgb25TaG93OiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25IaWRlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25Ub2dnbGU6IGZ1bmN0aW9uICgpIHsgfSxcbn07XG52YXIgRGVmYXVsdEluc3RhbmNlT3B0aW9ucyA9IHtcbiAgICBpZDogbnVsbCxcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG52YXIgRHJhd2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERyYXdlcih0YXJnZXRFbCwgb3B0aW9ucywgaW5zdGFuY2VPcHRpb25zKSB7XG4gICAgICAgIGlmICh0YXJnZXRFbCA9PT0gdm9pZCAwKSB7IHRhcmdldEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2V2ZW50TGlzdGVuZXJJbnN0YW5jZXMgPSBbXTtcbiAgICAgICAgdGhpcy5faW5zdGFuY2VJZCA9IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgPyBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgIDogdGFyZ2V0RWwuaWQ7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsID0gdGFyZ2V0RWw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0RyYXdlcicsIHRoaXMsIHRoaXMuX2luc3RhbmNlSWQsIGluc3RhbmNlT3B0aW9ucy5vdmVycmlkZSk7XG4gICAgfVxuICAgIERyYXdlci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgLy8gc2V0IGluaXRpYWwgYWNjZXNzaWJpbGl0eSBhdHRyaWJ1dGVzXG4gICAgICAgIGlmICh0aGlzLl90YXJnZXRFbCAmJiAhdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3RhcmdldEVsLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgndHJhbnNpdGlvbi10cmFuc2Zvcm0nKTtcbiAgICAgICAgICAgIC8vIHNldCBiYXNlIHBsYWNlbWVudCBjbGFzc2VzXG4gICAgICAgICAgICB0aGlzLl9nZXRQbGFjZW1lbnRDbGFzc2VzKHRoaXMuX29wdGlvbnMucGxhY2VtZW50KS5iYXNlLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuYWRkKGMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVFc2NhcGVLZXkgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiAnRXNjYXBlJyBrZXkgaXMgcHJlc3NlZFxuICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMuaXNWaXNpYmxlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBEcmF3ZXIgaXMgdmlzaWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgpOyAvLyBoaWRlIHRoZSBEcmF3ZXJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBhZGQga2V5Ym9hcmQgZXZlbnQgbGlzdGVuZXIgdG8gZG9jdW1lbnRcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NhcGVLZXkpO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEcmF3ZXIucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVBbGxFdmVudExpc3RlbmVySW5zdGFuY2VzKCk7XG4gICAgICAgICAgICB0aGlzLl9kZXN0cm95QmFja2Ryb3BFbCgpO1xuICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBrZXlib2FyZCBldmVudCBsaXN0ZW5lclxuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY2FwZUtleSk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEcmF3ZXIucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0RyYXdlcicsIHRoaXMuX2luc3RhbmNlSWQpO1xuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5kZXN0cm95QW5kUmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKCk7XG4gICAgfTtcbiAgICBEcmF3ZXIucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIC8vIGJhc2VkIG9uIHRoZSBlZGdlIG9wdGlvbiBzaG93IHBsYWNlbWVudCBjbGFzc2VzXG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLmVkZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX2dldFBsYWNlbWVudENsYXNzZXModGhpcy5fb3B0aW9ucy5wbGFjZW1lbnQgKyAnLWVkZ2UnKS5hY3RpdmUubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5yZW1vdmUoYyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2dldFBsYWNlbWVudENsYXNzZXModGhpcy5fb3B0aW9ucy5wbGFjZW1lbnQgKyAnLWVkZ2UnKS5pbmFjdGl2ZS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZChjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZ2V0UGxhY2VtZW50Q2xhc3Nlcyh0aGlzLl9vcHRpb25zLnBsYWNlbWVudCkuYWN0aXZlLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKGMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLl9nZXRQbGFjZW1lbnRDbGFzc2VzKHRoaXMuX29wdGlvbnMucGxhY2VtZW50KS5pbmFjdGl2ZS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZChjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNldCBhY2Nlc3NpYmlsaXR5IGF0dHJpYnV0ZXNcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1tb2RhbCcpO1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5yZW1vdmVBdHRyaWJ1dGUoJ3JvbGUnKTtcbiAgICAgICAgLy8gZW5hYmxlIGJvZHkgc2Nyb2xsXG4gICAgICAgIGlmICghdGhpcy5fb3B0aW9ucy5ib2R5U2Nyb2xsaW5nKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ292ZXJmbG93LWhpZGRlbicpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGRlc3Ryb3kgYmFja2Ryb3BcbiAgICAgICAgaWYgKHRoaXMuX29wdGlvbnMuYmFja2Ryb3ApIHtcbiAgICAgICAgICAgIHRoaXMuX2Rlc3Ryb3lCYWNrZHJvcEVsKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSh0aGlzKTtcbiAgICB9O1xuICAgIERyYXdlci5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuX29wdGlvbnMuZWRnZSkge1xuICAgICAgICAgICAgdGhpcy5fZ2V0UGxhY2VtZW50Q2xhc3Nlcyh0aGlzLl9vcHRpb25zLnBsYWNlbWVudCArICctZWRnZScpLmFjdGl2ZS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZChjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5fZ2V0UGxhY2VtZW50Q2xhc3Nlcyh0aGlzLl9vcHRpb25zLnBsYWNlbWVudCArICctZWRnZScpLmluYWN0aXZlLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKGMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9nZXRQbGFjZW1lbnRDbGFzc2VzKHRoaXMuX29wdGlvbnMucGxhY2VtZW50KS5hY3RpdmUubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5hZGQoYyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2dldFBsYWNlbWVudENsYXNzZXModGhpcy5fb3B0aW9ucy5wbGFjZW1lbnQpLmluYWN0aXZlLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKGMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2V0IGFjY2Vzc2liaWxpdHkgYXR0cmlidXRlc1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnLCAndHJ1ZScpO1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnZGlhbG9nJyk7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nKTtcbiAgICAgICAgLy8gZGlzYWJsZSBib2R5IHNjcm9sbFxuICAgICAgICBpZiAoIXRoaXMuX29wdGlvbnMuYm9keVNjcm9sbGluZykge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdvdmVyZmxvdy1oaWRkZW4nKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBzaG93IGJhY2tkcm9wXG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLmJhY2tkcm9wKSB7XG4gICAgICAgICAgICB0aGlzLl9jcmVhdGVCYWNrZHJvcCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSB0cnVlO1xuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uU2hvdyh0aGlzKTtcbiAgICB9O1xuICAgIERyYXdlci5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5pc1Zpc2libGUoKSkge1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNob3coKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5fY3JlYXRlQmFja2Ryb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKCF0aGlzLl92aXNpYmxlKSB7XG4gICAgICAgICAgICB2YXIgYmFja2Ryb3BFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgYmFja2Ryb3BFbC5zZXRBdHRyaWJ1dGUoJ2RyYXdlci1iYWNrZHJvcCcsICcnKTtcbiAgICAgICAgICAgIChfYSA9IGJhY2tkcm9wRWwuY2xhc3NMaXN0KS5hZGQuYXBwbHkoX2EsIHRoaXMuX29wdGlvbnMuYmFja2Ryb3BDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmFwcGVuZChiYWNrZHJvcEVsKTtcbiAgICAgICAgICAgIGJhY2tkcm9wRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERyYXdlci5wcm90b3R5cGUuX2Rlc3Ryb3lCYWNrZHJvcEVsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdmlzaWJsZSAmJlxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RyYXdlci1iYWNrZHJvcF0nKSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RyYXdlci1iYWNrZHJvcF0nKS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5fZ2V0UGxhY2VtZW50Q2xhc3NlcyA9IGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICAgICAgc3dpdGNoIChwbGFjZW1lbnQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3RvcCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYmFzZTogWyd0b3AtMCcsICdsZWZ0LTAnLCAncmlnaHQtMCddLFxuICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IFsndHJhbnNmb3JtLW5vbmUnXSxcbiAgICAgICAgICAgICAgICAgICAgaW5hY3RpdmU6IFsnLXRyYW5zbGF0ZS15LWZ1bGwnXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAncmlnaHQnOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGJhc2U6IFsncmlnaHQtMCcsICd0b3AtMCddLFxuICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IFsndHJhbnNmb3JtLW5vbmUnXSxcbiAgICAgICAgICAgICAgICAgICAgaW5hY3RpdmU6IFsndHJhbnNsYXRlLXgtZnVsbCddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlICdib3R0b20nOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGJhc2U6IFsnYm90dG9tLTAnLCAnbGVmdC0wJywgJ3JpZ2h0LTAnXSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBbJ3RyYW5zZm9ybS1ub25lJ10sXG4gICAgICAgICAgICAgICAgICAgIGluYWN0aXZlOiBbJ3RyYW5zbGF0ZS15LWZ1bGwnXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAnbGVmdCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYmFzZTogWydsZWZ0LTAnLCAndG9wLTAnXSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBbJ3RyYW5zZm9ybS1ub25lJ10sXG4gICAgICAgICAgICAgICAgICAgIGluYWN0aXZlOiBbJy10cmFuc2xhdGUteC1mdWxsJ10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgJ2JvdHRvbS1lZGdlJzpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBiYXNlOiBbJ2xlZnQtMCcsICd0b3AtMCddLFxuICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IFsndHJhbnNmb3JtLW5vbmUnXSxcbiAgICAgICAgICAgICAgICAgICAgaW5hY3RpdmU6IFsndHJhbnNsYXRlLXktZnVsbCcsIHRoaXMuX29wdGlvbnMuZWRnZU9mZnNldF0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYmFzZTogWydsZWZ0LTAnLCAndG9wLTAnXSxcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiBbJ3RyYW5zZm9ybS1ub25lJ10sXG4gICAgICAgICAgICAgICAgICAgIGluYWN0aXZlOiBbJy10cmFuc2xhdGUteC1mdWxsJ10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5pc0hpZGRlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLl92aXNpYmxlO1xuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5pc1Zpc2libGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92aXNpYmxlO1xuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVySW5zdGFuY2UgPSBmdW5jdGlvbiAoZWxlbWVudCwgdHlwZSwgaGFuZGxlcikge1xuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVySW5zdGFuY2VzLnB1c2goe1xuICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgICAgIHR5cGU6IHR5cGUsXG4gICAgICAgICAgICBoYW5kbGVyOiBoYW5kbGVyLFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIERyYXdlci5wcm90b3R5cGUucmVtb3ZlQWxsRXZlbnRMaXN0ZW5lckluc3RhbmNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRMaXN0ZW5lckluc3RhbmNlcy5tYXAoZnVuY3Rpb24gKGV2ZW50TGlzdGVuZXJJbnN0YW5jZSkge1xuICAgICAgICAgICAgZXZlbnRMaXN0ZW5lckluc3RhbmNlLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudExpc3RlbmVySW5zdGFuY2UudHlwZSwgZXZlbnRMaXN0ZW5lckluc3RhbmNlLmhhbmRsZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fZXZlbnRMaXN0ZW5lckluc3RhbmNlcyA9IFtdO1xuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS5nZXRBbGxFdmVudExpc3RlbmVySW5zdGFuY2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXZlbnRMaXN0ZW5lckluc3RhbmNlcztcbiAgICB9O1xuICAgIERyYXdlci5wcm90b3R5cGUudXBkYXRlT25TaG93ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBEcmF3ZXIucHJvdG90eXBlLnVwZGF0ZU9uSGlkZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgRHJhd2VyLnByb3RvdHlwZS51cGRhdGVPblRvZ2dsZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uVG9nZ2xlID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gRHJhd2VyO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0RHJhd2VycygpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1kcmF3ZXItdGFyZ2V0XScpLmZvckVhY2goZnVuY3Rpb24gKCR0cmlnZ2VyRWwpIHtcbiAgICAgICAgLy8gbWFuZGF0b3J5XG4gICAgICAgIHZhciBkcmF3ZXJJZCA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyYXdlci10YXJnZXQnKTtcbiAgICAgICAgdmFyICRkcmF3ZXJFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRyYXdlcklkKTtcbiAgICAgICAgaWYgKCRkcmF3ZXJFbCkge1xuICAgICAgICAgICAgdmFyIHBsYWNlbWVudCA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyYXdlci1wbGFjZW1lbnQnKTtcbiAgICAgICAgICAgIHZhciBib2R5U2Nyb2xsaW5nID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJhd2VyLWJvZHktc2Nyb2xsaW5nJyk7XG4gICAgICAgICAgICB2YXIgYmFja2Ryb3AgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kcmF3ZXItYmFja2Ryb3AnKTtcbiAgICAgICAgICAgIHZhciBlZGdlID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJhd2VyLWVkZ2UnKTtcbiAgICAgICAgICAgIHZhciBlZGdlT2Zmc2V0ID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJhd2VyLWVkZ2Utb2Zmc2V0Jyk7XG4gICAgICAgICAgICBuZXcgRHJhd2VyKCRkcmF3ZXJFbCwge1xuICAgICAgICAgICAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50ID8gcGxhY2VtZW50IDogRGVmYXVsdC5wbGFjZW1lbnQsXG4gICAgICAgICAgICAgICAgYm9keVNjcm9sbGluZzogYm9keVNjcm9sbGluZ1xuICAgICAgICAgICAgICAgICAgICA/IGJvZHlTY3JvbGxpbmcgPT09ICd0cnVlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIDogRGVmYXVsdC5ib2R5U2Nyb2xsaW5nLFxuICAgICAgICAgICAgICAgIGJhY2tkcm9wOiBiYWNrZHJvcFxuICAgICAgICAgICAgICAgICAgICA/IGJhY2tkcm9wID09PSAndHJ1ZSdcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQuYmFja2Ryb3AsXG4gICAgICAgICAgICAgICAgZWRnZTogZWRnZSA/IChlZGdlID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2UpIDogRGVmYXVsdC5lZGdlLFxuICAgICAgICAgICAgICAgIGVkZ2VPZmZzZXQ6IGVkZ2VPZmZzZXQgPyBlZGdlT2Zmc2V0IDogRGVmYXVsdC5lZGdlT2Zmc2V0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRHJhd2VyIHdpdGggaWQgXCIuY29uY2F0KGRyYXdlcklkLCBcIiBub3QgZm91bmQuIEFyZSB5b3Ugc3VyZSB0aGF0IHRoZSBkYXRhLWRyYXdlci10YXJnZXQgYXR0cmlidXRlIHBvaW50cyB0byB0aGUgY29ycmVjdCBkcmF3ZXIgaWQ/XCIpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWRyYXdlci10b2dnbGVdJykuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgZHJhd2VySWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kcmF3ZXItdG9nZ2xlJyk7XG4gICAgICAgIHZhciAkZHJhd2VyRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkcmF3ZXJJZCk7XG4gICAgICAgIGlmICgkZHJhd2VyRWwpIHtcbiAgICAgICAgICAgIHZhciBkcmF3ZXJfMSA9IGluc3RhbmNlcy5nZXRJbnN0YW5jZSgnRHJhd2VyJywgZHJhd2VySWQpO1xuICAgICAgICAgICAgaWYgKGRyYXdlcl8xKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRvZ2dsZURyYXdlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgZHJhd2VyXzEudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAkdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlRHJhd2VyKTtcbiAgICAgICAgICAgICAgICBkcmF3ZXJfMS5hZGRFdmVudExpc3RlbmVySW5zdGFuY2UoJHRyaWdnZXJFbCwgJ2NsaWNrJywgdG9nZ2xlRHJhd2VyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJEcmF3ZXIgd2l0aCBpZCBcIi5jb25jYXQoZHJhd2VySWQsIFwiIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZC4gUGxlYXNlIGluaXRpYWxpemUgaXQgdXNpbmcgdGhlIGRhdGEtZHJhd2VyLXRhcmdldCBhdHRyaWJ1dGUuXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJEcmF3ZXIgd2l0aCBpZCBcIi5jb25jYXQoZHJhd2VySWQsIFwiIG5vdCBmb3VuZC4gQXJlIHlvdSBzdXJlIHRoYXQgdGhlIGRhdGEtZHJhd2VyLXRhcmdldCBhdHRyaWJ1dGUgcG9pbnRzIHRvIHRoZSBjb3JyZWN0IGRyYXdlciBpZD9cIikpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWRyYXdlci1kaXNtaXNzXSwgW2RhdGEtZHJhd2VyLWhpZGVdJylcbiAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKCR0cmlnZ2VyRWwpIHtcbiAgICAgICAgdmFyIGRyYXdlcklkID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJhd2VyLWRpc21pc3MnKVxuICAgICAgICAgICAgPyAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kcmF3ZXItZGlzbWlzcycpXG4gICAgICAgICAgICA6ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyYXdlci1oaWRlJyk7XG4gICAgICAgIHZhciAkZHJhd2VyRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkcmF3ZXJJZCk7XG4gICAgICAgIGlmICgkZHJhd2VyRWwpIHtcbiAgICAgICAgICAgIHZhciBkcmF3ZXJfMiA9IGluc3RhbmNlcy5nZXRJbnN0YW5jZSgnRHJhd2VyJywgZHJhd2VySWQpO1xuICAgICAgICAgICAgaWYgKGRyYXdlcl8yKSB7XG4gICAgICAgICAgICAgICAgdmFyIGhpZGVEcmF3ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyYXdlcl8yLmhpZGUoKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICR0cmlnZ2VyRWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoaWRlRHJhd2VyKTtcbiAgICAgICAgICAgICAgICBkcmF3ZXJfMi5hZGRFdmVudExpc3RlbmVySW5zdGFuY2UoJHRyaWdnZXJFbCwgJ2NsaWNrJywgaGlkZURyYXdlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRHJhd2VyIHdpdGggaWQgXCIuY29uY2F0KGRyYXdlcklkLCBcIiBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQuIFBsZWFzZSBpbml0aWFsaXplIGl0IHVzaW5nIHRoZSBkYXRhLWRyYXdlci10YXJnZXQgYXR0cmlidXRlLlwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRHJhd2VyIHdpdGggaWQgXCIuY29uY2F0KGRyYXdlcklkLCBcIiBub3QgZm91bmQuIEFyZSB5b3Ugc3VyZSB0aGF0IHRoZSBkYXRhLWRyYXdlci10YXJnZXQgYXR0cmlidXRlIHBvaW50cyB0byB0aGUgY29ycmVjdCBkcmF3ZXIgaWRcIikpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZHJhd2VyLXNob3ddJykuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgZHJhd2VySWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kcmF3ZXItc2hvdycpO1xuICAgICAgICB2YXIgJGRyYXdlckVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZHJhd2VySWQpO1xuICAgICAgICBpZiAoJGRyYXdlckVsKSB7XG4gICAgICAgICAgICB2YXIgZHJhd2VyXzMgPSBpbnN0YW5jZXMuZ2V0SW5zdGFuY2UoJ0RyYXdlcicsIGRyYXdlcklkKTtcbiAgICAgICAgICAgIGlmIChkcmF3ZXJfMykge1xuICAgICAgICAgICAgICAgIHZhciBzaG93RHJhd2VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkcmF3ZXJfMy5zaG93KCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAkdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd0RyYXdlcik7XG4gICAgICAgICAgICAgICAgZHJhd2VyXzMuYWRkRXZlbnRMaXN0ZW5lckluc3RhbmNlKCR0cmlnZ2VyRWwsICdjbGljaycsIHNob3dEcmF3ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkRyYXdlciB3aXRoIGlkIFwiLmNvbmNhdChkcmF3ZXJJZCwgXCIgaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkLiBQbGVhc2UgaW5pdGlhbGl6ZSBpdCB1c2luZyB0aGUgZGF0YS1kcmF3ZXItdGFyZ2V0IGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkRyYXdlciB3aXRoIGlkIFwiLmNvbmNhdChkcmF3ZXJJZCwgXCIgbm90IGZvdW5kLiBBcmUgeW91IHN1cmUgdGhhdCB0aGUgZGF0YS1kcmF3ZXItdGFyZ2V0IGF0dHJpYnV0ZSBwb2ludHMgdG8gdGhlIGNvcnJlY3QgZHJhd2VyIGlkP1wiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5EcmF3ZXIgPSBEcmF3ZXI7XG4gICAgd2luZG93LmluaXREcmF3ZXJzID0gaW5pdERyYXdlcnM7XG59XG5leHBvcnQgZGVmYXVsdCBEcmF3ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20sIHBhY2spIHtcbiAgICBpZiAocGFjayB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAyKSBmb3IgKHZhciBpID0gMCwgbCA9IGZyb20ubGVuZ3RoLCBhcjsgaSA8IGw7IGkrKykge1xuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xuICAgICAgICAgICAgYXJbaV0gPSBmcm9tW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0by5jb25jYXQoYXIgfHwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSkpO1xufTtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvbiAqL1xuaW1wb3J0IHsgY3JlYXRlUG9wcGVyIH0gZnJvbSAnQHBvcHBlcmpzL2NvcmUnO1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgdHJpZ2dlclR5cGU6ICdjbGljaycsXG4gICAgb2Zmc2V0U2tpZGRpbmc6IDAsXG4gICAgb2Zmc2V0RGlzdGFuY2U6IDEwLFxuICAgIGRlbGF5OiAzMDAsXG4gICAgaWdub3JlQ2xpY2tPdXRzaWRlQ2xhc3M6IGZhbHNlLFxuICAgIG9uU2hvdzogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uSGlkZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uVG9nZ2xlOiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIERyb3Bkb3duID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERyb3Bkb3duKHRhcmdldEVsZW1lbnQsIHRyaWdnZXJFbGVtZW50LCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRhcmdldEVsZW1lbnQgPT09IHZvaWQgMCkgeyB0YXJnZXRFbGVtZW50ID0gbnVsbDsgfVxuICAgICAgICBpZiAodHJpZ2dlckVsZW1lbnQgPT09IHZvaWQgMCkgeyB0cmlnZ2VyRWxlbWVudCA9IG51bGw7IH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0gRGVmYXVsdDsgfVxuICAgICAgICBpZiAoaW5zdGFuY2VPcHRpb25zID09PSB2b2lkIDApIHsgaW5zdGFuY2VPcHRpb25zID0gRGVmYXVsdEluc3RhbmNlT3B0aW9uczsgfVxuICAgICAgICB0aGlzLl9pbnN0YW5jZUlkID0gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA/IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgOiB0YXJnZXRFbGVtZW50LmlkO1xuICAgICAgICB0aGlzLl90YXJnZXRFbCA9IHRhcmdldEVsZW1lbnQ7XG4gICAgICAgIHRoaXMuX3RyaWdnZXJFbCA9IHRyaWdnZXJFbGVtZW50O1xuICAgICAgICB0aGlzLl9vcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIERlZmF1bHQpLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2UgPSBudWxsO1xuICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0Ryb3Bkb3duJywgdGhpcywgdGhpcy5faW5zdGFuY2VJZCwgaW5zdGFuY2VPcHRpb25zLm92ZXJyaWRlKTtcbiAgICB9XG4gICAgRHJvcGRvd24ucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl90cmlnZ2VyRWwgJiYgdGhpcy5fdGFyZ2V0RWwgJiYgIXRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZSA9IHRoaXMuX2NyZWF0ZVBvcHBlckluc3RhbmNlKCk7XG4gICAgICAgICAgICB0aGlzLl9zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdHJpZ2dlckV2ZW50cyA9IHRoaXMuX2dldFRyaWdnZXJFdmVudHMoKTtcbiAgICAgICAgLy8gUmVtb3ZlIGNsaWNrIGV2ZW50IGxpc3RlbmVycyBmb3IgdHJpZ2dlciBlbGVtZW50XG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLnRyaWdnZXJUeXBlID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRzLnNob3dFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdHJpZ2dlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9jbGlja0hhbmRsZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVtb3ZlIGhvdmVyIGV2ZW50IGxpc3RlbmVycyBmb3IgdHJpZ2dlciBhbmQgdGFyZ2V0IGVsZW1lbnRzXG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLnRyaWdnZXJUeXBlID09PSAnaG92ZXInKSB7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRzLnNob3dFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdHJpZ2dlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9ob3ZlclNob3dUcmlnZ2VyRWxIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX2hvdmVyU2hvd1RhcmdldEVsSGFuZGxlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudHMuaGlkZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgICAgIF90aGlzLl90cmlnZ2VyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX2hvdmVySGlkZUhhbmRsZXIpO1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faG92ZXJIaWRlSGFuZGxlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUucmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlcy5yZW1vdmVJbnN0YW5jZSgnRHJvcGRvd24nLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS5kZXN0cm95QW5kUmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKCk7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuX3NldHVwRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB0cmlnZ2VyRXZlbnRzID0gdGhpcy5fZ2V0VHJpZ2dlckV2ZW50cygpO1xuICAgICAgICB0aGlzLl9jbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy50b2dnbGUoKTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gY2xpY2sgZXZlbnQgaGFuZGxpbmcgZm9yIHRyaWdnZXIgZWxlbWVudFxuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSA9PT0gJ2NsaWNrJykge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50cy5zaG93RXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5fY2xpY2tIYW5kbGVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2hvdmVyU2hvd1RyaWdnZXJFbEhhbmRsZXIgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgIGlmIChldi50eXBlID09PSAnY2xpY2snKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2hvdygpO1xuICAgICAgICAgICAgICAgIH0sIF90aGlzLl9vcHRpb25zLmRlbGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faG92ZXJTaG93VGFyZ2V0RWxIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuc2hvdygpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9ob3ZlckhpZGVIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5fdGFyZ2V0RWwubWF0Y2hlcygnOmhvdmVyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIF90aGlzLl9vcHRpb25zLmRlbGF5KTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gaG92ZXIgZXZlbnQgaGFuZGxpbmcgZm9yIHRyaWdnZXIgZWxlbWVudFxuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSA9PT0gJ2hvdmVyJykge1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50cy5zaG93RXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faG92ZXJTaG93VHJpZ2dlckVsSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLmFkZEV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9ob3ZlclNob3dUYXJnZXRFbEhhbmRsZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRzLmhpZGVFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9ob3ZlckhpZGVIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuYWRkRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX2hvdmVySGlkZUhhbmRsZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS5fY3JlYXRlUG9wcGVySW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVQb3BwZXIodGhpcy5fdHJpZ2dlckVsLCB0aGlzLl90YXJnZXRFbCwge1xuICAgICAgICAgICAgcGxhY2VtZW50OiB0aGlzLl9vcHRpb25zLnBsYWNlbWVudCxcbiAgICAgICAgICAgIG1vZGlmaWVyczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ29mZnNldCcsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldDogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX29wdGlvbnMub2Zmc2V0U2tpZGRpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fb3B0aW9ucy5vZmZzZXREaXN0YW5jZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgRHJvcGRvd24ucHJvdG90eXBlLl9zZXR1cENsaWNrT3V0c2lkZUxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLl9jbGlja091dHNpZGVFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICBfdGhpcy5faGFuZGxlQ2xpY2tPdXRzaWRlKGV2LCBfdGhpcy5fdGFyZ2V0RWwpO1xuICAgICAgICB9O1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuX3JlbW92ZUNsaWNrT3V0c2lkZUxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuX2hhbmRsZUNsaWNrT3V0c2lkZSA9IGZ1bmN0aW9uIChldiwgdGFyZ2V0RWwpIHtcbiAgICAgICAgdmFyIGNsaWNrZWRFbCA9IGV2LnRhcmdldDtcbiAgICAgICAgLy8gSWdub3JlIGNsaWNrcyBvbiB0aGUgdHJpZ2dlciBlbGVtZW50IChpZS4gYSBkYXRlcGlja2VyIGlucHV0KVxuICAgICAgICB2YXIgaWdub3JlQ2xpY2tPdXRzaWRlQ2xhc3MgPSB0aGlzLl9vcHRpb25zLmlnbm9yZUNsaWNrT3V0c2lkZUNsYXNzO1xuICAgICAgICB2YXIgaXNJZ25vcmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChpZ25vcmVDbGlja091dHNpZGVDbGFzcykge1xuICAgICAgICAgICAgdmFyIGlnbm9yZWRDbGlja091dHNpZGVFbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLlwiLmNvbmNhdChpZ25vcmVDbGlja091dHNpZGVDbGFzcykpO1xuICAgICAgICAgICAgaWdub3JlZENsaWNrT3V0c2lkZUVscy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgIGlmIChlbC5jb250YWlucyhjbGlja2VkRWwpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzSWdub3JlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZ25vcmUgY2xpY2tzIG9uIHRoZSB0YXJnZXQgZWxlbWVudCAoaWUuIGRyb3Bkb3duIGl0c2VsZilcbiAgICAgICAgaWYgKGNsaWNrZWRFbCAhPT0gdGFyZ2V0RWwgJiZcbiAgICAgICAgICAgICF0YXJnZXRFbC5jb250YWlucyhjbGlja2VkRWwpICYmXG4gICAgICAgICAgICAhdGhpcy5fdHJpZ2dlckVsLmNvbnRhaW5zKGNsaWNrZWRFbCkgJiZcbiAgICAgICAgICAgICFpc0lnbm9yZWQgJiZcbiAgICAgICAgICAgIHRoaXMuaXNWaXNpYmxlKCkpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuX2dldFRyaWdnZXJFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnaG92ZXInOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnbW91c2VlbnRlcicsICdjbGljayddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ21vdXNlbGVhdmUnXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAnY2xpY2snOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnY2xpY2snXSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZUV2ZW50czogW10sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgJ25vbmUnOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFtdLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBzaG93RXZlbnRzOiBbJ2NsaWNrJ10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFtdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25Ub2dnbGUodGhpcyk7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuaXNWaXNpYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmlzaWJsZTtcbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgnYmxvY2snKTtcbiAgICAgICAgLy8gRW5hYmxlIHRoZSBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2Uuc2V0T3B0aW9ucyhmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gKF9fYXNzaWduKF9fYXNzaWduKHt9LCBvcHRpb25zKSwgeyBtb2RpZmllcnM6IF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgb3B0aW9ucy5tb2RpZmllcnMsIHRydWUpLCBbXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLCBlbmFibGVkOiB0cnVlIH0sXG4gICAgICAgICAgICBdLCBmYWxzZSkgfSkpOyB9KTtcbiAgICAgICAgdGhpcy5fc2V0dXBDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAvLyBVcGRhdGUgaXRzIHBvc2l0aW9uXG4gICAgICAgIHRoaXMuX3BvcHBlckluc3RhbmNlLnVwZGF0ZSgpO1xuICAgICAgICB0aGlzLl92aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3codGhpcyk7XG4gICAgfTtcbiAgICBEcm9wZG93bi5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LnJlbW92ZSgnYmxvY2snKTtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIC8vIERpc2FibGUgdGhlIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZS5zZXRPcHRpb25zKGZ1bmN0aW9uIChvcHRpb25zKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIG9wdGlvbnMpLCB7IG1vZGlmaWVyczogX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBvcHRpb25zLm1vZGlmaWVycywgdHJ1ZSksIFtcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdldmVudExpc3RlbmVycycsIGVuYWJsZWQ6IGZhbHNlIH0sXG4gICAgICAgICAgICBdLCBmYWxzZSkgfSkpOyB9KTtcbiAgICAgICAgdGhpcy5fdmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZW1vdmVDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSh0aGlzKTtcbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS51cGRhdGVPblNob3cgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3cgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS51cGRhdGVPbkhpZGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkhpZGUgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIERyb3Bkb3duLnByb3RvdHlwZS51cGRhdGVPblRvZ2dsZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uVG9nZ2xlID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gRHJvcGRvd247XG59KCkpO1xuZXhwb3J0IGZ1bmN0aW9uIGluaXREcm9wZG93bnMoKSB7XG4gICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWRyb3Bkb3duLXRvZ2dsZV0nKVxuICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgZHJvcGRvd25JZCA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyb3Bkb3duLXRvZ2dsZScpO1xuICAgICAgICB2YXIgJGRyb3Bkb3duRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkcm9wZG93bklkKTtcbiAgICAgICAgaWYgKCRkcm9wZG93bkVsKSB7XG4gICAgICAgICAgICB2YXIgcGxhY2VtZW50ID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJvcGRvd24tcGxhY2VtZW50Jyk7XG4gICAgICAgICAgICB2YXIgb2Zmc2V0U2tpZGRpbmcgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1kcm9wZG93bi1vZmZzZXQtc2tpZGRpbmcnKTtcbiAgICAgICAgICAgIHZhciBvZmZzZXREaXN0YW5jZSA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyb3Bkb3duLW9mZnNldC1kaXN0YW5jZScpO1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJUeXBlID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJvcGRvd24tdHJpZ2dlcicpO1xuICAgICAgICAgICAgdmFyIGRlbGF5ID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZHJvcGRvd24tZGVsYXknKTtcbiAgICAgICAgICAgIHZhciBpZ25vcmVDbGlja091dHNpZGVDbGFzcyA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRyb3Bkb3duLWlnbm9yZS1jbGljay1vdXRzaWRlLWNsYXNzJyk7XG4gICAgICAgICAgICBuZXcgRHJvcGRvd24oJGRyb3Bkb3duRWwsICR0cmlnZ2VyRWwsIHtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCA/IHBsYWNlbWVudCA6IERlZmF1bHQucGxhY2VtZW50LFxuICAgICAgICAgICAgICAgIHRyaWdnZXJUeXBlOiB0cmlnZ2VyVHlwZVxuICAgICAgICAgICAgICAgICAgICA/IHRyaWdnZXJUeXBlXG4gICAgICAgICAgICAgICAgICAgIDogRGVmYXVsdC50cmlnZ2VyVHlwZSxcbiAgICAgICAgICAgICAgICBvZmZzZXRTa2lkZGluZzogb2Zmc2V0U2tpZGRpbmdcbiAgICAgICAgICAgICAgICAgICAgPyBwYXJzZUludChvZmZzZXRTa2lkZGluZylcbiAgICAgICAgICAgICAgICAgICAgOiBEZWZhdWx0Lm9mZnNldFNraWRkaW5nLFxuICAgICAgICAgICAgICAgIG9mZnNldERpc3RhbmNlOiBvZmZzZXREaXN0YW5jZVxuICAgICAgICAgICAgICAgICAgICA/IHBhcnNlSW50KG9mZnNldERpc3RhbmNlKVxuICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQub2Zmc2V0RGlzdGFuY2UsXG4gICAgICAgICAgICAgICAgZGVsYXk6IGRlbGF5ID8gcGFyc2VJbnQoZGVsYXkpIDogRGVmYXVsdC5kZWxheSxcbiAgICAgICAgICAgICAgICBpZ25vcmVDbGlja091dHNpZGVDbGFzczogaWdub3JlQ2xpY2tPdXRzaWRlQ2xhc3NcbiAgICAgICAgICAgICAgICAgICAgPyBpZ25vcmVDbGlja091dHNpZGVDbGFzc1xuICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQuaWdub3JlQ2xpY2tPdXRzaWRlQ2xhc3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGUgZHJvcGRvd24gZWxlbWVudCB3aXRoIGlkIFxcXCJcIi5jb25jYXQoZHJvcGRvd25JZCwgXCJcXFwiIGRvZXMgbm90IGV4aXN0LiBQbGVhc2UgY2hlY2sgdGhlIGRhdGEtZHJvcGRvd24tdG9nZ2xlIGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuRHJvcGRvd24gPSBEcm9wZG93bjtcbiAgICB3aW5kb3cuaW5pdERyb3Bkb3ducyA9IGluaXREcm9wZG93bnM7XG59XG5leHBvcnQgZGVmYXVsdCBEcm9wZG93bjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiLCJpbXBvcnQgeyBpbml0QWNjb3JkaW9ucyB9IGZyb20gJy4vYWNjb3JkaW9uJztcbmltcG9ydCB7IGluaXRDYXJvdXNlbHMgfSBmcm9tICcuL2Nhcm91c2VsJztcbmltcG9ydCB7IGluaXRDb3B5Q2xpcGJvYXJkcyB9IGZyb20gJy4vY2xpcGJvYXJkJztcbmltcG9ydCB7IGluaXRDb2xsYXBzZXMgfSBmcm9tICcuL2NvbGxhcHNlJztcbmltcG9ydCB7IGluaXREaWFscyB9IGZyb20gJy4vZGlhbCc7XG5pbXBvcnQgeyBpbml0RGlzbWlzc2VzIH0gZnJvbSAnLi9kaXNtaXNzJztcbmltcG9ydCB7IGluaXREcmF3ZXJzIH0gZnJvbSAnLi9kcmF3ZXInO1xuaW1wb3J0IHsgaW5pdERyb3Bkb3ducyB9IGZyb20gJy4vZHJvcGRvd24nO1xuaW1wb3J0IHsgaW5pdElucHV0Q291bnRlcnMgfSBmcm9tICcuL2lucHV0LWNvdW50ZXInO1xuaW1wb3J0IHsgaW5pdE1vZGFscyB9IGZyb20gJy4vbW9kYWwnO1xuaW1wb3J0IHsgaW5pdFBvcG92ZXJzIH0gZnJvbSAnLi9wb3BvdmVyJztcbmltcG9ydCB7IGluaXRUYWJzIH0gZnJvbSAnLi90YWJzJztcbmltcG9ydCB7IGluaXRUb29sdGlwcyB9IGZyb20gJy4vdG9vbHRpcCc7XG5leHBvcnQgZnVuY3Rpb24gaW5pdEZsb3diaXRlKCkge1xuICAgIGluaXRBY2NvcmRpb25zKCk7XG4gICAgaW5pdENvbGxhcHNlcygpO1xuICAgIGluaXRDYXJvdXNlbHMoKTtcbiAgICBpbml0RGlzbWlzc2VzKCk7XG4gICAgaW5pdERyb3Bkb3ducygpO1xuICAgIGluaXRNb2RhbHMoKTtcbiAgICBpbml0RHJhd2VycygpO1xuICAgIGluaXRUYWJzKCk7XG4gICAgaW5pdFRvb2x0aXBzKCk7XG4gICAgaW5pdFBvcG92ZXJzKCk7XG4gICAgaW5pdERpYWxzKCk7XG4gICAgaW5pdElucHV0Q291bnRlcnMoKTtcbiAgICBpbml0Q29weUNsaXBib2FyZHMoKTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5pbml0Rmxvd2JpdGUgPSBpbml0Rmxvd2JpdGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIG1pblZhbHVlOiBudWxsLFxuICAgIG1heFZhbHVlOiBudWxsLFxuICAgIG9uSW5jcmVtZW50OiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgb25EZWNyZW1lbnQ6IGZ1bmN0aW9uICgpIHsgfSxcbn07XG52YXIgRGVmYXVsdEluc3RhbmNlT3B0aW9ucyA9IHtcbiAgICBpZDogbnVsbCxcbiAgICBvdmVycmlkZTogdHJ1ZSxcbn07XG52YXIgSW5wdXRDb3VudGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIElucHV0Q291bnRlcih0YXJnZXRFbCwgaW5jcmVtZW50RWwsIGRlY3JlbWVudEVsLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRhcmdldEVsID09PSB2b2lkIDApIHsgdGFyZ2V0RWwgPSBudWxsOyB9XG4gICAgICAgIGlmIChpbmNyZW1lbnRFbCA9PT0gdm9pZCAwKSB7IGluY3JlbWVudEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAoZGVjcmVtZW50RWwgPT09IHZvaWQgMCkgeyBkZWNyZW1lbnRFbCA9IG51bGw7IH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0gRGVmYXVsdDsgfVxuICAgICAgICBpZiAoaW5zdGFuY2VPcHRpb25zID09PSB2b2lkIDApIHsgaW5zdGFuY2VPcHRpb25zID0gRGVmYXVsdEluc3RhbmNlT3B0aW9uczsgfVxuICAgICAgICB0aGlzLl9pbnN0YW5jZUlkID0gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA/IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgOiB0YXJnZXRFbC5pZDtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwgPSB0YXJnZXRFbDtcbiAgICAgICAgdGhpcy5faW5jcmVtZW50RWwgPSBpbmNyZW1lbnRFbDtcbiAgICAgICAgdGhpcy5fZGVjcmVtZW50RWwgPSBkZWNyZW1lbnRFbDtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBEZWZhdWx0KSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ0lucHV0Q291bnRlcicsIHRoaXMsIHRoaXMuX2luc3RhbmNlSWQsIGluc3RhbmNlT3B0aW9ucy5vdmVycmlkZSk7XG4gICAgfVxuICAgIElucHV0Q291bnRlci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuX3RhcmdldEVsICYmICF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5faW5wdXRIYW5kbGVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgICAgICAgICAvLyBjaGVjayBpZiB0aGUgdmFsdWUgaXMgbnVtZXJpY1xuICAgICAgICAgICAgICAgICAgICBpZiAoIS9eXFxkKiQvLnRlc3QodGFyZ2V0LnZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVnZXggdG8gY2hlY2sgaWYgdGhlIHZhbHVlIGlzIG51bWVyaWNcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IHRhcmdldC52YWx1ZS5yZXBsYWNlKC9bXlxcZF0vZywgJycpOyAvLyBSZW1vdmUgbm9uLW51bWVyaWMgY2hhcmFjdGVyc1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIGNoZWNrIGZvciBtYXggdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLl9vcHRpb25zLm1heFZhbHVlICE9PSBudWxsICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludCh0YXJnZXQudmFsdWUpID4gX3RoaXMuX29wdGlvbnMubWF4VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IF90aGlzLl9vcHRpb25zLm1heFZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgZm9yIG1pbiB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMuX29wdGlvbnMubWluVmFsdWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KHRhcmdldC52YWx1ZSkgPCBfdGhpcy5fb3B0aW9ucy5taW5WYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnZhbHVlID0gX3RoaXMuX29wdGlvbnMubWluVmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLl9pbmNyZW1lbnRDbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaW5jcmVtZW50KCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5fZGVjcmVtZW50Q2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmRlY3JlbWVudCgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lciB0byByZXN0cmljdCBpbnB1dCB0byBudW1lcmljIHZhbHVlcyBvbmx5XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX2lucHV0SGFuZGxlcik7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5jcmVtZW50RWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9pbmNyZW1lbnRFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2luY3JlbWVudENsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fZGVjcmVtZW50RWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kZWNyZW1lbnRFbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2RlY3JlbWVudENsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIElucHV0Q291bnRlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3RhcmdldEVsICYmIHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX2lucHV0SGFuZGxlcik7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5jcmVtZW50RWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9pbmNyZW1lbnRFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2luY3JlbWVudENsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fZGVjcmVtZW50RWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kZWNyZW1lbnRFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2RlY3JlbWVudENsaWNrSGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBJbnB1dENvdW50ZXIucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ0lucHV0Q291bnRlcicsIHRoaXMuX2luc3RhbmNlSWQpO1xuICAgIH07XG4gICAgSW5wdXRDb3VudGVyLnByb3RvdHlwZS5kZXN0cm95QW5kUmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKCk7XG4gICAgfTtcbiAgICBJbnB1dENvdW50ZXIucHJvdG90eXBlLmdldEN1cnJlbnRWYWx1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHRoaXMuX3RhcmdldEVsLnZhbHVlKSB8fCAwO1xuICAgIH07XG4gICAgSW5wdXRDb3VudGVyLnByb3RvdHlwZS5pbmNyZW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIGRvbid0IGluY3JlbWVudCBpZiB0aGUgdmFsdWUgaXMgYWxyZWFkeSBhdCB0aGUgbWF4aW11bSB2YWx1ZVxuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5tYXhWYWx1ZSAhPT0gbnVsbCAmJlxuICAgICAgICAgICAgdGhpcy5nZXRDdXJyZW50VmFsdWUoKSA+PSB0aGlzLl9vcHRpb25zLm1heFZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwudmFsdWUgPSAodGhpcy5nZXRDdXJyZW50VmFsdWUoKSArIDEpLnRvU3RyaW5nKCk7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25JbmNyZW1lbnQodGhpcyk7XG4gICAgfTtcbiAgICBJbnB1dENvdW50ZXIucHJvdG90eXBlLmRlY3JlbWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gZG9uJ3QgZGVjcmVtZW50IGlmIHRoZSB2YWx1ZSBpcyBhbHJlYWR5IGF0IHRoZSBtaW5pbXVtIHZhbHVlXG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLm1pblZhbHVlICE9PSBudWxsICYmXG4gICAgICAgICAgICB0aGlzLmdldEN1cnJlbnRWYWx1ZSgpIDw9IHRoaXMuX29wdGlvbnMubWluVmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl90YXJnZXRFbC52YWx1ZSA9ICh0aGlzLmdldEN1cnJlbnRWYWx1ZSgpIC0gMSkudG9TdHJpbmcoKTtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkRlY3JlbWVudCh0aGlzKTtcbiAgICB9O1xuICAgIElucHV0Q291bnRlci5wcm90b3R5cGUudXBkYXRlT25JbmNyZW1lbnQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkluY3JlbWVudCA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgSW5wdXRDb3VudGVyLnByb3RvdHlwZS51cGRhdGVPbkRlY3JlbWVudCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uRGVjcmVtZW50ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gSW5wdXRDb3VudGVyO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0SW5wdXRDb3VudGVycygpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1pbnB1dC1jb3VudGVyXScpLmZvckVhY2goZnVuY3Rpb24gKCR0YXJnZXRFbCkge1xuICAgICAgICB2YXIgdGFyZ2V0SWQgPSAkdGFyZ2V0RWwuaWQ7XG4gICAgICAgIHZhciAkaW5jcmVtZW50RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1pbnB1dC1jb3VudGVyLWluY3JlbWVudD1cIicgKyB0YXJnZXRJZCArICdcIl0nKTtcbiAgICAgICAgdmFyICRkZWNyZW1lbnRFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWlucHV0LWNvdW50ZXItZGVjcmVtZW50PVwiJyArIHRhcmdldElkICsgJ1wiXScpO1xuICAgICAgICB2YXIgbWluVmFsdWUgPSAkdGFyZ2V0RWwuZ2V0QXR0cmlidXRlKCdkYXRhLWlucHV0LWNvdW50ZXItbWluJyk7XG4gICAgICAgIHZhciBtYXhWYWx1ZSA9ICR0YXJnZXRFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaW5wdXQtY291bnRlci1tYXgnKTtcbiAgICAgICAgLy8gY2hlY2sgaWYgdGhlIHRhcmdldCBlbGVtZW50IGV4aXN0c1xuICAgICAgICBpZiAoJHRhcmdldEVsKSB7XG4gICAgICAgICAgICBpZiAoIWluc3RhbmNlcy5pbnN0YW5jZUV4aXN0cygnSW5wdXRDb3VudGVyJywgJHRhcmdldEVsLmdldEF0dHJpYnV0ZSgnaWQnKSkpIHtcbiAgICAgICAgICAgICAgICBuZXcgSW5wdXRDb3VudGVyKCR0YXJnZXRFbCwgJGluY3JlbWVudEVsID8gJGluY3JlbWVudEVsIDogbnVsbCwgJGRlY3JlbWVudEVsID8gJGRlY3JlbWVudEVsIDogbnVsbCwge1xuICAgICAgICAgICAgICAgICAgICBtaW5WYWx1ZTogbWluVmFsdWUgPyBwYXJzZUludChtaW5WYWx1ZSkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtYXhWYWx1ZTogbWF4VmFsdWUgPyBwYXJzZUludChtYXhWYWx1ZSkgOiBudWxsLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoZSB0YXJnZXQgZWxlbWVudCB3aXRoIGlkIFxcXCJcIi5jb25jYXQodGFyZ2V0SWQsIFwiXFxcIiBkb2VzIG5vdCBleGlzdC4gUGxlYXNlIGNoZWNrIHRoZSBkYXRhLWlucHV0LWNvdW50ZXIgYXR0cmlidXRlLlwiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5JbnB1dENvdW50ZXIgPSBJbnB1dENvdW50ZXI7XG4gICAgd2luZG93LmluaXRJbnB1dENvdW50ZXJzID0gaW5pdElucHV0Q291bnRlcnM7XG59XG5leHBvcnQgZGVmYXVsdCBJbnB1dENvdW50ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCBpbnN0YW5jZXMgZnJvbSAnLi4vLi4vZG9tL2luc3RhbmNlcyc7XG52YXIgRGVmYXVsdCA9IHtcbiAgICBwbGFjZW1lbnQ6ICdjZW50ZXInLFxuICAgIGJhY2tkcm9wQ2xhc3NlczogJ2JnLWdyYXktOTAwLzUwIGRhcms6YmctZ3JheS05MDAvODAgZml4ZWQgaW5zZXQtMCB6LTQwJyxcbiAgICBiYWNrZHJvcDogJ2R5bmFtaWMnLFxuICAgIGNsb3NhYmxlOiB0cnVlLFxuICAgIG9uSGlkZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uU2hvdzogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG9uVG9nZ2xlOiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIE1vZGFsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1vZGFsKHRhcmdldEVsLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRhcmdldEVsID09PSB2b2lkIDApIHsgdGFyZ2V0RWwgPSBudWxsOyB9XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IERlZmF1bHQ7IH1cbiAgICAgICAgaWYgKGluc3RhbmNlT3B0aW9ucyA9PT0gdm9pZCAwKSB7IGluc3RhbmNlT3B0aW9ucyA9IERlZmF1bHRJbnN0YW5jZU9wdGlvbnM7IH1cbiAgICAgICAgdGhpcy5fZXZlbnRMaXN0ZW5lckluc3RhbmNlcyA9IFtdO1xuICAgICAgICB0aGlzLl9pbnN0YW5jZUlkID0gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA/IGluc3RhbmNlT3B0aW9ucy5pZFxuICAgICAgICAgICAgOiB0YXJnZXRFbC5pZDtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwgPSB0YXJnZXRFbDtcbiAgICAgICAgdGhpcy5fb3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBEZWZhdWx0KSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX2lzSGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fYmFja2Ryb3BFbCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBpbnN0YW5jZXMuYWRkSW5zdGFuY2UoJ01vZGFsJywgdGhpcywgdGhpcy5faW5zdGFuY2VJZCwgaW5zdGFuY2VPcHRpb25zLm92ZXJyaWRlKTtcbiAgICB9XG4gICAgTW9kYWwucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl90YXJnZXRFbCAmJiAhdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2dldFBsYWNlbWVudENsYXNzZXMoKS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZChjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZUFsbEV2ZW50TGlzdGVuZXJJbnN0YW5jZXMoKTtcbiAgICAgICAgICAgIHRoaXMuX2Rlc3Ryb3lCYWNrZHJvcEVsKCk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUucmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlcy5yZW1vdmVJbnN0YW5jZSgnTW9kYWwnLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5kZXN0cm95QW5kUmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKCk7XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuX2NyZWF0ZUJhY2tkcm9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmICh0aGlzLl9pc0hpZGRlbikge1xuICAgICAgICAgICAgdmFyIGJhY2tkcm9wRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGJhY2tkcm9wRWwuc2V0QXR0cmlidXRlKCdtb2RhbC1iYWNrZHJvcCcsICcnKTtcbiAgICAgICAgICAgIChfYSA9IGJhY2tkcm9wRWwuY2xhc3NMaXN0KS5hZGQuYXBwbHkoX2EsIHRoaXMuX29wdGlvbnMuYmFja2Ryb3BDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmFwcGVuZChiYWNrZHJvcEVsKTtcbiAgICAgICAgICAgIHRoaXMuX2JhY2tkcm9wRWwgPSBiYWNrZHJvcEVsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuX2Rlc3Ryb3lCYWNrZHJvcEVsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2lzSGlkZGVuKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbbW9kYWwtYmFja2Ryb3BdJykucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5fc2V0dXBNb2RhbENsb3NlRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl9vcHRpb25zLmJhY2tkcm9wID09PSAnZHluYW1pYycpIHtcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrT3V0c2lkZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5faGFuZGxlT3V0c2lkZUNsaWNrKGV2LnRhcmdldCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9jbGlja091dHNpZGVFdmVudExpc3RlbmVyLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9rZXlkb3duRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgaWYgKGV2LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2tleWRvd25FdmVudExpc3RlbmVyLCB0cnVlKTtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5fcmVtb3ZlTW9kYWxDbG9zZUV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5iYWNrZHJvcCA9PT0gJ2R5bmFtaWMnKSB7XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NsaWNrT3V0c2lkZUV2ZW50TGlzdGVuZXIsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2tleWRvd25FdmVudExpc3RlbmVyLCB0cnVlKTtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5faGFuZGxlT3V0c2lkZUNsaWNrID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgICBpZiAodGFyZ2V0ID09PSB0aGlzLl90YXJnZXRFbCB8fFxuICAgICAgICAgICAgKHRhcmdldCA9PT0gdGhpcy5fYmFja2Ryb3BFbCAmJiB0aGlzLmlzVmlzaWJsZSgpKSkge1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5fZ2V0UGxhY2VtZW50Q2xhc3NlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLl9vcHRpb25zLnBsYWNlbWVudCkge1xuICAgICAgICAgICAgLy8gdG9wXG4gICAgICAgICAgICBjYXNlICd0b3AtbGVmdCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsnanVzdGlmeS1zdGFydCcsICdpdGVtcy1zdGFydCddO1xuICAgICAgICAgICAgY2FzZSAndG9wLWNlbnRlcic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsnanVzdGlmeS1jZW50ZXInLCAnaXRlbXMtc3RhcnQnXTtcbiAgICAgICAgICAgIGNhc2UgJ3RvcC1yaWdodCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsnanVzdGlmeS1lbmQnLCAnaXRlbXMtc3RhcnQnXTtcbiAgICAgICAgICAgIC8vIGNlbnRlclxuICAgICAgICAgICAgY2FzZSAnY2VudGVyLWxlZnQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBbJ2p1c3RpZnktc3RhcnQnLCAnaXRlbXMtY2VudGVyJ107XG4gICAgICAgICAgICBjYXNlICdjZW50ZXInOlxuICAgICAgICAgICAgICAgIHJldHVybiBbJ2p1c3RpZnktY2VudGVyJywgJ2l0ZW1zLWNlbnRlciddO1xuICAgICAgICAgICAgY2FzZSAnY2VudGVyLXJpZ2h0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gWydqdXN0aWZ5LWVuZCcsICdpdGVtcy1jZW50ZXInXTtcbiAgICAgICAgICAgIC8vIGJvdHRvbVxuICAgICAgICAgICAgY2FzZSAnYm90dG9tLWxlZnQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBbJ2p1c3RpZnktc3RhcnQnLCAnaXRlbXMtZW5kJ107XG4gICAgICAgICAgICBjYXNlICdib3R0b20tY2VudGVyJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gWydqdXN0aWZ5LWNlbnRlcicsICdpdGVtcy1lbmQnXTtcbiAgICAgICAgICAgIGNhc2UgJ2JvdHRvbS1yaWdodCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsnanVzdGlmeS1lbmQnLCAnaXRlbXMtZW5kJ107XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBbJ2p1c3RpZnktY2VudGVyJywgJ2l0ZW1zLWNlbnRlciddO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5faXNIaWRkZW4pIHtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSh0aGlzKTtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5pc0hpZGRlbikge1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgnZmxleCcpO1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnLCAndHJ1ZScpO1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2RpYWxvZycpO1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWhpZGRlbicpO1xuICAgICAgICAgICAgdGhpcy5fY3JlYXRlQmFja2Ryb3AoKTtcbiAgICAgICAgICAgIHRoaXMuX2lzSGlkZGVuID0gZmFsc2U7XG4gICAgICAgICAgICAvLyBBZGQga2V5Ym9hcmQgZXZlbnQgbGlzdGVuZXIgdG8gdGhlIGRvY3VtZW50XG4gICAgICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5jbG9zYWJsZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3NldHVwTW9kYWxDbG9zZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBwcmV2ZW50IGJvZHkgc2Nyb2xsXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ292ZXJmbG93LWhpZGRlbicpO1xuICAgICAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93KHRoaXMpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNWaXNpYmxlKSB7XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5yZW1vdmUoJ2ZsZXgnKTtcbiAgICAgICAgICAgIHRoaXMuX3RhcmdldEVsLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgICAgICAgICAgdGhpcy5fdGFyZ2V0RWwucmVtb3ZlQXR0cmlidXRlKCdhcmlhLW1vZGFsJyk7XG4gICAgICAgICAgICB0aGlzLl90YXJnZXRFbC5yZW1vdmVBdHRyaWJ1dGUoJ3JvbGUnKTtcbiAgICAgICAgICAgIHRoaXMuX2Rlc3Ryb3lCYWNrZHJvcEVsKCk7XG4gICAgICAgICAgICB0aGlzLl9pc0hpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICAvLyByZS1hcHBseSBib2R5IHNjcm9sbFxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyZmxvdy1oaWRkZW4nKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9vcHRpb25zLmNsb3NhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlTW9kYWxDbG9zZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkhpZGUodGhpcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5pc1Zpc2libGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5faXNIaWRkZW47XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuaXNIaWRkZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0hpZGRlbjtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVySW5zdGFuY2UgPSBmdW5jdGlvbiAoZWxlbWVudCwgdHlwZSwgaGFuZGxlcikge1xuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVySW5zdGFuY2VzLnB1c2goe1xuICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgICAgIHR5cGU6IHR5cGUsXG4gICAgICAgICAgICBoYW5kbGVyOiBoYW5kbGVyLFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIE1vZGFsLnByb3RvdHlwZS5yZW1vdmVBbGxFdmVudExpc3RlbmVySW5zdGFuY2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVySW5zdGFuY2VzLm1hcChmdW5jdGlvbiAoZXZlbnRMaXN0ZW5lckluc3RhbmNlKSB7XG4gICAgICAgICAgICBldmVudExpc3RlbmVySW5zdGFuY2UuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TGlzdGVuZXJJbnN0YW5jZS50eXBlLCBldmVudExpc3RlbmVySW5zdGFuY2UuaGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9ldmVudExpc3RlbmVySW5zdGFuY2VzID0gW107XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUuZ2V0QWxsRXZlbnRMaXN0ZW5lckluc3RhbmNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V2ZW50TGlzdGVuZXJJbnN0YW5jZXM7XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUudXBkYXRlT25TaG93ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUudXBkYXRlT25IaWRlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25IaWRlID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBNb2RhbC5wcm90b3R5cGUudXBkYXRlT25Ub2dnbGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIE1vZGFsO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0TW9kYWxzKCkge1xuICAgIC8vIGluaXRpYXRlIG1vZGFsIGJhc2VkIG9uIGRhdGEtbW9kYWwtdGFyZ2V0XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kYWwtdGFyZ2V0XScpLmZvckVhY2goZnVuY3Rpb24gKCR0cmlnZ2VyRWwpIHtcbiAgICAgICAgdmFyIG1vZGFsSWQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbC10YXJnZXQnKTtcbiAgICAgICAgdmFyICRtb2RhbEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobW9kYWxJZCk7XG4gICAgICAgIGlmICgkbW9kYWxFbCkge1xuICAgICAgICAgICAgdmFyIHBsYWNlbWVudCA9ICRtb2RhbEVsLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbC1wbGFjZW1lbnQnKTtcbiAgICAgICAgICAgIHZhciBiYWNrZHJvcCA9ICRtb2RhbEVsLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbC1iYWNrZHJvcCcpO1xuICAgICAgICAgICAgbmV3IE1vZGFsKCRtb2RhbEVsLCB7XG4gICAgICAgICAgICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQgPyBwbGFjZW1lbnQgOiBEZWZhdWx0LnBsYWNlbWVudCxcbiAgICAgICAgICAgICAgICBiYWNrZHJvcDogYmFja2Ryb3AgPyBiYWNrZHJvcCA6IERlZmF1bHQuYmFja2Ryb3AsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNb2RhbCB3aXRoIGlkIFwiLmNvbmNhdChtb2RhbElkLCBcIiBkb2VzIG5vdCBleGlzdC4gQXJlIHlvdSBzdXJlIHRoYXQgdGhlIGRhdGEtbW9kYWwtdGFyZ2V0IGF0dHJpYnV0ZSBwb2ludHMgdG8gdGhlIGNvcnJlY3QgbW9kYWwgaWQ/LlwiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyB0b2dnbGUgbW9kYWwgdmlzaWJpbGl0eVxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLW1vZGFsLXRvZ2dsZV0nKS5mb3JFYWNoKGZ1bmN0aW9uICgkdHJpZ2dlckVsKSB7XG4gICAgICAgIHZhciBtb2RhbElkID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWwtdG9nZ2xlJyk7XG4gICAgICAgIHZhciAkbW9kYWxFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG1vZGFsSWQpO1xuICAgICAgICBpZiAoJG1vZGFsRWwpIHtcbiAgICAgICAgICAgIHZhciBtb2RhbF8xID0gaW5zdGFuY2VzLmdldEluc3RhbmNlKCdNb2RhbCcsIG1vZGFsSWQpO1xuICAgICAgICAgICAgaWYgKG1vZGFsXzEpIHtcbiAgICAgICAgICAgICAgICB2YXIgdG9nZ2xlTW9kYWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGFsXzEudG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAkdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlTW9kYWwpO1xuICAgICAgICAgICAgICAgIG1vZGFsXzEuYWRkRXZlbnRMaXN0ZW5lckluc3RhbmNlKCR0cmlnZ2VyRWwsICdjbGljaycsIHRvZ2dsZU1vZGFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNb2RhbCB3aXRoIGlkIFwiLmNvbmNhdChtb2RhbElkLCBcIiBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQuIFBsZWFzZSBpbml0aWFsaXplIGl0IHVzaW5nIHRoZSBkYXRhLW1vZGFsLXRhcmdldCBhdHRyaWJ1dGUuXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNb2RhbCB3aXRoIGlkIFwiLmNvbmNhdChtb2RhbElkLCBcIiBkb2VzIG5vdCBleGlzdC4gQXJlIHlvdSBzdXJlIHRoYXQgdGhlIGRhdGEtbW9kYWwtdG9nZ2xlIGF0dHJpYnV0ZSBwb2ludHMgdG8gdGhlIGNvcnJlY3QgbW9kYWwgaWQ/XCIpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8vIHNob3cgbW9kYWwgb24gY2xpY2sgaWYgZXhpc3RzIGJhc2VkIG9uIGlkXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kYWwtc2hvd10nKS5mb3JFYWNoKGZ1bmN0aW9uICgkdHJpZ2dlckVsKSB7XG4gICAgICAgIHZhciBtb2RhbElkID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWwtc2hvdycpO1xuICAgICAgICB2YXIgJG1vZGFsRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtb2RhbElkKTtcbiAgICAgICAgaWYgKCRtb2RhbEVsKSB7XG4gICAgICAgICAgICB2YXIgbW9kYWxfMiA9IGluc3RhbmNlcy5nZXRJbnN0YW5jZSgnTW9kYWwnLCBtb2RhbElkKTtcbiAgICAgICAgICAgIGlmIChtb2RhbF8yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNob3dNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kYWxfMi5zaG93KCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAkdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd01vZGFsKTtcbiAgICAgICAgICAgICAgICBtb2RhbF8yLmFkZEV2ZW50TGlzdGVuZXJJbnN0YW5jZSgkdHJpZ2dlckVsLCAnY2xpY2snLCBzaG93TW9kYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk1vZGFsIHdpdGggaWQgXCIuY29uY2F0KG1vZGFsSWQsIFwiIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZC4gUGxlYXNlIGluaXRpYWxpemUgaXQgdXNpbmcgdGhlIGRhdGEtbW9kYWwtdGFyZ2V0IGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk1vZGFsIHdpdGggaWQgXCIuY29uY2F0KG1vZGFsSWQsIFwiIGRvZXMgbm90IGV4aXN0LiBBcmUgeW91IHN1cmUgdGhhdCB0aGUgZGF0YS1tb2RhbC1zaG93IGF0dHJpYnV0ZSBwb2ludHMgdG8gdGhlIGNvcnJlY3QgbW9kYWwgaWQ/XCIpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIC8vIGhpZGUgbW9kYWwgb24gY2xpY2sgaWYgZXhpc3RzIGJhc2VkIG9uIGlkXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kYWwtaGlkZV0nKS5mb3JFYWNoKGZ1bmN0aW9uICgkdHJpZ2dlckVsKSB7XG4gICAgICAgIHZhciBtb2RhbElkID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWwtaGlkZScpO1xuICAgICAgICB2YXIgJG1vZGFsRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChtb2RhbElkKTtcbiAgICAgICAgaWYgKCRtb2RhbEVsKSB7XG4gICAgICAgICAgICB2YXIgbW9kYWxfMyA9IGluc3RhbmNlcy5nZXRJbnN0YW5jZSgnTW9kYWwnLCBtb2RhbElkKTtcbiAgICAgICAgICAgIGlmIChtb2RhbF8zKSB7XG4gICAgICAgICAgICAgICAgdmFyIGhpZGVNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kYWxfMy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAkdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGlkZU1vZGFsKTtcbiAgICAgICAgICAgICAgICBtb2RhbF8zLmFkZEV2ZW50TGlzdGVuZXJJbnN0YW5jZSgkdHJpZ2dlckVsLCAnY2xpY2snLCBoaWRlTW9kYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk1vZGFsIHdpdGggaWQgXCIuY29uY2F0KG1vZGFsSWQsIFwiIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZC4gUGxlYXNlIGluaXRpYWxpemUgaXQgdXNpbmcgdGhlIGRhdGEtbW9kYWwtdGFyZ2V0IGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk1vZGFsIHdpdGggaWQgXCIuY29uY2F0KG1vZGFsSWQsIFwiIGRvZXMgbm90IGV4aXN0LiBBcmUgeW91IHN1cmUgdGhhdCB0aGUgZGF0YS1tb2RhbC1oaWRlIGF0dHJpYnV0ZSBwb2ludHMgdG8gdGhlIGNvcnJlY3QgbW9kYWwgaWQ/XCIpKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93Lk1vZGFsID0gTW9kYWw7XG4gICAgd2luZG93LmluaXRNb2RhbHMgPSBpbml0TW9kYWxzO1xufVxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20sIHBhY2spIHtcbiAgICBpZiAocGFjayB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAyKSBmb3IgKHZhciBpID0gMCwgbCA9IGZyb20ubGVuZ3RoLCBhcjsgaSA8IGw7IGkrKykge1xuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xuICAgICAgICAgICAgYXJbaV0gPSBmcm9tW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0by5jb25jYXQoYXIgfHwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSkpO1xufTtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvbiAqL1xuaW1wb3J0IHsgY3JlYXRlUG9wcGVyIH0gZnJvbSAnQHBvcHBlcmpzL2NvcmUnO1xuaW1wb3J0IGluc3RhbmNlcyBmcm9tICcuLi8uLi9kb20vaW5zdGFuY2VzJztcbnZhciBEZWZhdWx0ID0ge1xuICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgb2Zmc2V0OiAxMCxcbiAgICB0cmlnZ2VyVHlwZTogJ2hvdmVyJyxcbiAgICBvblNob3c6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvbkhpZGU6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvblRvZ2dsZTogZnVuY3Rpb24gKCkgeyB9LFxufTtcbnZhciBEZWZhdWx0SW5zdGFuY2VPcHRpb25zID0ge1xuICAgIGlkOiBudWxsLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbnZhciBQb3BvdmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBvcG92ZXIodGFyZ2V0RWwsIHRyaWdnZXJFbCwgb3B0aW9ucywgaW5zdGFuY2VPcHRpb25zKSB7XG4gICAgICAgIGlmICh0YXJnZXRFbCA9PT0gdm9pZCAwKSB7IHRhcmdldEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAodHJpZ2dlckVsID09PSB2b2lkIDApIHsgdHJpZ2dlckVsID0gbnVsbDsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgID8gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA6IHRhcmdldEVsLmlkO1xuICAgICAgICB0aGlzLl90YXJnZXRFbCA9IHRhcmdldEVsO1xuICAgICAgICB0aGlzLl90cmlnZ2VyRWwgPSB0cmlnZ2VyRWw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIGluc3RhbmNlcy5hZGRJbnN0YW5jZSgnUG9wb3ZlcicsIHRoaXMsIGluc3RhbmNlT3B0aW9ucy5pZCA/IGluc3RhbmNlT3B0aW9ucy5pZCA6IHRoaXMuX3RhcmdldEVsLmlkLCBpbnN0YW5jZU9wdGlvbnMub3ZlcnJpZGUpO1xuICAgIH1cbiAgICBQb3BvdmVyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fdHJpZ2dlckVsICYmIHRoaXMuX3RhcmdldEVsICYmICF0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5fc2V0dXBFdmVudExpc3RlbmVycygpO1xuICAgICAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2UgPSB0aGlzLl9jcmVhdGVQb3BwZXJJbnN0YW5jZSgpO1xuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBldmVudCBsaXN0ZW5lcnMgYXNzb2NpYXRlZCB3aXRoIHRoZSB0cmlnZ2VyIGVsZW1lbnQgYW5kIHRhcmdldCBlbGVtZW50XG4gICAgICAgICAgICB2YXIgdHJpZ2dlckV2ZW50cyA9IHRoaXMuX2dldFRyaWdnZXJFdmVudHMoKTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudHMuc2hvd0V2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgICAgIF90aGlzLl90cmlnZ2VyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX3Nob3dIYW5kbGVyKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX3Nob3dIYW5kbGVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdHJpZ2dlckV2ZW50cy5oaWRlRXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faGlkZUhhbmRsZXIpO1xuICAgICAgICAgICAgICAgIF90aGlzLl90YXJnZXRFbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faGlkZUhhbmRsZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyByZW1vdmUgZXZlbnQgbGlzdGVuZXJzIGZvciBrZXlkb3duXG4gICAgICAgICAgICB0aGlzLl9yZW1vdmVLZXlkb3duTGlzdGVuZXIoKTtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBldmVudCBsaXN0ZW5lcnMgZm9yIGNsaWNrIG91dHNpZGVcbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZUNsaWNrT3V0c2lkZUxpc3RlbmVyKCk7XG4gICAgICAgICAgICAvLyBkZXN0cm95IHRoZSBQb3BwZXIgaW5zdGFuY2UgaWYgeW91IGhhdmUgb25lIChhc3N1bWluZyB0aGlzLl9wb3BwZXJJbnN0YW5jZSBpcyB0aGUgUG9wcGVyIGluc3RhbmNlKVxuICAgICAgICAgICAgaWYgKHRoaXMuX3BvcHBlckluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUucmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlcy5yZW1vdmVJbnN0YW5jZSgnUG9wb3ZlcicsIHRoaXMuX2luc3RhbmNlSWQpO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUuZGVzdHJveUFuZFJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVJbnN0YW5jZSgpO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUuX3NldHVwRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciB0cmlnZ2VyRXZlbnRzID0gdGhpcy5fZ2V0VHJpZ2dlckV2ZW50cygpO1xuICAgICAgICB0aGlzLl9zaG93SGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIF90aGlzLnNob3coKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faGlkZUhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl90YXJnZXRFbC5tYXRjaGVzKCc6aG92ZXInKSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgfTtcbiAgICAgICAgdHJpZ2dlckV2ZW50cy5zaG93RXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGV2KSB7XG4gICAgICAgICAgICBfdGhpcy5fdHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9zaG93SGFuZGxlcik7XG4gICAgICAgICAgICBfdGhpcy5fdGFyZ2V0RWwuYWRkRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX3Nob3dIYW5kbGVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRyaWdnZXJFdmVudHMuaGlkZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faGlkZUhhbmRsZXIpO1xuICAgICAgICAgICAgX3RoaXMuX3RhcmdldEVsLmFkZEV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9oaWRlSGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUuX2NyZWF0ZVBvcHBlckluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlUG9wcGVyKHRoaXMuX3RyaWdnZXJFbCwgdGhpcy5fdGFyZ2V0RWwsIHtcbiAgICAgICAgICAgIHBsYWNlbWVudDogdGhpcy5fb3B0aW9ucy5wbGFjZW1lbnQsXG4gICAgICAgICAgICBtb2RpZmllcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdvZmZzZXQnLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IFswLCB0aGlzLl9vcHRpb25zLm9mZnNldF0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUuX2dldFRyaWdnZXJFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnaG92ZXInOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnbW91c2VlbnRlcicsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ21vdXNlbGVhdmUnLCAnYmx1ciddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlICdjbGljayc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogWydjbGljaycsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ2ZvY3Vzb3V0JywgJ2JsdXInXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogW10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFtdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnbW91c2VlbnRlcicsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ21vdXNlbGVhdmUnLCAnYmx1ciddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFBvcG92ZXIucHJvdG90eXBlLl9zZXR1cEtleWRvd25MaXN0ZW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fa2V5ZG93bkV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgIGlmIChldi5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9rZXlkb3duRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5fcmVtb3ZlS2V5ZG93bkxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9rZXlkb3duRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5fc2V0dXBDbGlja091dHNpZGVMaXN0ZW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgX3RoaXMuX2hhbmRsZUNsaWNrT3V0c2lkZShldiwgX3RoaXMuX3RhcmdldEVsKTtcbiAgICAgICAgfTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NsaWNrT3V0c2lkZUV2ZW50TGlzdGVuZXIsIHRydWUpO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUuX3JlbW92ZUNsaWNrT3V0c2lkZUxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5faGFuZGxlQ2xpY2tPdXRzaWRlID0gZnVuY3Rpb24gKGV2LCB0YXJnZXRFbCkge1xuICAgICAgICB2YXIgY2xpY2tlZEVsID0gZXYudGFyZ2V0O1xuICAgICAgICBpZiAoY2xpY2tlZEVsICE9PSB0YXJnZXRFbCAmJlxuICAgICAgICAgICAgIXRhcmdldEVsLmNvbnRhaW5zKGNsaWNrZWRFbCkgJiZcbiAgICAgICAgICAgICF0aGlzLl90cmlnZ2VyRWwuY29udGFpbnMoY2xpY2tlZEVsKSAmJlxuICAgICAgICAgICAgdGhpcy5pc1Zpc2libGUoKSkge1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFBvcG92ZXIucHJvdG90eXBlLmlzVmlzaWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Zpc2libGU7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25Ub2dnbGUodGhpcyk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKCdvcGFjaXR5LTAnLCAnaW52aXNpYmxlJyk7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5hZGQoJ29wYWNpdHktMTAwJywgJ3Zpc2libGUnKTtcbiAgICAgICAgLy8gRW5hYmxlIHRoZSBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2Uuc2V0T3B0aW9ucyhmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gKF9fYXNzaWduKF9fYXNzaWduKHt9LCBvcHRpb25zKSwgeyBtb2RpZmllcnM6IF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgb3B0aW9ucy5tb2RpZmllcnMsIHRydWUpLCBbXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLCBlbmFibGVkOiB0cnVlIH0sXG4gICAgICAgICAgICBdLCBmYWxzZSkgfSkpOyB9KTtcbiAgICAgICAgLy8gaGFuZGxlIGNsaWNrIG91dHNpZGVcbiAgICAgICAgdGhpcy5fc2V0dXBDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAvLyBoYW5kbGUgZXNjIGtleWRvd25cbiAgICAgICAgdGhpcy5fc2V0dXBLZXlkb3duTGlzdGVuZXIoKTtcbiAgICAgICAgLy8gVXBkYXRlIGl0cyBwb3NpdGlvblxuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZS51cGRhdGUoKTtcbiAgICAgICAgLy8gc2V0IHZpc2liaWxpdHkgdG8gdHJ1ZVxuICAgICAgICB0aGlzLl92aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3codGhpcyk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKCdvcGFjaXR5LTEwMCcsICd2aXNpYmxlJyk7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5hZGQoJ29wYWNpdHktMCcsICdpbnZpc2libGUnKTtcbiAgICAgICAgLy8gRGlzYWJsZSB0aGUgZXZlbnQgbGlzdGVuZXJzXG4gICAgICAgIHRoaXMuX3BvcHBlckluc3RhbmNlLnNldE9wdGlvbnMoZnVuY3Rpb24gKG9wdGlvbnMpIHsgcmV0dXJuIChfX2Fzc2lnbihfX2Fzc2lnbih7fSwgb3B0aW9ucyksIHsgbW9kaWZpZXJzOiBfX3NwcmVhZEFycmF5KF9fc3ByZWFkQXJyYXkoW10sIG9wdGlvbnMubW9kaWZpZXJzLCB0cnVlKSwgW1xuICAgICAgICAgICAgICAgIHsgbmFtZTogJ2V2ZW50TGlzdGVuZXJzJywgZW5hYmxlZDogZmFsc2UgfSxcbiAgICAgICAgICAgIF0sIGZhbHNlKSB9KSk7IH0pO1xuICAgICAgICAvLyBoYW5kbGUgY2xpY2sgb3V0c2lkZVxuICAgICAgICB0aGlzLl9yZW1vdmVDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAvLyBoYW5kbGUgZXNjIGtleWRvd25cbiAgICAgICAgdGhpcy5fcmVtb3ZlS2V5ZG93bkxpc3RlbmVyKCk7XG4gICAgICAgIC8vIHNldCB2aXNpYmlsaXR5IHRvIGZhbHNlXG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgLy8gY2FsbGJhY2sgZnVuY3Rpb25cbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkhpZGUodGhpcyk7XG4gICAgfTtcbiAgICBQb3BvdmVyLnByb3RvdHlwZS51cGRhdGVPblNob3cgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3cgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIFBvcG92ZXIucHJvdG90eXBlLnVwZGF0ZU9uSGlkZSA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9vcHRpb25zLm9uSGlkZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgUG9wb3Zlci5wcm90b3R5cGUudXBkYXRlT25Ub2dnbGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblRvZ2dsZSA9IGNhbGxiYWNrO1xuICAgIH07XG4gICAgcmV0dXJuIFBvcG92ZXI7XG59KCkpO1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRQb3BvdmVycygpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1wb3BvdmVyLXRhcmdldF0nKS5mb3JFYWNoKGZ1bmN0aW9uICgkdHJpZ2dlckVsKSB7XG4gICAgICAgIHZhciBwb3BvdmVySUQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1wb3BvdmVyLXRhcmdldCcpO1xuICAgICAgICB2YXIgJHBvcG92ZXJFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBvcG92ZXJJRCk7XG4gICAgICAgIGlmICgkcG9wb3ZlckVsKSB7XG4gICAgICAgICAgICB2YXIgdHJpZ2dlclR5cGUgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1wb3BvdmVyLXRyaWdnZXInKTtcbiAgICAgICAgICAgIHZhciBwbGFjZW1lbnQgPSAkdHJpZ2dlckVsLmdldEF0dHJpYnV0ZSgnZGF0YS1wb3BvdmVyLXBsYWNlbWVudCcpO1xuICAgICAgICAgICAgdmFyIG9mZnNldCA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLXBvcG92ZXItb2Zmc2V0Jyk7XG4gICAgICAgICAgICBuZXcgUG9wb3ZlcigkcG9wb3ZlckVsLCAkdHJpZ2dlckVsLCB7XG4gICAgICAgICAgICAgICAgcGxhY2VtZW50OiBwbGFjZW1lbnQgPyBwbGFjZW1lbnQgOiBEZWZhdWx0LnBsYWNlbWVudCxcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IG9mZnNldCA/IHBhcnNlSW50KG9mZnNldCkgOiBEZWZhdWx0Lm9mZnNldCxcbiAgICAgICAgICAgICAgICB0cmlnZ2VyVHlwZTogdHJpZ2dlclR5cGVcbiAgICAgICAgICAgICAgICAgICAgPyB0cmlnZ2VyVHlwZVxuICAgICAgICAgICAgICAgICAgICA6IERlZmF1bHQudHJpZ2dlclR5cGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaGUgcG9wb3ZlciBlbGVtZW50IHdpdGggaWQgXFxcIlwiLmNvbmNhdChwb3BvdmVySUQsIFwiXFxcIiBkb2VzIG5vdCBleGlzdC4gUGxlYXNlIGNoZWNrIHRoZSBkYXRhLXBvcG92ZXItdGFyZ2V0IGF0dHJpYnV0ZS5cIikpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aW5kb3cuUG9wb3ZlciA9IFBvcG92ZXI7XG4gICAgd2luZG93LmluaXRQb3BvdmVycyA9IGluaXRQb3BvdmVycztcbn1cbmV4cG9ydCBkZWZhdWx0IFBvcG92ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmZhY2UuanMubWFwIiwiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbmltcG9ydCBpbnN0YW5jZXMgZnJvbSAnLi4vLi4vZG9tL2luc3RhbmNlcyc7XG52YXIgRGVmYXVsdCA9IHtcbiAgICBkZWZhdWx0VGFiSWQ6IG51bGwsXG4gICAgYWN0aXZlQ2xhc3NlczogJ3RleHQtYmx1ZS02MDAgaG92ZXI6dGV4dC1ibHVlLTYwMCBkYXJrOnRleHQtYmx1ZS01MDAgZGFyazpob3Zlcjp0ZXh0LWJsdWUtNTAwIGJvcmRlci1ibHVlLTYwMCBkYXJrOmJvcmRlci1ibHVlLTUwMCcsXG4gICAgaW5hY3RpdmVDbGFzc2VzOiAnZGFyazpib3JkZXItdHJhbnNwYXJlbnQgdGV4dC1ncmF5LTUwMCBob3Zlcjp0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTQwMCBib3JkZXItZ3JheS0xMDAgaG92ZXI6Ym9yZGVyLWdyYXktMzAwIGRhcms6Ym9yZGVyLWdyYXktNzAwIGRhcms6aG92ZXI6dGV4dC1ncmF5LTMwMCcsXG4gICAgb25TaG93OiBmdW5jdGlvbiAoKSB7IH0sXG59O1xudmFyIERlZmF1bHRJbnN0YW5jZU9wdGlvbnMgPSB7XG4gICAgaWQ6IG51bGwsXG4gICAgb3ZlcnJpZGU6IHRydWUsXG59O1xudmFyIFRhYnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGFicyh0YWJzRWwsIGl0ZW1zLCBvcHRpb25zLCBpbnN0YW5jZU9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHRhYnNFbCA9PT0gdm9pZCAwKSB7IHRhYnNFbCA9IG51bGw7IH1cbiAgICAgICAgaWYgKGl0ZW1zID09PSB2b2lkIDApIHsgaXRlbXMgPSBbXTsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWQgPyBpbnN0YW5jZU9wdGlvbnMuaWQgOiB0YWJzRWwuaWQ7XG4gICAgICAgIHRoaXMuX3RhYnNFbCA9IHRhYnNFbDtcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICAgICAgdGhpcy5fYWN0aXZlVGFiID0gb3B0aW9ucyA/IHRoaXMuZ2V0VGFiKG9wdGlvbnMuZGVmYXVsdFRhYklkKSA6IG51bGw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgaW5zdGFuY2VzLmFkZEluc3RhbmNlKCdUYWJzJywgdGhpcywgdGhpcy5fdGFic0VsLmlkLCB0cnVlKTtcbiAgICAgICAgaW5zdGFuY2VzLmFkZEluc3RhbmNlKCdUYWJzJywgdGhpcywgdGhpcy5faW5zdGFuY2VJZCwgaW5zdGFuY2VPcHRpb25zLm92ZXJyaWRlKTtcbiAgICB9XG4gICAgVGFicy5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuX2l0ZW1zLmxlbmd0aCAmJiAhdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIC8vIHNldCB0aGUgZmlyc3QgdGFiIGFzIGFjdGl2ZSBpZiBub3Qgc2V0IGJ5IGV4cGxpY2l0bHlcbiAgICAgICAgICAgIGlmICghdGhpcy5fYWN0aXZlVGFiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRBY3RpdmVUYWIodGhpcy5faXRlbXNbMF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gZm9yY2Ugc2hvdyB0aGUgZmlyc3QgZGVmYXVsdCB0YWJcbiAgICAgICAgICAgIHRoaXMuc2hvdyh0aGlzLl9hY3RpdmVUYWIuaWQsIHRydWUpO1xuICAgICAgICAgICAgLy8gc2hvdyB0YWIgY29udGVudCBiYXNlZCBvbiBjbGlja1xuICAgICAgICAgICAgdGhpcy5faXRlbXMubWFwKGZ1bmN0aW9uICh0YWIpIHtcbiAgICAgICAgICAgICAgICB0YWIudHJpZ2dlckVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNob3codGFiLmlkKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRhYnMucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgaW5zdGFuY2VzLnJlbW92ZUluc3RhbmNlKCdUYWJzJywgdGhpcy5faW5zdGFuY2VJZCk7XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS5kZXN0cm95QW5kUmVtb3ZlSW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKCk7XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS5nZXRBY3RpdmVUYWIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hY3RpdmVUYWI7XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS5zZXRBY3RpdmVUYWIgPSBmdW5jdGlvbiAodGFiKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZVRhYiA9IHRhYjtcbiAgICB9O1xuICAgIFRhYnMucHJvdG90eXBlLmdldFRhYiA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXRlbXMuZmlsdGVyKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmlkID09PSBpZDsgfSlbMF07XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKGlkLCBmb3JjZVNob3cpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKGZvcmNlU2hvdyA9PT0gdm9pZCAwKSB7IGZvcmNlU2hvdyA9IGZhbHNlOyB9XG4gICAgICAgIHZhciB0YWIgPSB0aGlzLmdldFRhYihpZCk7XG4gICAgICAgIC8vIGRvbid0IGRvIGFueXRoaW5nIGlmIGFscmVhZHkgYWN0aXZlXG4gICAgICAgIGlmICh0YWIgPT09IHRoaXMuX2FjdGl2ZVRhYiAmJiAhZm9yY2VTaG93KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gaGlkZSBvdGhlciB0YWJzXG4gICAgICAgIHRoaXMuX2l0ZW1zLm1hcChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGlmICh0ICE9PSB0YWIpIHtcbiAgICAgICAgICAgICAgICAoX2EgPSB0LnRyaWdnZXJFbC5jbGFzc0xpc3QpLnJlbW92ZS5hcHBseShfYSwgX3RoaXMuX29wdGlvbnMuYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgICAgICAgICAoX2IgPSB0LnRyaWdnZXJFbC5jbGFzc0xpc3QpLmFkZC5hcHBseShfYiwgX3RoaXMuX29wdGlvbnMuaW5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAgICAgICAgIHQudGFyZ2V0RWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgdC50cmlnZ2VyRWwuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgJ2ZhbHNlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBzaG93IGFjdGl2ZSB0YWJcbiAgICAgICAgKF9hID0gdGFiLnRyaWdnZXJFbC5jbGFzc0xpc3QpLmFkZC5hcHBseShfYSwgdGhpcy5fb3B0aW9ucy5hY3RpdmVDbGFzc2VzLnNwbGl0KCcgJykpO1xuICAgICAgICAoX2IgPSB0YWIudHJpZ2dlckVsLmNsYXNzTGlzdCkucmVtb3ZlLmFwcGx5KF9iLCB0aGlzLl9vcHRpb25zLmluYWN0aXZlQ2xhc3Nlcy5zcGxpdCgnICcpKTtcbiAgICAgICAgdGFiLnRyaWdnZXJFbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtc2VsZWN0ZWQnLCAndHJ1ZScpO1xuICAgICAgICB0YWIudGFyZ2V0RWwuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgIHRoaXMuc2V0QWN0aXZlVGFiKHRhYik7XG4gICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93KHRoaXMsIHRhYik7XG4gICAgfTtcbiAgICBUYWJzLnByb3RvdHlwZS51cGRhdGVPblNob3cgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vblNob3cgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIHJldHVybiBUYWJzO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0VGFicygpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS10YWJzLXRvZ2dsZV0nKS5mb3JFYWNoKGZ1bmN0aW9uICgkcGFyZW50RWwpIHtcbiAgICAgICAgdmFyIHRhYkl0ZW1zID0gW107XG4gICAgICAgIHZhciBhY3RpdmVDbGFzc2VzID0gJHBhcmVudEVsLmdldEF0dHJpYnV0ZSgnZGF0YS10YWJzLWFjdGl2ZS1jbGFzc2VzJyk7XG4gICAgICAgIHZhciBpbmFjdGl2ZUNsYXNzZXMgPSAkcGFyZW50RWwuZ2V0QXR0cmlidXRlKCdkYXRhLXRhYnMtaW5hY3RpdmUtY2xhc3NlcycpO1xuICAgICAgICB2YXIgZGVmYXVsdFRhYklkID0gbnVsbDtcbiAgICAgICAgJHBhcmVudEVsXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbCgnW3JvbGU9XCJ0YWJcIl0nKVxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKCR0cmlnZ2VyRWwpIHtcbiAgICAgICAgICAgIHZhciBpc0FjdGl2ZSA9ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJykgPT09ICd0cnVlJztcbiAgICAgICAgICAgIHZhciB0YWIgPSB7XG4gICAgICAgICAgICAgICAgaWQ6ICR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLXRhYnMtdGFyZ2V0JyksXG4gICAgICAgICAgICAgICAgdHJpZ2dlckVsOiAkdHJpZ2dlckVsLFxuICAgICAgICAgICAgICAgIHRhcmdldEVsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCR0cmlnZ2VyRWwuZ2V0QXR0cmlidXRlKCdkYXRhLXRhYnMtdGFyZ2V0JykpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRhYkl0ZW1zLnB1c2godGFiKTtcbiAgICAgICAgICAgIGlmIChpc0FjdGl2ZSkge1xuICAgICAgICAgICAgICAgIGRlZmF1bHRUYWJJZCA9IHRhYi5pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIG5ldyBUYWJzKCRwYXJlbnRFbCwgdGFiSXRlbXMsIHtcbiAgICAgICAgICAgIGRlZmF1bHRUYWJJZDogZGVmYXVsdFRhYklkLFxuICAgICAgICAgICAgYWN0aXZlQ2xhc3NlczogYWN0aXZlQ2xhc3Nlc1xuICAgICAgICAgICAgICAgID8gYWN0aXZlQ2xhc3Nlc1xuICAgICAgICAgICAgICAgIDogRGVmYXVsdC5hY3RpdmVDbGFzc2VzLFxuICAgICAgICAgICAgaW5hY3RpdmVDbGFzc2VzOiBpbmFjdGl2ZUNsYXNzZXNcbiAgICAgICAgICAgICAgICA/IGluYWN0aXZlQ2xhc3Nlc1xuICAgICAgICAgICAgICAgIDogRGVmYXVsdC5pbmFjdGl2ZUNsYXNzZXMsXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LlRhYnMgPSBUYWJzO1xuICAgIHdpbmRvdy5pbml0VGFicyA9IGluaXRUYWJzO1xufVxuZXhwb3J0IGRlZmF1bHQgVGFicztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uICovXG5pbXBvcnQgeyBjcmVhdGVQb3BwZXIgfSBmcm9tICdAcG9wcGVyanMvY29yZSc7XG5pbXBvcnQgaW5zdGFuY2VzIGZyb20gJy4uLy4uL2RvbS9pbnN0YW5jZXMnO1xudmFyIERlZmF1bHQgPSB7XG4gICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICB0cmlnZ2VyVHlwZTogJ2hvdmVyJyxcbiAgICBvblNob3c6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvbkhpZGU6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBvblRvZ2dsZTogZnVuY3Rpb24gKCkgeyB9LFxufTtcbnZhciBEZWZhdWx0SW5zdGFuY2VPcHRpb25zID0ge1xuICAgIGlkOiBudWxsLFxuICAgIG92ZXJyaWRlOiB0cnVlLFxufTtcbnZhciBUb29sdGlwID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRvb2x0aXAodGFyZ2V0RWwsIHRyaWdnZXJFbCwgb3B0aW9ucywgaW5zdGFuY2VPcHRpb25zKSB7XG4gICAgICAgIGlmICh0YXJnZXRFbCA9PT0gdm9pZCAwKSB7IHRhcmdldEVsID0gbnVsbDsgfVxuICAgICAgICBpZiAodHJpZ2dlckVsID09PSB2b2lkIDApIHsgdHJpZ2dlckVsID0gbnVsbDsgfVxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBEZWZhdWx0OyB9XG4gICAgICAgIGlmIChpbnN0YW5jZU9wdGlvbnMgPT09IHZvaWQgMCkgeyBpbnN0YW5jZU9wdGlvbnMgPSBEZWZhdWx0SW5zdGFuY2VPcHRpb25zOyB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlSWQgPSBpbnN0YW5jZU9wdGlvbnMuaWRcbiAgICAgICAgICAgID8gaW5zdGFuY2VPcHRpb25zLmlkXG4gICAgICAgICAgICA6IHRhcmdldEVsLmlkO1xuICAgICAgICB0aGlzLl90YXJnZXRFbCA9IHRhcmdldEVsO1xuICAgICAgICB0aGlzLl90cmlnZ2VyRWwgPSB0cmlnZ2VyRWw7XG4gICAgICAgIHRoaXMuX29wdGlvbnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgRGVmYXVsdCksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIGluc3RhbmNlcy5hZGRJbnN0YW5jZSgnVG9vbHRpcCcsIHRoaXMsIHRoaXMuX2luc3RhbmNlSWQsIGluc3RhbmNlT3B0aW9ucy5vdmVycmlkZSk7XG4gICAgfVxuICAgIFRvb2x0aXAucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl90cmlnZ2VyRWwgJiYgdGhpcy5fdGFyZ2V0RWwgJiYgIXRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl9zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZSA9IHRoaXMuX2NyZWF0ZVBvcHBlckluc3RhbmNlKCk7XG4gICAgICAgICAgICB0aGlzLl9pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgLy8gcmVtb3ZlIGV2ZW50IGxpc3RlbmVycyBhc3NvY2lhdGVkIHdpdGggdGhlIHRyaWdnZXIgZWxlbWVudFxuICAgICAgICAgICAgdmFyIHRyaWdnZXJFdmVudHMgPSB0aGlzLl9nZXRUcmlnZ2VyRXZlbnRzKCk7XG4gICAgICAgICAgICB0cmlnZ2VyRXZlbnRzLnNob3dFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fdHJpZ2dlckVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXYsIF90aGlzLl9zaG93SGFuZGxlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRyaWdnZXJFdmVudHMuaGlkZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgICAgIF90aGlzLl90cmlnZ2VyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX2hpZGVIYW5kbGVyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gcmVtb3ZlIGV2ZW50IGxpc3RlbmVycyBmb3Iga2V5ZG93blxuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlS2V5ZG93bkxpc3RlbmVyKCk7XG4gICAgICAgICAgICAvLyByZW1vdmUgZXZlbnQgbGlzdGVuZXJzIGZvciBjbGljayBvdXRzaWRlXG4gICAgICAgICAgICB0aGlzLl9yZW1vdmVDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAgICAgLy8gZGVzdHJveSB0aGUgUG9wcGVyIGluc3RhbmNlIGlmIHlvdSBoYXZlIG9uZSAoYXNzdW1pbmcgdGhpcy5fcG9wcGVySW5zdGFuY2UgaXMgdGhlIFBvcHBlciBpbnN0YW5jZSlcbiAgICAgICAgICAgIGlmICh0aGlzLl9wb3BwZXJJbnN0YW5jZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BvcHBlckluc3RhbmNlLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2luaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLnJlbW92ZUluc3RhbmNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpbnN0YW5jZXMucmVtb3ZlSW5zdGFuY2UoJ1Rvb2x0aXAnLCB0aGlzLl9pbnN0YW5jZUlkKTtcbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLmRlc3Ryb3lBbmRSZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMucmVtb3ZlSW5zdGFuY2UoKTtcbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLl9zZXR1cEV2ZW50TGlzdGVuZXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgdHJpZ2dlckV2ZW50cyA9IHRoaXMuX2dldFRyaWdnZXJFdmVudHMoKTtcbiAgICAgICAgdGhpcy5fc2hvd0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5zaG93KCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2hpZGVIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuaGlkZSgpO1xuICAgICAgICB9O1xuICAgICAgICB0cmlnZ2VyRXZlbnRzLnNob3dFdmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgIF90aGlzLl90cmlnZ2VyRWwuYWRkRXZlbnRMaXN0ZW5lcihldiwgX3RoaXMuX3Nob3dIYW5kbGVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRyaWdnZXJFdmVudHMuaGlkZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgX3RoaXMuX3RyaWdnZXJFbC5hZGRFdmVudExpc3RlbmVyKGV2LCBfdGhpcy5faGlkZUhhbmRsZXIpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLl9jcmVhdGVQb3BwZXJJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVBvcHBlcih0aGlzLl90cmlnZ2VyRWwsIHRoaXMuX3RhcmdldEVsLCB7XG4gICAgICAgICAgICBwbGFjZW1lbnQ6IHRoaXMuX29wdGlvbnMucGxhY2VtZW50LFxuICAgICAgICAgICAgbW9kaWZpZXJzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnb2Zmc2V0JyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiBbMCwgOF0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX2dldFRyaWdnZXJFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5fb3B0aW9ucy50cmlnZ2VyVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnaG92ZXInOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnbW91c2VlbnRlcicsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ21vdXNlbGVhdmUnLCAnYmx1ciddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlICdjbGljayc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogWydjbGljaycsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ2ZvY3Vzb3V0JywgJ2JsdXInXSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0V2ZW50czogW10sXG4gICAgICAgICAgICAgICAgICAgIGhpZGVFdmVudHM6IFtdLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFdmVudHM6IFsnbW91c2VlbnRlcicsICdmb2N1cyddLFxuICAgICAgICAgICAgICAgICAgICBoaWRlRXZlbnRzOiBbJ21vdXNlbGVhdmUnLCAnYmx1ciddLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLl9zZXR1cEtleWRvd25MaXN0ZW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fa2V5ZG93bkV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICAgIGlmIChldi5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9rZXlkb3duRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS5fcmVtb3ZlS2V5ZG93bkxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9rZXlkb3duRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS5fc2V0dXBDbGlja091dHNpZGVMaXN0ZW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldikge1xuICAgICAgICAgICAgX3RoaXMuX2hhbmRsZUNsaWNrT3V0c2lkZShldiwgX3RoaXMuX3RhcmdldEVsKTtcbiAgICAgICAgfTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NsaWNrT3V0c2lkZUV2ZW50TGlzdGVuZXIsIHRydWUpO1xuICAgIH07XG4gICAgVG9vbHRpcC5wcm90b3R5cGUuX3JlbW92ZUNsaWNrT3V0c2lkZUxpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2xpY2tPdXRzaWRlRXZlbnRMaXN0ZW5lciwgdHJ1ZSk7XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS5faGFuZGxlQ2xpY2tPdXRzaWRlID0gZnVuY3Rpb24gKGV2LCB0YXJnZXRFbCkge1xuICAgICAgICB2YXIgY2xpY2tlZEVsID0gZXYudGFyZ2V0O1xuICAgICAgICBpZiAoY2xpY2tlZEVsICE9PSB0YXJnZXRFbCAmJlxuICAgICAgICAgICAgIXRhcmdldEVsLmNvbnRhaW5zKGNsaWNrZWRFbCkgJiZcbiAgICAgICAgICAgICF0aGlzLl90cmlnZ2VyRWwuY29udGFpbnMoY2xpY2tlZEVsKSAmJlxuICAgICAgICAgICAgdGhpcy5pc1Zpc2libGUoKSkge1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLmlzVmlzaWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Zpc2libGU7XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QucmVtb3ZlKCdvcGFjaXR5LTAnLCAnaW52aXNpYmxlJyk7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsLmNsYXNzTGlzdC5hZGQoJ29wYWNpdHktMTAwJywgJ3Zpc2libGUnKTtcbiAgICAgICAgLy8gRW5hYmxlIHRoZSBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgdGhpcy5fcG9wcGVySW5zdGFuY2Uuc2V0T3B0aW9ucyhmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gKF9fYXNzaWduKF9fYXNzaWduKHt9LCBvcHRpb25zKSwgeyBtb2RpZmllcnM6IF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgb3B0aW9ucy5tb2RpZmllcnMsIHRydWUpLCBbXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnZXZlbnRMaXN0ZW5lcnMnLCBlbmFibGVkOiB0cnVlIH0sXG4gICAgICAgICAgICBdLCBmYWxzZSkgfSkpOyB9KTtcbiAgICAgICAgLy8gaGFuZGxlIGNsaWNrIG91dHNpZGVcbiAgICAgICAgdGhpcy5fc2V0dXBDbGlja091dHNpZGVMaXN0ZW5lcigpO1xuICAgICAgICAvLyBoYW5kbGUgZXNjIGtleWRvd25cbiAgICAgICAgdGhpcy5fc2V0dXBLZXlkb3duTGlzdGVuZXIoKTtcbiAgICAgICAgLy8gVXBkYXRlIGl0cyBwb3NpdGlvblxuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZS51cGRhdGUoKTtcbiAgICAgICAgLy8gc2V0IHZpc2liaWxpdHlcbiAgICAgICAgdGhpcy5fdmlzaWJsZSA9IHRydWU7XG4gICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93KHRoaXMpO1xuICAgIH07XG4gICAgVG9vbHRpcC5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWwuY2xhc3NMaXN0LnJlbW92ZSgnb3BhY2l0eS0xMDAnLCAndmlzaWJsZScpO1xuICAgICAgICB0aGlzLl90YXJnZXRFbC5jbGFzc0xpc3QuYWRkKCdvcGFjaXR5LTAnLCAnaW52aXNpYmxlJyk7XG4gICAgICAgIC8vIERpc2FibGUgdGhlIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgICB0aGlzLl9wb3BwZXJJbnN0YW5jZS5zZXRPcHRpb25zKGZ1bmN0aW9uIChvcHRpb25zKSB7IHJldHVybiAoX19hc3NpZ24oX19hc3NpZ24oe30sIG9wdGlvbnMpLCB7IG1vZGlmaWVyczogX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBvcHRpb25zLm1vZGlmaWVycywgdHJ1ZSksIFtcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdldmVudExpc3RlbmVycycsIGVuYWJsZWQ6IGZhbHNlIH0sXG4gICAgICAgICAgICBdLCBmYWxzZSkgfSkpOyB9KTtcbiAgICAgICAgLy8gaGFuZGxlIGNsaWNrIG91dHNpZGVcbiAgICAgICAgdGhpcy5fcmVtb3ZlQ2xpY2tPdXRzaWRlTGlzdGVuZXIoKTtcbiAgICAgICAgLy8gaGFuZGxlIGVzYyBrZXlkb3duXG4gICAgICAgIHRoaXMuX3JlbW92ZUtleWRvd25MaXN0ZW5lcigpO1xuICAgICAgICAvLyBzZXQgdmlzaWJpbGl0eVxuICAgICAgICB0aGlzLl92aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgICAgIHRoaXMuX29wdGlvbnMub25IaWRlKHRoaXMpO1xuICAgIH07XG4gICAgVG9vbHRpcC5wcm90b3R5cGUudXBkYXRlT25TaG93ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25TaG93ID0gY2FsbGJhY2s7XG4gICAgfTtcbiAgICBUb29sdGlwLnByb3RvdHlwZS51cGRhdGVPbkhpZGUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fb3B0aW9ucy5vbkhpZGUgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIFRvb2x0aXAucHJvdG90eXBlLnVwZGF0ZU9uVG9nZ2xlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX29wdGlvbnMub25Ub2dnbGUgPSBjYWxsYmFjaztcbiAgICB9O1xuICAgIHJldHVybiBUb29sdGlwO1xufSgpKTtcbmV4cG9ydCBmdW5jdGlvbiBpbml0VG9vbHRpcHMoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdG9vbHRpcC10YXJnZXRdJykuZm9yRWFjaChmdW5jdGlvbiAoJHRyaWdnZXJFbCkge1xuICAgICAgICB2YXIgdG9vbHRpcElkID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdG9vbHRpcC10YXJnZXQnKTtcbiAgICAgICAgdmFyICR0b29sdGlwRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0b29sdGlwSWQpO1xuICAgICAgICBpZiAoJHRvb2x0aXBFbCkge1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJUeXBlID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdG9vbHRpcC10cmlnZ2VyJyk7XG4gICAgICAgICAgICB2YXIgcGxhY2VtZW50ID0gJHRyaWdnZXJFbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdG9vbHRpcC1wbGFjZW1lbnQnKTtcbiAgICAgICAgICAgIG5ldyBUb29sdGlwKCR0b29sdGlwRWwsICR0cmlnZ2VyRWwsIHtcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCA/IHBsYWNlbWVudCA6IERlZmF1bHQucGxhY2VtZW50LFxuICAgICAgICAgICAgICAgIHRyaWdnZXJUeXBlOiB0cmlnZ2VyVHlwZVxuICAgICAgICAgICAgICAgICAgICA/IHRyaWdnZXJUeXBlXG4gICAgICAgICAgICAgICAgICAgIDogRGVmYXVsdC50cmlnZ2VyVHlwZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlRoZSB0b29sdGlwIGVsZW1lbnQgd2l0aCBpZCBcXFwiXCIuY29uY2F0KHRvb2x0aXBJZCwgXCJcXFwiIGRvZXMgbm90IGV4aXN0LiBQbGVhc2UgY2hlY2sgdGhlIGRhdGEtdG9vbHRpcC10YXJnZXQgYXR0cmlidXRlLlwiKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIHdpbmRvdy5Ub29sdGlwID0gVG9vbHRpcDtcbiAgICB3aW5kb3cuaW5pdFRvb2x0aXBzID0gaW5pdFRvb2x0aXBzO1xufVxuZXhwb3J0IGRlZmF1bHQgVG9vbHRpcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZS5qcy5tYXAiLCJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiLCJ2YXIgRXZlbnRzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEV2ZW50cyhldmVudFR5cGUsIGV2ZW50RnVuY3Rpb25zKSB7XG4gICAgICAgIGlmIChldmVudEZ1bmN0aW9ucyA9PT0gdm9pZCAwKSB7IGV2ZW50RnVuY3Rpb25zID0gW107IH1cbiAgICAgICAgdGhpcy5fZXZlbnRUeXBlID0gZXZlbnRUeXBlO1xuICAgICAgICB0aGlzLl9ldmVudEZ1bmN0aW9ucyA9IGV2ZW50RnVuY3Rpb25zO1xuICAgIH1cbiAgICBFdmVudHMucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuX2V2ZW50RnVuY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50RnVuY3Rpb24pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKF90aGlzLl9ldmVudFR5cGUsIGV2ZW50RnVuY3Rpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBFdmVudHM7XG59KCkpO1xuZXhwb3J0IGRlZmF1bHQgRXZlbnRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCIsInZhciBJbnN0YW5jZXMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSW5zdGFuY2VzKCkge1xuICAgICAgICB0aGlzLl9pbnN0YW5jZXMgPSB7XG4gICAgICAgICAgICBBY2NvcmRpb246IHt9LFxuICAgICAgICAgICAgQ2Fyb3VzZWw6IHt9LFxuICAgICAgICAgICAgQ29sbGFwc2U6IHt9LFxuICAgICAgICAgICAgRGlhbDoge30sXG4gICAgICAgICAgICBEaXNtaXNzOiB7fSxcbiAgICAgICAgICAgIERyYXdlcjoge30sXG4gICAgICAgICAgICBEcm9wZG93bjoge30sXG4gICAgICAgICAgICBNb2RhbDoge30sXG4gICAgICAgICAgICBQb3BvdmVyOiB7fSxcbiAgICAgICAgICAgIFRhYnM6IHt9LFxuICAgICAgICAgICAgVG9vbHRpcDoge30sXG4gICAgICAgICAgICBJbnB1dENvdW50ZXI6IHt9LFxuICAgICAgICAgICAgQ29weUNsaXBib2FyZDoge30sXG4gICAgICAgIH07XG4gICAgfVxuICAgIEluc3RhbmNlcy5wcm90b3R5cGUuYWRkSW5zdGFuY2UgPSBmdW5jdGlvbiAoY29tcG9uZW50LCBpbnN0YW5jZSwgaWQsIG92ZXJyaWRlKSB7XG4gICAgICAgIGlmIChvdmVycmlkZSA9PT0gdm9pZCAwKSB7IG92ZXJyaWRlID0gZmFsc2U7IH1cbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRmxvd2JpdGU6IENvbXBvbmVudCBcIi5jb25jYXQoY29tcG9uZW50LCBcIiBkb2VzIG5vdCBleGlzdC5cIikpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XVtpZF0gJiYgIW92ZXJyaWRlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJGbG93Yml0ZTogSW5zdGFuY2Ugd2l0aCBJRCBcIi5jb25jYXQoaWQsIFwiIGFscmVhZHkgZXhpc3RzLlwiKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG92ZXJyaWRlICYmIHRoaXMuX2luc3RhbmNlc1tjb21wb25lbnRdW2lkXSkge1xuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2VzW2NvbXBvbmVudF1baWRdLmRlc3Ryb3lBbmRSZW1vdmVJbnN0YW5jZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlc1tjb21wb25lbnRdW2lkID8gaWQgOiB0aGlzLl9nZW5lcmF0ZVJhbmRvbUlkKCldID1cbiAgICAgICAgICAgIGluc3RhbmNlO1xuICAgIH07XG4gICAgSW5zdGFuY2VzLnByb3RvdHlwZS5nZXRBbGxJbnN0YW5jZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZXM7XG4gICAgfTtcbiAgICBJbnN0YW5jZXMucHJvdG90eXBlLmdldEluc3RhbmNlcyA9IGZ1bmN0aW9uIChjb21wb25lbnQpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRmxvd2JpdGU6IENvbXBvbmVudCBcIi5jb25jYXQoY29tcG9uZW50LCBcIiBkb2VzIG5vdCBleGlzdC5cIikpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XTtcbiAgICB9O1xuICAgIEluc3RhbmNlcy5wcm90b3R5cGUuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoY29tcG9uZW50LCBpZCkge1xuICAgICAgICBpZiAoIXRoaXMuX2NvbXBvbmVudEFuZEluc3RhbmNlQ2hlY2soY29tcG9uZW50LCBpZCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlc1tjb21wb25lbnRdW2lkXSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRmxvd2JpdGU6IEluc3RhbmNlIHdpdGggSUQgXCIuY29uY2F0KGlkLCBcIiBkb2VzIG5vdCBleGlzdC5cIikpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XVtpZF07XG4gICAgfTtcbiAgICBJbnN0YW5jZXMucHJvdG90eXBlLmRlc3Ryb3lBbmRSZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uIChjb21wb25lbnQsIGlkKSB7XG4gICAgICAgIGlmICghdGhpcy5fY29tcG9uZW50QW5kSW5zdGFuY2VDaGVjayhjb21wb25lbnQsIGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGVzdHJveUluc3RhbmNlT2JqZWN0KGNvbXBvbmVudCwgaWQpO1xuICAgICAgICB0aGlzLnJlbW92ZUluc3RhbmNlKGNvbXBvbmVudCwgaWQpO1xuICAgIH07XG4gICAgSW5zdGFuY2VzLnByb3RvdHlwZS5yZW1vdmVJbnN0YW5jZSA9IGZ1bmN0aW9uIChjb21wb25lbnQsIGlkKSB7XG4gICAgICAgIGlmICghdGhpcy5fY29tcG9uZW50QW5kSW5zdGFuY2VDaGVjayhjb21wb25lbnQsIGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSB0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XVtpZF07XG4gICAgfTtcbiAgICBJbnN0YW5jZXMucHJvdG90eXBlLmRlc3Ryb3lJbnN0YW5jZU9iamVjdCA9IGZ1bmN0aW9uIChjb21wb25lbnQsIGlkKSB7XG4gICAgICAgIGlmICghdGhpcy5fY29tcG9uZW50QW5kSW5zdGFuY2VDaGVjayhjb21wb25lbnQsIGlkKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2luc3RhbmNlc1tjb21wb25lbnRdW2lkXS5kZXN0cm95KCk7XG4gICAgfTtcbiAgICBJbnN0YW5jZXMucHJvdG90eXBlLmluc3RhbmNlRXhpc3RzID0gZnVuY3Rpb24gKGNvbXBvbmVudCwgaWQpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pbnN0YW5jZXNbY29tcG9uZW50XSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2VzW2NvbXBvbmVudF1baWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICBJbnN0YW5jZXMucHJvdG90eXBlLl9nZW5lcmF0ZVJhbmRvbUlkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpO1xuICAgIH07XG4gICAgSW5zdGFuY2VzLnByb3RvdHlwZS5fY29tcG9uZW50QW5kSW5zdGFuY2VDaGVjayA9IGZ1bmN0aW9uIChjb21wb25lbnQsIGlkKSB7XG4gICAgICAgIGlmICghdGhpcy5faW5zdGFuY2VzW2NvbXBvbmVudF0pIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkZsb3diaXRlOiBDb21wb25lbnQgXCIuY29uY2F0KGNvbXBvbmVudCwgXCIgZG9lcyBub3QgZXhpc3QuXCIpKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlc1tjb21wb25lbnRdW2lkXSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiRmxvd2JpdGU6IEluc3RhbmNlIHdpdGggSUQgXCIuY29uY2F0KGlkLCBcIiBkb2VzIG5vdCBleGlzdC5cIikpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgcmV0dXJuIEluc3RhbmNlcztcbn0oKSk7XG52YXIgaW5zdGFuY2VzID0gbmV3IEluc3RhbmNlcygpO1xuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2VzO1xuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LkZsb3diaXRlSW5zdGFuY2VzID0gaW5zdGFuY2VzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdGFuY2VzLmpzLm1hcCIsImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCIsImltcG9ydCBFdmVudHMgZnJvbSAnLi9kb20vZXZlbnRzJztcbmltcG9ydCB7IGluaXRBY2NvcmRpb25zIH0gZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbic7XG5pbXBvcnQgeyBpbml0Q29sbGFwc2VzIH0gZnJvbSAnLi9jb21wb25lbnRzL2NvbGxhcHNlJztcbmltcG9ydCB7IGluaXRDYXJvdXNlbHMgfSBmcm9tICcuL2NvbXBvbmVudHMvY2Fyb3VzZWwnO1xuaW1wb3J0IHsgaW5pdERpc21pc3NlcyB9IGZyb20gJy4vY29tcG9uZW50cy9kaXNtaXNzJztcbmltcG9ydCB7IGluaXREcm9wZG93bnMgfSBmcm9tICcuL2NvbXBvbmVudHMvZHJvcGRvd24nO1xuaW1wb3J0IHsgaW5pdE1vZGFscyB9IGZyb20gJy4vY29tcG9uZW50cy9tb2RhbCc7XG5pbXBvcnQgeyBpbml0RHJhd2VycyB9IGZyb20gJy4vY29tcG9uZW50cy9kcmF3ZXInO1xuaW1wb3J0IHsgaW5pdFRhYnMgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFicyc7XG5pbXBvcnQgeyBpbml0VG9vbHRpcHMgfSBmcm9tICcuL2NvbXBvbmVudHMvdG9vbHRpcCc7XG5pbXBvcnQgeyBpbml0UG9wb3ZlcnMgfSBmcm9tICcuL2NvbXBvbmVudHMvcG9wb3Zlcic7XG5pbXBvcnQgeyBpbml0RGlhbHMgfSBmcm9tICcuL2NvbXBvbmVudHMvZGlhbCc7XG5pbXBvcnQgeyBpbml0SW5wdXRDb3VudGVycyB9IGZyb20gJy4vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyJztcbmltcG9ydCB7IGluaXRDb3B5Q2xpcGJvYXJkcyB9IGZyb20gJy4vY29tcG9uZW50cy9jbGlwYm9hcmQnO1xuaW1wb3J0ICcuL2NvbXBvbmVudHMvaW5kZXgnO1xuLy8gc2V0dXAgZXZlbnRzIGZvciBkYXRhIGF0dHJpYnV0ZXNcbnZhciBldmVudHMgPSBuZXcgRXZlbnRzKCdsb2FkJywgW1xuICAgIGluaXRBY2NvcmRpb25zLFxuICAgIGluaXRDb2xsYXBzZXMsXG4gICAgaW5pdENhcm91c2VscyxcbiAgICBpbml0RGlzbWlzc2VzLFxuICAgIGluaXREcm9wZG93bnMsXG4gICAgaW5pdE1vZGFscyxcbiAgICBpbml0RHJhd2VycyxcbiAgICBpbml0VGFicyxcbiAgICBpbml0VG9vbHRpcHMsXG4gICAgaW5pdFBvcG92ZXJzLFxuICAgIGluaXREaWFscyxcbiAgICBpbml0SW5wdXRDb3VudGVycyxcbiAgICBpbml0Q29weUNsaXBib2FyZHMsXG5dKTtcbmV2ZW50cy5pbml0KCk7XG4vLyBleHBvcnQgYWxsIGNvbXBvbmVudHNcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQWNjb3JkaW9uIH0gZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIENhcm91c2VsIH0gZnJvbSAnLi9jb21wb25lbnRzL2Nhcm91c2VsJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ29sbGFwc2UgfSBmcm9tICcuL2NvbXBvbmVudHMvY29sbGFwc2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBEaWFsIH0gZnJvbSAnLi9jb21wb25lbnRzL2RpYWwnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBEaXNtaXNzIH0gZnJvbSAnLi9jb21wb25lbnRzL2Rpc21pc3MnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBEcmF3ZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvZHJhd2VyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgRHJvcGRvd24gfSBmcm9tICcuL2NvbXBvbmVudHMvZHJvcGRvd24nO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBNb2RhbCB9IGZyb20gJy4vY29tcG9uZW50cy9tb2RhbCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFBvcG92ZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvcG9wb3Zlcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFRhYnMgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFicyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFRvb2x0aXAgfSBmcm9tICcuL2NvbXBvbmVudHMvdG9vbHRpcCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIElucHV0Q291bnRlciB9IGZyb20gJy4vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ29weUNsaXBib2FyZCB9IGZyb20gJy4vY29tcG9uZW50cy9jbGlwYm9hcmQnO1xuLy8gZXhwb3J0IGFsbCB0eXBlc1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbi90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvY2Fyb3VzZWwvdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2NvbGxhcHNlL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9kaWFsL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9kaXNtaXNzL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9kcmF3ZXIvdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2Ryb3Bkb3duL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9tb2RhbC90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvcG9wb3Zlci90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvdGFicy90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvdG9vbHRpcC90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvaW5wdXQtY291bnRlci90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvY2xpcGJvYXJkL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vZG9tL3R5cGVzJztcbi8vIGV4cG9ydCBhbGwgaW50ZXJmYWNlc1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbi9pbnRlcmZhY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2Nhcm91c2VsL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvY29sbGFwc2UvaW50ZXJmYWNlJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9kaWFsL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvZGlzbWlzcy9pbnRlcmZhY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2RyYXdlci9pbnRlcmZhY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2Ryb3Bkb3duL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvbW9kYWwvaW50ZXJmYWNlJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9wb3BvdmVyL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvdGFicy9pbnRlcmZhY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL3Rvb2x0aXAvaW50ZXJmYWNlJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyL2ludGVyZmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvY2xpcGJvYXJkL2ludGVyZmFjZSc7XG4vLyBleHBvcnQgaW5pdCBmdW5jdGlvbnNcbmV4cG9ydCB7IGluaXRBY2NvcmRpb25zIH0gZnJvbSAnLi9jb21wb25lbnRzL2FjY29yZGlvbic7XG5leHBvcnQgeyBpbml0Q2Fyb3VzZWxzIH0gZnJvbSAnLi9jb21wb25lbnRzL2Nhcm91c2VsJztcbmV4cG9ydCB7IGluaXRDb2xsYXBzZXMgfSBmcm9tICcuL2NvbXBvbmVudHMvY29sbGFwc2UnO1xuZXhwb3J0IHsgaW5pdERpYWxzIH0gZnJvbSAnLi9jb21wb25lbnRzL2RpYWwnO1xuZXhwb3J0IHsgaW5pdERpc21pc3NlcyB9IGZyb20gJy4vY29tcG9uZW50cy9kaXNtaXNzJztcbmV4cG9ydCB7IGluaXREcmF3ZXJzIH0gZnJvbSAnLi9jb21wb25lbnRzL2RyYXdlcic7XG5leHBvcnQgeyBpbml0RHJvcGRvd25zIH0gZnJvbSAnLi9jb21wb25lbnRzL2Ryb3Bkb3duJztcbmV4cG9ydCB7IGluaXRNb2RhbHMgfSBmcm9tICcuL2NvbXBvbmVudHMvbW9kYWwnO1xuZXhwb3J0IHsgaW5pdFBvcG92ZXJzIH0gZnJvbSAnLi9jb21wb25lbnRzL3BvcG92ZXInO1xuZXhwb3J0IHsgaW5pdFRhYnMgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFicyc7XG5leHBvcnQgeyBpbml0VG9vbHRpcHMgfSBmcm9tICcuL2NvbXBvbmVudHMvdG9vbHRpcCc7XG5leHBvcnQgeyBpbml0SW5wdXRDb3VudGVycyB9IGZyb20gJy4vY29tcG9uZW50cy9pbnB1dC1jb3VudGVyJztcbmV4cG9ydCB7IGluaXRDb3B5Q2xpcGJvYXJkcyB9IGZyb20gJy4vY29tcG9uZW50cy9jbGlwYm9hcmQnO1xuLy8gZXhwb3J0IGFsbCBpbml0IGZ1bmN0aW9uc1xuZXhwb3J0IHsgaW5pdEZsb3diaXRlIH0gZnJvbSAnLi9jb21wb25lbnRzL2luZGV4Jztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsIiFmdW5jdGlvbih0LGUpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlKW1vZHVsZS5leHBvcnRzPWUoKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sZSk7ZWxzZXt2YXIgbj1lKCk7Zm9yKHZhciBvIGluIG4pKFwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHM6dClbb109bltvXX19KHNlbGYsKCgpPT4oKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgdD17NDkyOih0LGUsbik9PntuLnIoZSksbi5kKGUse2FmdGVyTWFpbjooKT0+UyxhZnRlclJlYWQ6KCk9PncsYWZ0ZXJXcml0ZTooKT0+VCxhcHBseVN0eWxlczooKT0+UCxhcnJvdzooKT0+USxhdXRvOigpPT5sLGJhc2VQbGFjZW1lbnRzOigpPT5hLGJlZm9yZU1haW46KCk9PmIsYmVmb3JlUmVhZDooKT0+eSxiZWZvcmVXcml0ZTooKT0+eCxib3R0b206KCk9PmksY2xpcHBpbmdQYXJlbnRzOigpPT5kLGNvbXB1dGVTdHlsZXM6KCk9Pm50LGNyZWF0ZVBvcHBlcjooKT0+UHQsY3JlYXRlUG9wcGVyQmFzZTooKT0+X3QsY3JlYXRlUG9wcGVyTGl0ZTooKT0+QnQsZGV0ZWN0T3ZlcmZsb3c6KCk9Pmd0LGVuZDooKT0+dSxldmVudExpc3RlbmVyczooKT0+aXQsZmxpcDooKT0+d3QsaGlkZTooKT0+U3QsbGVmdDooKT0+cyxtYWluOigpPT5DLG1vZGlmaWVyUGhhc2VzOigpPT5FLG9mZnNldDooKT0+eHQscGxhY2VtZW50czooKT0+dixwb3BwZXI6KCk9PmgscG9wcGVyR2VuZXJhdG9yOigpPT5rdCxwb3BwZXJPZmZzZXRzOigpPT5JdCxwcmV2ZW50T3ZlcmZsb3c6KCk9PlR0LHJlYWQ6KCk9PmcscmVmZXJlbmNlOigpPT5mLHJpZ2h0OigpPT5yLHN0YXJ0OigpPT5jLHRvcDooKT0+byx2YXJpYXRpb25QbGFjZW1lbnRzOigpPT5tLHZpZXdwb3J0OigpPT5wLHdyaXRlOigpPT5JfSk7dmFyIG89XCJ0b3BcIixpPVwiYm90dG9tXCIscj1cInJpZ2h0XCIscz1cImxlZnRcIixsPVwiYXV0b1wiLGE9W28saSxyLHNdLGM9XCJzdGFydFwiLHU9XCJlbmRcIixkPVwiY2xpcHBpbmdQYXJlbnRzXCIscD1cInZpZXdwb3J0XCIsaD1cInBvcHBlclwiLGY9XCJyZWZlcmVuY2VcIixtPWEucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiB0LmNvbmNhdChbZStcIi1cIitjLGUrXCItXCIrdV0pfSksW10pLHY9W10uY29uY2F0KGEsW2xdKS5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY29uY2F0KFtlLGUrXCItXCIrYyxlK1wiLVwiK3VdKX0pLFtdKSx5PVwiYmVmb3JlUmVhZFwiLGc9XCJyZWFkXCIsdz1cImFmdGVyUmVhZFwiLGI9XCJiZWZvcmVNYWluXCIsQz1cIm1haW5cIixTPVwiYWZ0ZXJNYWluXCIseD1cImJlZm9yZVdyaXRlXCIsST1cIndyaXRlXCIsVD1cImFmdGVyV3JpdGVcIixFPVt5LGcsdyxiLEMsUyx4LEksVF07ZnVuY3Rpb24gTyh0KXtyZXR1cm4gdD8odC5ub2RlTmFtZXx8XCJcIikudG9Mb3dlckNhc2UoKTpudWxsfWZ1bmN0aW9uIEwodCl7aWYobnVsbD09dClyZXR1cm4gd2luZG93O2lmKFwiW29iamVjdCBXaW5kb3ddXCIhPT10LnRvU3RyaW5nKCkpe3ZhciBlPXQub3duZXJEb2N1bWVudDtyZXR1cm4gZSYmZS5kZWZhdWx0Vmlld3x8d2luZG93fXJldHVybiB0fWZ1bmN0aW9uIEEodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBMKHQpLkVsZW1lbnR8fHQgaW5zdGFuY2VvZiBFbGVtZW50fWZ1bmN0aW9uIGsodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBMKHQpLkhUTUxFbGVtZW50fHx0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnR9ZnVuY3Rpb24gXyh0KXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgU2hhZG93Um9vdCYmKHQgaW5zdGFuY2VvZiBMKHQpLlNoYWRvd1Jvb3R8fHQgaW5zdGFuY2VvZiBTaGFkb3dSb290KX1jb25zdCBQPXtuYW1lOlwiYXBwbHlTdHlsZXNcIixlbmFibGVkOiEwLHBoYXNlOlwid3JpdGVcIixmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlO09iamVjdC5rZXlzKGUuZWxlbWVudHMpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBuPWUuc3R5bGVzW3RdfHx7fSxvPWUuYXR0cmlidXRlc1t0XXx8e30saT1lLmVsZW1lbnRzW3RdO2soaSkmJk8oaSkmJihPYmplY3QuYXNzaWduKGkuc3R5bGUsbiksT2JqZWN0LmtleXMobykuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGU9b1t0XTshMT09PWU/aS5yZW1vdmVBdHRyaWJ1dGUodCk6aS5zZXRBdHRyaWJ1dGUodCwhMD09PWU/XCJcIjplKX0pKSl9KSl9LGVmZmVjdDpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49e3BvcHBlcjp7cG9zaXRpb246ZS5vcHRpb25zLnN0cmF0ZWd5LGxlZnQ6XCIwXCIsdG9wOlwiMFwiLG1hcmdpbjpcIjBcIn0sYXJyb3c6e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIn0scmVmZXJlbmNlOnt9fTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLmVsZW1lbnRzLnBvcHBlci5zdHlsZSxuLnBvcHBlciksZS5zdHlsZXM9bixlLmVsZW1lbnRzLmFycm93JiZPYmplY3QuYXNzaWduKGUuZWxlbWVudHMuYXJyb3cuc3R5bGUsbi5hcnJvdyksZnVuY3Rpb24oKXtPYmplY3Qua2V5cyhlLmVsZW1lbnRzKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgbz1lLmVsZW1lbnRzW3RdLGk9ZS5hdHRyaWJ1dGVzW3RdfHx7fSxyPU9iamVjdC5rZXlzKGUuc3R5bGVzLmhhc093blByb3BlcnR5KHQpP2Uuc3R5bGVzW3RdOm5bdF0pLnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gdFtlXT1cIlwiLHR9KSx7fSk7ayhvKSYmTyhvKSYmKE9iamVjdC5hc3NpZ24oby5zdHlsZSxyKSxPYmplY3Qua2V5cyhpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtvLnJlbW92ZUF0dHJpYnV0ZSh0KX0pKSl9KSl9fSxyZXF1aXJlczpbXCJjb21wdXRlU3R5bGVzXCJdfTtmdW5jdGlvbiBCKHQpe3JldHVybiB0LnNwbGl0KFwiLVwiKVswXX12YXIgcT1NYXRoLm1heCxOPU1hdGgubWluLGo9TWF0aC5yb3VuZDtmdW5jdGlvbiAkKCl7dmFyIHQ9bmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7cmV0dXJuIG51bGwhPXQmJnQuYnJhbmRzJiZBcnJheS5pc0FycmF5KHQuYnJhbmRzKT90LmJyYW5kcy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmJyYW5kK1wiL1wiK3QudmVyc2lvbn0pKS5qb2luKFwiIFwiKTpuYXZpZ2F0b3IudXNlckFnZW50fWZ1bmN0aW9uIEQoKXtyZXR1cm4hL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdCgkKCkpfWZ1bmN0aW9uIEgodCxlLG4pe3ZvaWQgMD09PWUmJihlPSExKSx2b2lkIDA9PT1uJiYobj0hMSk7dmFyIG89dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxpPTEscj0xO2UmJmsodCkmJihpPXQub2Zmc2V0V2lkdGg+MCYmaihvLndpZHRoKS90Lm9mZnNldFdpZHRofHwxLHI9dC5vZmZzZXRIZWlnaHQ+MCYmaihvLmhlaWdodCkvdC5vZmZzZXRIZWlnaHR8fDEpO3ZhciBzPShBKHQpP0wodCk6d2luZG93KS52aXN1YWxWaWV3cG9ydCxsPSFEKCkmJm4sYT0oby5sZWZ0KyhsJiZzP3Mub2Zmc2V0TGVmdDowKSkvaSxjPShvLnRvcCsobCYmcz9zLm9mZnNldFRvcDowKSkvcix1PW8ud2lkdGgvaSxkPW8uaGVpZ2h0L3I7cmV0dXJue3dpZHRoOnUsaGVpZ2h0OmQsdG9wOmMscmlnaHQ6YSt1LGJvdHRvbTpjK2QsbGVmdDphLHg6YSx5OmN9fWZ1bmN0aW9uIE0odCl7dmFyIGU9SCh0KSxuPXQub2Zmc2V0V2lkdGgsbz10Lm9mZnNldEhlaWdodDtyZXR1cm4gTWF0aC5hYnMoZS53aWR0aC1uKTw9MSYmKG49ZS53aWR0aCksTWF0aC5hYnMoZS5oZWlnaHQtbyk8PTEmJihvPWUuaGVpZ2h0KSx7eDp0Lm9mZnNldExlZnQseTp0Lm9mZnNldFRvcCx3aWR0aDpuLGhlaWdodDpvfX1mdW5jdGlvbiBSKHQsZSl7dmFyIG49ZS5nZXRSb290Tm9kZSYmZS5nZXRSb290Tm9kZSgpO2lmKHQuY29udGFpbnMoZSkpcmV0dXJuITA7aWYobiYmXyhuKSl7dmFyIG89ZTtkb3tpZihvJiZ0LmlzU2FtZU5vZGUobykpcmV0dXJuITA7bz1vLnBhcmVudE5vZGV8fG8uaG9zdH13aGlsZShvKX1yZXR1cm4hMX1mdW5jdGlvbiBXKHQpe3JldHVybiBMKHQpLmdldENvbXB1dGVkU3R5bGUodCl9ZnVuY3Rpb24gVih0KXtyZXR1cm5bXCJ0YWJsZVwiLFwidGRcIixcInRoXCJdLmluZGV4T2YoTyh0KSk+PTB9ZnVuY3Rpb24gRih0KXtyZXR1cm4oKEEodCk/dC5vd25lckRvY3VtZW50OnQuZG9jdW1lbnQpfHx3aW5kb3cuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudH1mdW5jdGlvbiBVKHQpe3JldHVyblwiaHRtbFwiPT09Tyh0KT90OnQuYXNzaWduZWRTbG90fHx0LnBhcmVudE5vZGV8fChfKHQpP3QuaG9zdDpudWxsKXx8Rih0KX1mdW5jdGlvbiBKKHQpe3JldHVybiBrKHQpJiZcImZpeGVkXCIhPT1XKHQpLnBvc2l0aW9uP3Qub2Zmc2V0UGFyZW50Om51bGx9ZnVuY3Rpb24gWSh0KXtmb3IodmFyIGU9TCh0KSxuPUoodCk7biYmVihuKSYmXCJzdGF0aWNcIj09PVcobikucG9zaXRpb247KW49SihuKTtyZXR1cm4gbiYmKFwiaHRtbFwiPT09TyhuKXx8XCJib2R5XCI9PT1PKG4pJiZcInN0YXRpY1wiPT09VyhuKS5wb3NpdGlvbik/ZTpufHxmdW5jdGlvbih0KXt2YXIgZT0vZmlyZWZveC9pLnRlc3QoJCgpKTtpZigvVHJpZGVudC9pLnRlc3QoJCgpKSYmayh0KSYmXCJmaXhlZFwiPT09Vyh0KS5wb3NpdGlvbilyZXR1cm4gbnVsbDt2YXIgbj1VKHQpO2ZvcihfKG4pJiYobj1uLmhvc3QpO2sobikmJltcImh0bWxcIixcImJvZHlcIl0uaW5kZXhPZihPKG4pKTwwOyl7dmFyIG89VyhuKTtpZihcIm5vbmVcIiE9PW8udHJhbnNmb3JtfHxcIm5vbmVcIiE9PW8ucGVyc3BlY3RpdmV8fFwicGFpbnRcIj09PW8uY29udGFpbnx8LTEhPT1bXCJ0cmFuc2Zvcm1cIixcInBlcnNwZWN0aXZlXCJdLmluZGV4T2Yoby53aWxsQ2hhbmdlKXx8ZSYmXCJmaWx0ZXJcIj09PW8ud2lsbENoYW5nZXx8ZSYmby5maWx0ZXImJlwibm9uZVwiIT09by5maWx0ZXIpcmV0dXJuIG47bj1uLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9KHQpfHxlfWZ1bmN0aW9uIEsodCl7cmV0dXJuW1widG9wXCIsXCJib3R0b21cIl0uaW5kZXhPZih0KT49MD9cInhcIjpcInlcIn1mdW5jdGlvbiBHKHQsZSxuKXtyZXR1cm4gcSh0LE4oZSxuKSl9ZnVuY3Rpb24geih0KXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSx7dG9wOjAscmlnaHQ6MCxib3R0b206MCxsZWZ0OjB9LHQpfWZ1bmN0aW9uIFgodCxlKXtyZXR1cm4gZS5yZWR1Y2UoKGZ1bmN0aW9uKGUsbil7cmV0dXJuIGVbbl09dCxlfSkse30pfWNvbnN0IFE9e25hbWU6XCJhcnJvd1wiLGVuYWJsZWQ6ITAscGhhc2U6XCJtYWluXCIsZm46ZnVuY3Rpb24odCl7dmFyIGUsbj10LnN0YXRlLGw9dC5uYW1lLGM9dC5vcHRpb25zLHU9bi5lbGVtZW50cy5hcnJvdyxkPW4ubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLHA9QihuLnBsYWNlbWVudCksaD1LKHApLGY9W3Mscl0uaW5kZXhPZihwKT49MD9cImhlaWdodFwiOlwid2lkdGhcIjtpZih1JiZkKXt2YXIgbT1mdW5jdGlvbih0LGUpe3JldHVybiB6KFwibnVtYmVyXCIhPXR5cGVvZih0PVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dChPYmplY3QuYXNzaWduKHt9LGUucmVjdHMse3BsYWNlbWVudDplLnBsYWNlbWVudH0pKTp0KT90OlgodCxhKSl9KGMucGFkZGluZyxuKSx2PU0odSkseT1cInlcIj09PWg/bzpzLGc9XCJ5XCI9PT1oP2k6cix3PW4ucmVjdHMucmVmZXJlbmNlW2ZdK24ucmVjdHMucmVmZXJlbmNlW2hdLWRbaF0tbi5yZWN0cy5wb3BwZXJbZl0sYj1kW2hdLW4ucmVjdHMucmVmZXJlbmNlW2hdLEM9WSh1KSxTPUM/XCJ5XCI9PT1oP0MuY2xpZW50SGVpZ2h0fHwwOkMuY2xpZW50V2lkdGh8fDA6MCx4PXcvMi1iLzIsST1tW3ldLFQ9Uy12W2ZdLW1bZ10sRT1TLzItdltmXS8yK3gsTz1HKEksRSxUKSxMPWg7bi5tb2RpZmllcnNEYXRhW2xdPSgoZT17fSlbTF09TyxlLmNlbnRlck9mZnNldD1PLUUsZSl9fSxlZmZlY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGF0ZSxuPXQub3B0aW9ucy5lbGVtZW50LG89dm9pZCAwPT09bj9cIltkYXRhLXBvcHBlci1hcnJvd11cIjpuO251bGwhPW8mJihcInN0cmluZ1wiIT10eXBlb2Ygb3x8KG89ZS5lbGVtZW50cy5wb3BwZXIucXVlcnlTZWxlY3RvcihvKSkpJiZSKGUuZWxlbWVudHMucG9wcGVyLG8pJiYoZS5lbGVtZW50cy5hcnJvdz1vKX0scmVxdWlyZXM6W1wicG9wcGVyT2Zmc2V0c1wiXSxyZXF1aXJlc0lmRXhpc3RzOltcInByZXZlbnRPdmVyZmxvd1wiXX07ZnVuY3Rpb24gWih0KXtyZXR1cm4gdC5zcGxpdChcIi1cIilbMV19dmFyIHR0PXt0b3A6XCJhdXRvXCIscmlnaHQ6XCJhdXRvXCIsYm90dG9tOlwiYXV0b1wiLGxlZnQ6XCJhdXRvXCJ9O2Z1bmN0aW9uIGV0KHQpe3ZhciBlLG49dC5wb3BwZXIsbD10LnBvcHBlclJlY3QsYT10LnBsYWNlbWVudCxjPXQudmFyaWF0aW9uLGQ9dC5vZmZzZXRzLHA9dC5wb3NpdGlvbixoPXQuZ3B1QWNjZWxlcmF0aW9uLGY9dC5hZGFwdGl2ZSxtPXQucm91bmRPZmZzZXRzLHY9dC5pc0ZpeGVkLHk9ZC54LGc9dm9pZCAwPT09eT8wOnksdz1kLnksYj12b2lkIDA9PT13PzA6dyxDPVwiZnVuY3Rpb25cIj09dHlwZW9mIG0/bSh7eDpnLHk6Yn0pOnt4OmcseTpifTtnPUMueCxiPUMueTt2YXIgUz1kLmhhc093blByb3BlcnR5KFwieFwiKSx4PWQuaGFzT3duUHJvcGVydHkoXCJ5XCIpLEk9cyxUPW8sRT13aW5kb3c7aWYoZil7dmFyIE89WShuKSxBPVwiY2xpZW50SGVpZ2h0XCIsaz1cImNsaWVudFdpZHRoXCI7aWYoTz09PUwobikmJlwic3RhdGljXCIhPT1XKE89RihuKSkucG9zaXRpb24mJlwiYWJzb2x1dGVcIj09PXAmJihBPVwic2Nyb2xsSGVpZ2h0XCIsaz1cInNjcm9sbFdpZHRoXCIpLGE9PT1vfHwoYT09PXN8fGE9PT1yKSYmYz09PXUpVD1pLGItPSh2JiZPPT09RSYmRS52aXN1YWxWaWV3cG9ydD9FLnZpc3VhbFZpZXdwb3J0LmhlaWdodDpPW0FdKS1sLmhlaWdodCxiKj1oPzE6LTE7aWYoYT09PXN8fChhPT09b3x8YT09PWkpJiZjPT09dSlJPXIsZy09KHYmJk89PT1FJiZFLnZpc3VhbFZpZXdwb3J0P0UudmlzdWFsVmlld3BvcnQud2lkdGg6T1trXSktbC53aWR0aCxnKj1oPzE6LTF9dmFyIF8sUD1PYmplY3QuYXNzaWduKHtwb3NpdGlvbjpwfSxmJiZ0dCksQj0hMD09PW0/ZnVuY3Rpb24odCxlKXt2YXIgbj10Lngsbz10LnksaT1lLmRldmljZVBpeGVsUmF0aW98fDE7cmV0dXJue3g6aihuKmkpL2l8fDAseTpqKG8qaSkvaXx8MH19KHt4OmcseTpifSxMKG4pKTp7eDpnLHk6Yn07cmV0dXJuIGc9Qi54LGI9Qi55LGg/T2JqZWN0LmFzc2lnbih7fSxQLCgoXz17fSlbVF09eD9cIjBcIjpcIlwiLF9bSV09Uz9cIjBcIjpcIlwiLF8udHJhbnNmb3JtPShFLmRldmljZVBpeGVsUmF0aW98fDEpPD0xP1widHJhbnNsYXRlKFwiK2crXCJweCwgXCIrYitcInB4KVwiOlwidHJhbnNsYXRlM2QoXCIrZytcInB4LCBcIitiK1wicHgsIDApXCIsXykpOk9iamVjdC5hc3NpZ24oe30sUCwoKGU9e30pW1RdPXg/YitcInB4XCI6XCJcIixlW0ldPVM/ZytcInB4XCI6XCJcIixlLnRyYW5zZm9ybT1cIlwiLGUpKX1jb25zdCBudD17bmFtZTpcImNvbXB1dGVTdHlsZXNcIixlbmFibGVkOiEwLHBoYXNlOlwiYmVmb3JlV3JpdGVcIixmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49dC5vcHRpb25zLG89bi5ncHVBY2NlbGVyYXRpb24saT12b2lkIDA9PT1vfHxvLHI9bi5hZGFwdGl2ZSxzPXZvaWQgMD09PXJ8fHIsbD1uLnJvdW5kT2Zmc2V0cyxhPXZvaWQgMD09PWx8fGwsYz17cGxhY2VtZW50OkIoZS5wbGFjZW1lbnQpLHZhcmlhdGlvbjpaKGUucGxhY2VtZW50KSxwb3BwZXI6ZS5lbGVtZW50cy5wb3BwZXIscG9wcGVyUmVjdDplLnJlY3RzLnBvcHBlcixncHVBY2NlbGVyYXRpb246aSxpc0ZpeGVkOlwiZml4ZWRcIj09PWUub3B0aW9ucy5zdHJhdGVneX07bnVsbCE9ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMmJihlLnN0eWxlcy5wb3BwZXI9T2JqZWN0LmFzc2lnbih7fSxlLnN0eWxlcy5wb3BwZXIsZXQoT2JqZWN0LmFzc2lnbih7fSxjLHtvZmZzZXRzOmUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLHBvc2l0aW9uOmUub3B0aW9ucy5zdHJhdGVneSxhZGFwdGl2ZTpzLHJvdW5kT2Zmc2V0czphfSkpKSksbnVsbCE9ZS5tb2RpZmllcnNEYXRhLmFycm93JiYoZS5zdHlsZXMuYXJyb3c9T2JqZWN0LmFzc2lnbih7fSxlLnN0eWxlcy5hcnJvdyxldChPYmplY3QuYXNzaWduKHt9LGMse29mZnNldHM6ZS5tb2RpZmllcnNEYXRhLmFycm93LHBvc2l0aW9uOlwiYWJzb2x1dGVcIixhZGFwdGl2ZTohMSxyb3VuZE9mZnNldHM6YX0pKSkpLGUuYXR0cmlidXRlcy5wb3BwZXI9T2JqZWN0LmFzc2lnbih7fSxlLmF0dHJpYnV0ZXMucG9wcGVyLHtcImRhdGEtcG9wcGVyLXBsYWNlbWVudFwiOmUucGxhY2VtZW50fSl9LGRhdGE6e319O3ZhciBvdD17cGFzc2l2ZTohMH07Y29uc3QgaXQ9e25hbWU6XCJldmVudExpc3RlbmVyc1wiLGVuYWJsZWQ6ITAscGhhc2U6XCJ3cml0ZVwiLGZuOmZ1bmN0aW9uKCl7fSxlZmZlY3Q6ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGF0ZSxuPXQuaW5zdGFuY2Usbz10Lm9wdGlvbnMsaT1vLnNjcm9sbCxyPXZvaWQgMD09PWl8fGkscz1vLnJlc2l6ZSxsPXZvaWQgMD09PXN8fHMsYT1MKGUuZWxlbWVudHMucG9wcGVyKSxjPVtdLmNvbmNhdChlLnNjcm9sbFBhcmVudHMucmVmZXJlbmNlLGUuc2Nyb2xsUGFyZW50cy5wb3BwZXIpO3JldHVybiByJiZjLmZvckVhY2goKGZ1bmN0aW9uKHQpe3QuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLG4udXBkYXRlLG90KX0pKSxsJiZhLmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixuLnVwZGF0ZSxvdCksZnVuY3Rpb24oKXtyJiZjLmZvckVhY2goKGZ1bmN0aW9uKHQpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLG4udXBkYXRlLG90KX0pKSxsJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixuLnVwZGF0ZSxvdCl9fSxkYXRhOnt9fTt2YXIgcnQ9e2xlZnQ6XCJyaWdodFwiLHJpZ2h0OlwibGVmdFwiLGJvdHRvbTpcInRvcFwiLHRvcDpcImJvdHRvbVwifTtmdW5jdGlvbiBzdCh0KXtyZXR1cm4gdC5yZXBsYWNlKC9sZWZ0fHJpZ2h0fGJvdHRvbXx0b3AvZywoZnVuY3Rpb24odCl7cmV0dXJuIHJ0W3RdfSkpfXZhciBsdD17c3RhcnQ6XCJlbmRcIixlbmQ6XCJzdGFydFwifTtmdW5jdGlvbiBhdCh0KXtyZXR1cm4gdC5yZXBsYWNlKC9zdGFydHxlbmQvZywoZnVuY3Rpb24odCl7cmV0dXJuIGx0W3RdfSkpfWZ1bmN0aW9uIGN0KHQpe3ZhciBlPUwodCk7cmV0dXJue3Njcm9sbExlZnQ6ZS5wYWdlWE9mZnNldCxzY3JvbGxUb3A6ZS5wYWdlWU9mZnNldH19ZnVuY3Rpb24gdXQodCl7cmV0dXJuIEgoRih0KSkubGVmdCtjdCh0KS5zY3JvbGxMZWZ0fWZ1bmN0aW9uIGR0KHQpe3ZhciBlPVcodCksbj1lLm92ZXJmbG93LG89ZS5vdmVyZmxvd1gsaT1lLm92ZXJmbG93WTtyZXR1cm4vYXV0b3xzY3JvbGx8b3ZlcmxheXxoaWRkZW4vLnRlc3QobitpK28pfWZ1bmN0aW9uIHB0KHQpe3JldHVybltcImh0bWxcIixcImJvZHlcIixcIiNkb2N1bWVudFwiXS5pbmRleE9mKE8odCkpPj0wP3Qub3duZXJEb2N1bWVudC5ib2R5OmsodCkmJmR0KHQpP3Q6cHQoVSh0KSl9ZnVuY3Rpb24gaHQodCxlKXt2YXIgbjt2b2lkIDA9PT1lJiYoZT1bXSk7dmFyIG89cHQodCksaT1vPT09KG51bGw9PShuPXQub3duZXJEb2N1bWVudCk/dm9pZCAwOm4uYm9keSkscj1MKG8pLHM9aT9bcl0uY29uY2F0KHIudmlzdWFsVmlld3BvcnR8fFtdLGR0KG8pP286W10pOm8sbD1lLmNvbmNhdChzKTtyZXR1cm4gaT9sOmwuY29uY2F0KGh0KFUocykpKX1mdW5jdGlvbiBmdCh0KXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSx0LHtsZWZ0OnQueCx0b3A6dC55LHJpZ2h0OnQueCt0LndpZHRoLGJvdHRvbTp0LnkrdC5oZWlnaHR9KX1mdW5jdGlvbiBtdCh0LGUsbil7cmV0dXJuIGU9PT1wP2Z0KGZ1bmN0aW9uKHQsZSl7dmFyIG49TCh0KSxvPUYodCksaT1uLnZpc3VhbFZpZXdwb3J0LHI9by5jbGllbnRXaWR0aCxzPW8uY2xpZW50SGVpZ2h0LGw9MCxhPTA7aWYoaSl7cj1pLndpZHRoLHM9aS5oZWlnaHQ7dmFyIGM9RCgpOyhjfHwhYyYmXCJmaXhlZFwiPT09ZSkmJihsPWkub2Zmc2V0TGVmdCxhPWkub2Zmc2V0VG9wKX1yZXR1cm57d2lkdGg6cixoZWlnaHQ6cyx4OmwrdXQodCkseTphfX0odCxuKSk6QShlKT9mdW5jdGlvbih0LGUpe3ZhciBuPUgodCwhMSxcImZpeGVkXCI9PT1lKTtyZXR1cm4gbi50b3A9bi50b3ArdC5jbGllbnRUb3Asbi5sZWZ0PW4ubGVmdCt0LmNsaWVudExlZnQsbi5ib3R0b209bi50b3ArdC5jbGllbnRIZWlnaHQsbi5yaWdodD1uLmxlZnQrdC5jbGllbnRXaWR0aCxuLndpZHRoPXQuY2xpZW50V2lkdGgsbi5oZWlnaHQ9dC5jbGllbnRIZWlnaHQsbi54PW4ubGVmdCxuLnk9bi50b3Asbn0oZSxuKTpmdChmdW5jdGlvbih0KXt2YXIgZSxuPUYodCksbz1jdCh0KSxpPW51bGw9PShlPXQub3duZXJEb2N1bWVudCk/dm9pZCAwOmUuYm9keSxyPXEobi5zY3JvbGxXaWR0aCxuLmNsaWVudFdpZHRoLGk/aS5zY3JvbGxXaWR0aDowLGk/aS5jbGllbnRXaWR0aDowKSxzPXEobi5zY3JvbGxIZWlnaHQsbi5jbGllbnRIZWlnaHQsaT9pLnNjcm9sbEhlaWdodDowLGk/aS5jbGllbnRIZWlnaHQ6MCksbD0tby5zY3JvbGxMZWZ0K3V0KHQpLGE9LW8uc2Nyb2xsVG9wO3JldHVyblwicnRsXCI9PT1XKGl8fG4pLmRpcmVjdGlvbiYmKGwrPXEobi5jbGllbnRXaWR0aCxpP2kuY2xpZW50V2lkdGg6MCktcikse3dpZHRoOnIsaGVpZ2h0OnMseDpsLHk6YX19KEYodCkpKX1mdW5jdGlvbiB2dCh0LGUsbixvKXt2YXIgaT1cImNsaXBwaW5nUGFyZW50c1wiPT09ZT9mdW5jdGlvbih0KXt2YXIgZT1odChVKHQpKSxuPVtcImFic29sdXRlXCIsXCJmaXhlZFwiXS5pbmRleE9mKFcodCkucG9zaXRpb24pPj0wJiZrKHQpP1kodCk6dDtyZXR1cm4gQShuKT9lLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIEEodCkmJlIodCxuKSYmXCJib2R5XCIhPT1PKHQpfSkpOltdfSh0KTpbXS5jb25jYXQoZSkscj1bXS5jb25jYXQoaSxbbl0pLHM9clswXSxsPXIucmVkdWNlKChmdW5jdGlvbihlLG4pe3ZhciBpPW10KHQsbixvKTtyZXR1cm4gZS50b3A9cShpLnRvcCxlLnRvcCksZS5yaWdodD1OKGkucmlnaHQsZS5yaWdodCksZS5ib3R0b209TihpLmJvdHRvbSxlLmJvdHRvbSksZS5sZWZ0PXEoaS5sZWZ0LGUubGVmdCksZX0pLG10KHQscyxvKSk7cmV0dXJuIGwud2lkdGg9bC5yaWdodC1sLmxlZnQsbC5oZWlnaHQ9bC5ib3R0b20tbC50b3AsbC54PWwubGVmdCxsLnk9bC50b3AsbH1mdW5jdGlvbiB5dCh0KXt2YXIgZSxuPXQucmVmZXJlbmNlLGw9dC5lbGVtZW50LGE9dC5wbGFjZW1lbnQsZD1hP0IoYSk6bnVsbCxwPWE/WihhKTpudWxsLGg9bi54K24ud2lkdGgvMi1sLndpZHRoLzIsZj1uLnkrbi5oZWlnaHQvMi1sLmhlaWdodC8yO3N3aXRjaChkKXtjYXNlIG86ZT17eDpoLHk6bi55LWwuaGVpZ2h0fTticmVhaztjYXNlIGk6ZT17eDpoLHk6bi55K24uaGVpZ2h0fTticmVhaztjYXNlIHI6ZT17eDpuLngrbi53aWR0aCx5OmZ9O2JyZWFrO2Nhc2UgczplPXt4Om4ueC1sLndpZHRoLHk6Zn07YnJlYWs7ZGVmYXVsdDplPXt4Om4ueCx5Om4ueX19dmFyIG09ZD9LKGQpOm51bGw7aWYobnVsbCE9bSl7dmFyIHY9XCJ5XCI9PT1tP1wiaGVpZ2h0XCI6XCJ3aWR0aFwiO3N3aXRjaChwKXtjYXNlIGM6ZVttXT1lW21dLShuW3ZdLzItbFt2XS8yKTticmVhaztjYXNlIHU6ZVttXT1lW21dKyhuW3ZdLzItbFt2XS8yKX19cmV0dXJuIGV9ZnVuY3Rpb24gZ3QodCxlKXt2b2lkIDA9PT1lJiYoZT17fSk7dmFyIG49ZSxzPW4ucGxhY2VtZW50LGw9dm9pZCAwPT09cz90LnBsYWNlbWVudDpzLGM9bi5zdHJhdGVneSx1PXZvaWQgMD09PWM/dC5zdHJhdGVneTpjLG09bi5ib3VuZGFyeSx2PXZvaWQgMD09PW0/ZDptLHk9bi5yb290Qm91bmRhcnksZz12b2lkIDA9PT15P3A6eSx3PW4uZWxlbWVudENvbnRleHQsYj12b2lkIDA9PT13P2g6dyxDPW4uYWx0Qm91bmRhcnksUz12b2lkIDAhPT1DJiZDLHg9bi5wYWRkaW5nLEk9dm9pZCAwPT09eD8wOngsVD16KFwibnVtYmVyXCIhPXR5cGVvZiBJP0k6WChJLGEpKSxFPWI9PT1oP2Y6aCxPPXQucmVjdHMucG9wcGVyLEw9dC5lbGVtZW50c1tTP0U6Yl0saz12dChBKEwpP0w6TC5jb250ZXh0RWxlbWVudHx8Rih0LmVsZW1lbnRzLnBvcHBlciksdixnLHUpLF89SCh0LmVsZW1lbnRzLnJlZmVyZW5jZSksUD15dCh7cmVmZXJlbmNlOl8sZWxlbWVudDpPLHN0cmF0ZWd5OlwiYWJzb2x1dGVcIixwbGFjZW1lbnQ6bH0pLEI9ZnQoT2JqZWN0LmFzc2lnbih7fSxPLFApKSxxPWI9PT1oP0I6XyxOPXt0b3A6ay50b3AtcS50b3ArVC50b3AsYm90dG9tOnEuYm90dG9tLWsuYm90dG9tK1QuYm90dG9tLGxlZnQ6ay5sZWZ0LXEubGVmdCtULmxlZnQscmlnaHQ6cS5yaWdodC1rLnJpZ2h0K1QucmlnaHR9LGo9dC5tb2RpZmllcnNEYXRhLm9mZnNldDtpZihiPT09aCYmail7dmFyICQ9altsXTtPYmplY3Qua2V5cyhOKS5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgZT1bcixpXS5pbmRleE9mKHQpPj0wPzE6LTEsbj1bbyxpXS5pbmRleE9mKHQpPj0wP1wieVwiOlwieFwiO05bdF0rPSRbbl0qZX0pKX1yZXR1cm4gTn1jb25zdCB3dD17bmFtZTpcImZsaXBcIixlbmFibGVkOiEwLHBoYXNlOlwibWFpblwiLGZuOmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10Lm9wdGlvbnMsdT10Lm5hbWU7aWYoIWUubW9kaWZpZXJzRGF0YVt1XS5fc2tpcCl7Zm9yKHZhciBkPW4ubWFpbkF4aXMscD12b2lkIDA9PT1kfHxkLGg9bi5hbHRBeGlzLGY9dm9pZCAwPT09aHx8aCx5PW4uZmFsbGJhY2tQbGFjZW1lbnRzLGc9bi5wYWRkaW5nLHc9bi5ib3VuZGFyeSxiPW4ucm9vdEJvdW5kYXJ5LEM9bi5hbHRCb3VuZGFyeSxTPW4uZmxpcFZhcmlhdGlvbnMseD12b2lkIDA9PT1TfHxTLEk9bi5hbGxvd2VkQXV0b1BsYWNlbWVudHMsVD1lLm9wdGlvbnMucGxhY2VtZW50LEU9QihUKSxPPXl8fChFPT09VHx8IXg/W3N0KFQpXTpmdW5jdGlvbih0KXtpZihCKHQpPT09bClyZXR1cm5bXTt2YXIgZT1zdCh0KTtyZXR1cm5bYXQodCksZSxhdChlKV19KFQpKSxMPVtUXS5jb25jYXQoTykucmVkdWNlKChmdW5jdGlvbih0LG4pe3JldHVybiB0LmNvbmNhdChCKG4pPT09bD9mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPXt9KTt2YXIgbj1lLG89bi5wbGFjZW1lbnQsaT1uLmJvdW5kYXJ5LHI9bi5yb290Qm91bmRhcnkscz1uLnBhZGRpbmcsbD1uLmZsaXBWYXJpYXRpb25zLGM9bi5hbGxvd2VkQXV0b1BsYWNlbWVudHMsdT12b2lkIDA9PT1jP3Y6YyxkPVoobykscD1kP2w/bTptLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIFoodCk9PT1kfSkpOmEsaD1wLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHUuaW5kZXhPZih0KT49MH0pKTswPT09aC5sZW5ndGgmJihoPXApO3ZhciBmPWgucmVkdWNlKChmdW5jdGlvbihlLG4pe3JldHVybiBlW25dPWd0KHQse3BsYWNlbWVudDpuLGJvdW5kYXJ5Omkscm9vdEJvdW5kYXJ5OnIscGFkZGluZzpzfSlbQihuKV0sZX0pLHt9KTtyZXR1cm4gT2JqZWN0LmtleXMoZikuc29ydCgoZnVuY3Rpb24odCxlKXtyZXR1cm4gZlt0XS1mW2VdfSkpfShlLHtwbGFjZW1lbnQ6bixib3VuZGFyeTp3LHJvb3RCb3VuZGFyeTpiLHBhZGRpbmc6ZyxmbGlwVmFyaWF0aW9uczp4LGFsbG93ZWRBdXRvUGxhY2VtZW50czpJfSk6bil9KSxbXSksQT1lLnJlY3RzLnJlZmVyZW5jZSxrPWUucmVjdHMucG9wcGVyLF89bmV3IE1hcCxQPSEwLHE9TFswXSxOPTA7TjxMLmxlbmd0aDtOKyspe3ZhciBqPUxbTl0sJD1CKGopLEQ9WihqKT09PWMsSD1bbyxpXS5pbmRleE9mKCQpPj0wLE09SD9cIndpZHRoXCI6XCJoZWlnaHRcIixSPWd0KGUse3BsYWNlbWVudDpqLGJvdW5kYXJ5Oncscm9vdEJvdW5kYXJ5OmIsYWx0Qm91bmRhcnk6QyxwYWRkaW5nOmd9KSxXPUg/RD9yOnM6RD9pOm87QVtNXT5rW01dJiYoVz1zdChXKSk7dmFyIFY9c3QoVyksRj1bXTtpZihwJiZGLnB1c2goUlskXTw9MCksZiYmRi5wdXNoKFJbV108PTAsUltWXTw9MCksRi5ldmVyeSgoZnVuY3Rpb24odCl7cmV0dXJuIHR9KSkpe3E9aixQPSExO2JyZWFrfV8uc2V0KGosRil9aWYoUClmb3IodmFyIFU9ZnVuY3Rpb24odCl7dmFyIGU9TC5maW5kKChmdW5jdGlvbihlKXt2YXIgbj1fLmdldChlKTtpZihuKXJldHVybiBuLnNsaWNlKDAsdCkuZXZlcnkoKGZ1bmN0aW9uKHQpe3JldHVybiB0fSkpfSkpO2lmKGUpcmV0dXJuIHE9ZSxcImJyZWFrXCJ9LEo9eD8zOjE7Sj4wO0otLSl7aWYoXCJicmVha1wiPT09VShKKSlicmVha31lLnBsYWNlbWVudCE9PXEmJihlLm1vZGlmaWVyc0RhdGFbdV0uX3NraXA9ITAsZS5wbGFjZW1lbnQ9cSxlLnJlc2V0PSEwKX19LHJlcXVpcmVzSWZFeGlzdHM6W1wib2Zmc2V0XCJdLGRhdGE6e19za2lwOiExfX07ZnVuY3Rpb24gYnQodCxlLG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj17eDowLHk6MH0pLHt0b3A6dC50b3AtZS5oZWlnaHQtbi55LHJpZ2h0OnQucmlnaHQtZS53aWR0aCtuLngsYm90dG9tOnQuYm90dG9tLWUuaGVpZ2h0K24ueSxsZWZ0OnQubGVmdC1lLndpZHRoLW4ueH19ZnVuY3Rpb24gQ3QodCl7cmV0dXJuW28scixpLHNdLnNvbWUoKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdPj0wfSkpfWNvbnN0IFN0PXtuYW1lOlwiaGlkZVwiLGVuYWJsZWQ6ITAscGhhc2U6XCJtYWluXCIscmVxdWlyZXNJZkV4aXN0czpbXCJwcmV2ZW50T3ZlcmZsb3dcIl0sZm46ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGF0ZSxuPXQubmFtZSxvPWUucmVjdHMucmVmZXJlbmNlLGk9ZS5yZWN0cy5wb3BwZXIscj1lLm1vZGlmaWVyc0RhdGEucHJldmVudE92ZXJmbG93LHM9Z3QoZSx7ZWxlbWVudENvbnRleHQ6XCJyZWZlcmVuY2VcIn0pLGw9Z3QoZSx7YWx0Qm91bmRhcnk6ITB9KSxhPWJ0KHMsbyksYz1idChsLGksciksdT1DdChhKSxkPUN0KGMpO2UubW9kaWZpZXJzRGF0YVtuXT17cmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzOmEscG9wcGVyRXNjYXBlT2Zmc2V0czpjLGlzUmVmZXJlbmNlSGlkZGVuOnUsaGFzUG9wcGVyRXNjYXBlZDpkfSxlLmF0dHJpYnV0ZXMucG9wcGVyPU9iamVjdC5hc3NpZ24oe30sZS5hdHRyaWJ1dGVzLnBvcHBlcix7XCJkYXRhLXBvcHBlci1yZWZlcmVuY2UtaGlkZGVuXCI6dSxcImRhdGEtcG9wcGVyLWVzY2FwZWRcIjpkfSl9fTtjb25zdCB4dD17bmFtZTpcIm9mZnNldFwiLGVuYWJsZWQ6ITAscGhhc2U6XCJtYWluXCIscmVxdWlyZXM6W1wicG9wcGVyT2Zmc2V0c1wiXSxmbjpmdW5jdGlvbih0KXt2YXIgZT10LnN0YXRlLG49dC5vcHRpb25zLGk9dC5uYW1lLGw9bi5vZmZzZXQsYT12b2lkIDA9PT1sP1swLDBdOmwsYz12LnJlZHVjZSgoZnVuY3Rpb24odCxuKXtyZXR1cm4gdFtuXT1mdW5jdGlvbih0LGUsbil7dmFyIGk9Qih0KSxsPVtzLG9dLmluZGV4T2YoaSk+PTA/LTE6MSxhPVwiZnVuY3Rpb25cIj09dHlwZW9mIG4/bihPYmplY3QuYXNzaWduKHt9LGUse3BsYWNlbWVudDp0fSkpOm4sYz1hWzBdLHU9YVsxXTtyZXR1cm4gYz1jfHwwLHU9KHV8fDApKmwsW3Mscl0uaW5kZXhPZihpKT49MD97eDp1LHk6Y306e3g6Yyx5OnV9fShuLGUucmVjdHMsYSksdH0pLHt9KSx1PWNbZS5wbGFjZW1lbnRdLGQ9dS54LHA9dS55O251bGwhPWUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzJiYoZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMueCs9ZCxlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy55Kz1wKSxlLm1vZGlmaWVyc0RhdGFbaV09Y319O2NvbnN0IEl0PXtuYW1lOlwicG9wcGVyT2Zmc2V0c1wiLGVuYWJsZWQ6ITAscGhhc2U6XCJyZWFkXCIsZm46ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGF0ZSxuPXQubmFtZTtlLm1vZGlmaWVyc0RhdGFbbl09eXQoe3JlZmVyZW5jZTplLnJlY3RzLnJlZmVyZW5jZSxlbGVtZW50OmUucmVjdHMucG9wcGVyLHN0cmF0ZWd5OlwiYWJzb2x1dGVcIixwbGFjZW1lbnQ6ZS5wbGFjZW1lbnR9KX0sZGF0YTp7fX07Y29uc3QgVHQ9e25hbWU6XCJwcmV2ZW50T3ZlcmZsb3dcIixlbmFibGVkOiEwLHBoYXNlOlwibWFpblwiLGZuOmZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhdGUsbj10Lm9wdGlvbnMsbD10Lm5hbWUsYT1uLm1haW5BeGlzLHU9dm9pZCAwPT09YXx8YSxkPW4uYWx0QXhpcyxwPXZvaWQgMCE9PWQmJmQsaD1uLmJvdW5kYXJ5LGY9bi5yb290Qm91bmRhcnksbT1uLmFsdEJvdW5kYXJ5LHY9bi5wYWRkaW5nLHk9bi50ZXRoZXIsZz12b2lkIDA9PT15fHx5LHc9bi50ZXRoZXJPZmZzZXQsYj12b2lkIDA9PT13PzA6dyxDPWd0KGUse2JvdW5kYXJ5Omgscm9vdEJvdW5kYXJ5OmYscGFkZGluZzp2LGFsdEJvdW5kYXJ5Om19KSxTPUIoZS5wbGFjZW1lbnQpLHg9WihlLnBsYWNlbWVudCksST0heCxUPUsoUyksRT1cInhcIj09PVQ/XCJ5XCI6XCJ4XCIsTz1lLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cyxMPWUucmVjdHMucmVmZXJlbmNlLEE9ZS5yZWN0cy5wb3BwZXIsaz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBiP2IoT2JqZWN0LmFzc2lnbih7fSxlLnJlY3RzLHtwbGFjZW1lbnQ6ZS5wbGFjZW1lbnR9KSk6YixfPVwibnVtYmVyXCI9PXR5cGVvZiBrP3ttYWluQXhpczprLGFsdEF4aXM6a306T2JqZWN0LmFzc2lnbih7bWFpbkF4aXM6MCxhbHRBeGlzOjB9LGspLFA9ZS5tb2RpZmllcnNEYXRhLm9mZnNldD9lLm1vZGlmaWVyc0RhdGEub2Zmc2V0W2UucGxhY2VtZW50XTpudWxsLGo9e3g6MCx5OjB9O2lmKE8pe2lmKHUpe3ZhciAkLEQ9XCJ5XCI9PT1UP286cyxIPVwieVwiPT09VD9pOnIsUj1cInlcIj09PVQ/XCJoZWlnaHRcIjpcIndpZHRoXCIsVz1PW1RdLFY9VytDW0RdLEY9Vy1DW0hdLFU9Zz8tQVtSXS8yOjAsSj14PT09Yz9MW1JdOkFbUl0sej14PT09Yz8tQVtSXTotTFtSXSxYPWUuZWxlbWVudHMuYXJyb3csUT1nJiZYP00oWCk6e3dpZHRoOjAsaGVpZ2h0OjB9LHR0PWUubW9kaWZpZXJzRGF0YVtcImFycm93I3BlcnNpc3RlbnRcIl0/ZS5tb2RpZmllcnNEYXRhW1wiYXJyb3cjcGVyc2lzdGVudFwiXS5wYWRkaW5nOnt0b3A6MCxyaWdodDowLGJvdHRvbTowLGxlZnQ6MH0sZXQ9dHRbRF0sbnQ9dHRbSF0sb3Q9RygwLExbUl0sUVtSXSksaXQ9ST9MW1JdLzItVS1vdC1ldC1fLm1haW5BeGlzOkotb3QtZXQtXy5tYWluQXhpcyxydD1JPy1MW1JdLzIrVStvdCtudCtfLm1haW5BeGlzOnorb3QrbnQrXy5tYWluQXhpcyxzdD1lLmVsZW1lbnRzLmFycm93JiZZKGUuZWxlbWVudHMuYXJyb3cpLGx0PXN0P1wieVwiPT09VD9zdC5jbGllbnRUb3B8fDA6c3QuY2xpZW50TGVmdHx8MDowLGF0PW51bGwhPSgkPW51bGw9PVA/dm9pZCAwOlBbVF0pPyQ6MCxjdD1XK3J0LWF0LHV0PUcoZz9OKFYsVytpdC1hdC1sdCk6VixXLGc/cShGLGN0KTpGKTtPW1RdPXV0LGpbVF09dXQtV31pZihwKXt2YXIgZHQscHQ9XCJ4XCI9PT1UP286cyxodD1cInhcIj09PVQ/aTpyLGZ0PU9bRV0sbXQ9XCJ5XCI9PT1FP1wiaGVpZ2h0XCI6XCJ3aWR0aFwiLHZ0PWZ0K0NbcHRdLHl0PWZ0LUNbaHRdLHd0PS0xIT09W28sc10uaW5kZXhPZihTKSxidD1udWxsIT0oZHQ9bnVsbD09UD92b2lkIDA6UFtFXSk/ZHQ6MCxDdD13dD92dDpmdC1MW210XS1BW210XS1idCtfLmFsdEF4aXMsU3Q9d3Q/ZnQrTFttdF0rQVttdF0tYnQtXy5hbHRBeGlzOnl0LHh0PWcmJnd0P2Z1bmN0aW9uKHQsZSxuKXt2YXIgbz1HKHQsZSxuKTtyZXR1cm4gbz5uP246b30oQ3QsZnQsU3QpOkcoZz9DdDp2dCxmdCxnP1N0Onl0KTtPW0VdPXh0LGpbRV09eHQtZnR9ZS5tb2RpZmllcnNEYXRhW2xdPWp9fSxyZXF1aXJlc0lmRXhpc3RzOltcIm9mZnNldFwiXX07ZnVuY3Rpb24gRXQodCxlLG4pe3ZvaWQgMD09PW4mJihuPSExKTt2YXIgbyxpLHI9ayhlKSxzPWsoZSkmJmZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbj1qKGUud2lkdGgpL3Qub2Zmc2V0V2lkdGh8fDEsbz1qKGUuaGVpZ2h0KS90Lm9mZnNldEhlaWdodHx8MTtyZXR1cm4gMSE9PW58fDEhPT1vfShlKSxsPUYoZSksYT1IKHQscyxuKSxjPXtzY3JvbGxMZWZ0OjAsc2Nyb2xsVG9wOjB9LHU9e3g6MCx5OjB9O3JldHVybihyfHwhciYmIW4pJiYoKFwiYm9keVwiIT09TyhlKXx8ZHQobCkpJiYoYz0obz1lKSE9PUwobykmJmsobyk/e3Njcm9sbExlZnQ6KGk9bykuc2Nyb2xsTGVmdCxzY3JvbGxUb3A6aS5zY3JvbGxUb3B9OmN0KG8pKSxrKGUpPygodT1IKGUsITApKS54Kz1lLmNsaWVudExlZnQsdS55Kz1lLmNsaWVudFRvcCk6bCYmKHUueD11dChsKSkpLHt4OmEubGVmdCtjLnNjcm9sbExlZnQtdS54LHk6YS50b3ArYy5zY3JvbGxUb3AtdS55LHdpZHRoOmEud2lkdGgsaGVpZ2h0OmEuaGVpZ2h0fX1mdW5jdGlvbiBPdCh0KXt2YXIgZT1uZXcgTWFwLG49bmV3IFNldCxvPVtdO2Z1bmN0aW9uIGkodCl7bi5hZGQodC5uYW1lKSxbXS5jb25jYXQodC5yZXF1aXJlc3x8W10sdC5yZXF1aXJlc0lmRXhpc3RzfHxbXSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoIW4uaGFzKHQpKXt2YXIgbz1lLmdldCh0KTtvJiZpKG8pfX0pKSxvLnB1c2godCl9cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZS5zZXQodC5uYW1lLHQpfSkpLHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7bi5oYXModC5uYW1lKXx8aSh0KX0pKSxvfXZhciBMdD17cGxhY2VtZW50OlwiYm90dG9tXCIsbW9kaWZpZXJzOltdLHN0cmF0ZWd5OlwiYWJzb2x1dGVcIn07ZnVuY3Rpb24gQXQoKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKyllW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4hZS5zb21lKChmdW5jdGlvbih0KXtyZXR1cm4hKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KX0pKX1mdW5jdGlvbiBrdCh0KXt2b2lkIDA9PT10JiYodD17fSk7dmFyIGU9dCxuPWUuZGVmYXVsdE1vZGlmaWVycyxvPXZvaWQgMD09PW4/W106bixpPWUuZGVmYXVsdE9wdGlvbnMscj12b2lkIDA9PT1pP0x0Omk7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj1yKTt2YXIgaSxzLGw9e3BsYWNlbWVudDpcImJvdHRvbVwiLG9yZGVyZWRNb2RpZmllcnM6W10sb3B0aW9uczpPYmplY3QuYXNzaWduKHt9LEx0LHIpLG1vZGlmaWVyc0RhdGE6e30sZWxlbWVudHM6e3JlZmVyZW5jZTp0LHBvcHBlcjplfSxhdHRyaWJ1dGVzOnt9LHN0eWxlczp7fX0sYT1bXSxjPSExLHU9e3N0YXRlOmwsc2V0T3B0aW9uczpmdW5jdGlvbihuKXt2YXIgaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24obC5vcHRpb25zKTpuO2QoKSxsLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih7fSxyLGwub3B0aW9ucyxpKSxsLnNjcm9sbFBhcmVudHM9e3JlZmVyZW5jZTpBKHQpP2h0KHQpOnQuY29udGV4dEVsZW1lbnQ/aHQodC5jb250ZXh0RWxlbWVudCk6W10scG9wcGVyOmh0KGUpfTt2YXIgcyxjLHA9ZnVuY3Rpb24odCl7dmFyIGU9T3QodCk7cmV0dXJuIEUucmVkdWNlKChmdW5jdGlvbih0LG4pe3JldHVybiB0LmNvbmNhdChlLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQucGhhc2U9PT1ufSkpKX0pLFtdKX0oKHM9W10uY29uY2F0KG8sbC5vcHRpb25zLm1vZGlmaWVycyksYz1zLnJlZHVjZSgoZnVuY3Rpb24odCxlKXt2YXIgbj10W2UubmFtZV07cmV0dXJuIHRbZS5uYW1lXT1uP09iamVjdC5hc3NpZ24oe30sbixlLHtvcHRpb25zOk9iamVjdC5hc3NpZ24oe30sbi5vcHRpb25zLGUub3B0aW9ucyksZGF0YTpPYmplY3QuYXNzaWduKHt9LG4uZGF0YSxlLmRhdGEpfSk6ZSx0fSkse30pLE9iamVjdC5rZXlzKGMpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIGNbdF19KSkpKTtyZXR1cm4gbC5vcmRlcmVkTW9kaWZpZXJzPXAuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbmFibGVkfSkpLGwub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKChmdW5jdGlvbih0KXt2YXIgZT10Lm5hbWUsbj10Lm9wdGlvbnMsbz12b2lkIDA9PT1uP3t9Om4saT10LmVmZmVjdDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBpKXt2YXIgcj1pKHtzdGF0ZTpsLG5hbWU6ZSxpbnN0YW5jZTp1LG9wdGlvbnM6b30pLHM9ZnVuY3Rpb24oKXt9O2EucHVzaChyfHxzKX19KSksdS51cGRhdGUoKX0sZm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXtpZighYyl7dmFyIHQ9bC5lbGVtZW50cyxlPXQucmVmZXJlbmNlLG49dC5wb3BwZXI7aWYoQXQoZSxuKSl7bC5yZWN0cz17cmVmZXJlbmNlOkV0KGUsWShuKSxcImZpeGVkXCI9PT1sLm9wdGlvbnMuc3RyYXRlZ3kpLHBvcHBlcjpNKG4pfSxsLnJlc2V0PSExLGwucGxhY2VtZW50PWwub3B0aW9ucy5wbGFjZW1lbnQsbC5vcmRlcmVkTW9kaWZpZXJzLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiBsLm1vZGlmaWVyc0RhdGFbdC5uYW1lXT1PYmplY3QuYXNzaWduKHt9LHQuZGF0YSl9KSk7Zm9yKHZhciBvPTA7bzxsLm9yZGVyZWRNb2RpZmllcnMubGVuZ3RoO28rKylpZighMCE9PWwucmVzZXQpe3ZhciBpPWwub3JkZXJlZE1vZGlmaWVyc1tvXSxyPWkuZm4scz1pLm9wdGlvbnMsYT12b2lkIDA9PT1zP3t9OnMsZD1pLm5hbWU7XCJmdW5jdGlvblwiPT10eXBlb2YgciYmKGw9cih7c3RhdGU6bCxvcHRpb25zOmEsbmFtZTpkLGluc3RhbmNlOnV9KXx8bCl9ZWxzZSBsLnJlc2V0PSExLG89LTF9fX0sdXBkYXRlOihpPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbih0KXt1LmZvcmNlVXBkYXRlKCksdChsKX0pKX0sZnVuY3Rpb24oKXtyZXR1cm4gc3x8KHM9bmV3IFByb21pc2UoKGZ1bmN0aW9uKHQpe1Byb21pc2UucmVzb2x2ZSgpLnRoZW4oKGZ1bmN0aW9uKCl7cz12b2lkIDAsdChpKCkpfSkpfSkpKSxzfSksZGVzdHJveTpmdW5jdGlvbigpe2QoKSxjPSEwfX07aWYoIUF0KHQsZSkpcmV0dXJuIHU7ZnVuY3Rpb24gZCgpe2EuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQoKX0pKSxhPVtdfXJldHVybiB1LnNldE9wdGlvbnMobikudGhlbigoZnVuY3Rpb24odCl7IWMmJm4ub25GaXJzdFVwZGF0ZSYmbi5vbkZpcnN0VXBkYXRlKHQpfSkpLHV9fXZhciBfdD1rdCgpLFB0PWt0KHtkZWZhdWx0TW9kaWZpZXJzOltpdCxJdCxudCxQLHh0LHd0LFR0LFEsU3RdfSksQnQ9a3Qoe2RlZmF1bHRNb2RpZmllcnM6W2l0LEl0LG50LFBdfSl9LDE5MDoodCxlKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGUuQlJFQUtQT0lOVFM9ZS5DT01CT19CT1hfQUNDRVNTSUJJTElUWV9LRVlfU0VUPWUuU0VMRUNUX0FDQ0VTU0lCSUxJVFlfS0VZX1NFVD1lLlRBQlNfQUNDRVNTSUJJTElUWV9LRVlfU0VUPWUuT1ZFUkxBWV9BQ0NFU1NJQklMSVRZX0tFWV9TRVQ9ZS5EUk9QRE9XTl9BQ0NFU1NJQklMSVRZX0tFWV9TRVQ9ZS5QT1NJVElPTlM9dm9pZCAwLGUuUE9TSVRJT05TPXthdXRvOlwiYXV0b1wiLFwiYXV0by1zdGFydFwiOlwiYXV0by1zdGFydFwiLFwiYXV0by1lbmRcIjpcImF1dG8tZW5kXCIsdG9wOlwidG9wXCIsXCJ0b3AtbGVmdFwiOlwidG9wLXN0YXJ0XCIsXCJ0b3AtcmlnaHRcIjpcInRvcC1lbmRcIixib3R0b206XCJib3R0b21cIixcImJvdHRvbS1sZWZ0XCI6XCJib3R0b20tc3RhcnRcIixcImJvdHRvbS1yaWdodFwiOlwiYm90dG9tLWVuZFwiLHJpZ2h0OlwicmlnaHRcIixcInJpZ2h0LXN0YXJ0XCI6XCJyaWdodC1zdGFydFwiLFwicmlnaHQtZW5kXCI6XCJyaWdodC1lbmRcIixsZWZ0OlwibGVmdFwiLFwibGVmdC1zdGFydFwiOlwibGVmdC1zdGFydFwiLFwibGVmdC1lbmRcIjpcImxlZnQtZW5kXCJ9LGUuRFJPUERPV05fQUNDRVNTSUJJTElUWV9LRVlfU0VUPVtcIkVzY2FwZVwiLFwiQXJyb3dVcFwiLFwiQXJyb3dEb3duXCIsXCJIb21lXCIsXCJFbmRcIixcIkVudGVyXCJdLGUuT1ZFUkxBWV9BQ0NFU1NJQklMSVRZX0tFWV9TRVQ9W1wiRXNjYXBlXCIsXCJUYWJcIl0sZS5UQUJTX0FDQ0VTU0lCSUxJVFlfS0VZX1NFVD1bXCJBcnJvd1VwXCIsXCJBcnJvd0xlZnRcIixcIkFycm93RG93blwiLFwiQXJyb3dSaWdodFwiLFwiSG9tZVwiLFwiRW5kXCJdLGUuU0VMRUNUX0FDQ0VTU0lCSUxJVFlfS0VZX1NFVD1bXCJBcnJvd1VwXCIsXCJBcnJvd0xlZnRcIixcIkFycm93RG93blwiLFwiQXJyb3dSaWdodFwiLFwiSG9tZVwiLFwiRW5kXCIsXCJFc2NhcGVcIixcIkVudGVyXCIsXCJUYWJcIl0sZS5DT01CT19CT1hfQUNDRVNTSUJJTElUWV9LRVlfU0VUPVtcIkFycm93VXBcIixcIkFycm93TGVmdFwiLFwiQXJyb3dEb3duXCIsXCJBcnJvd1JpZ2h0XCIsXCJIb21lXCIsXCJFbmRcIixcIkVzY2FwZVwiLFwiRW50ZXJcIl0sZS5CUkVBS1BPSU5UUz17c206NjQwLG1kOjc2OCxsZzoxMDI0LHhsOjEyODAsXCIyeGxcIjoxNTM2fX0sNDYwOmZ1bmN0aW9uKHQsZSxuKXtcbi8qXG4gKiBIU0FjY29yZGlvblxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHI9big5NjkpLHM9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4sbyl7dmFyIGk9dC5jYWxsKHRoaXMsZSxuLG8pfHx0aGlzO3JldHVybiBpLnRvZ2dsZT1pLmVsLnF1ZXJ5U2VsZWN0b3IoXCIuaHMtYWNjb3JkaW9uLXRvZ2dsZVwiKXx8bnVsbCxpLmNvbnRlbnQ9aS5lbC5xdWVyeVNlbGVjdG9yKFwiLmhzLWFjY29yZGlvbi1jb250ZW50XCIpfHxudWxsLGkuZ3JvdXA9aS5lbC5jbG9zZXN0KFwiLmhzLWFjY29yZGlvbi1ncm91cFwiKXx8bnVsbCxpLmlzQWx3YXlzT3BlbmVkPWkuZ3JvdXAuaGFzQXR0cmlidXRlKFwiZGF0YS1ocy1hY2NvcmRpb24tYWx3YXlzLW9wZW5cIil8fCExLGkudG9nZ2xlJiZpLmNvbnRlbnQmJmkuaW5pdCgpLGl9cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc0FjY29yZGlvbkNvbGxlY3Rpb24sdGhpcyksdGhpcy50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7dC5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIik/dC5oaWRlKCk6dC5zaG93KCl9KSl9LGUucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZ3JvdXAmJiF0aGlzLmlzQWx3YXlzT3BlbmVkJiZ0aGlzLmdyb3VwLnF1ZXJ5U2VsZWN0b3IoXCIuaHMtYWNjb3JkaW9uLmFjdGl2ZVwiKSYmdGhpcy5ncm91cC5xdWVyeVNlbGVjdG9yKFwiLmhzLWFjY29yZGlvbi5hY3RpdmVcIikhPT10aGlzLmVsJiZ3aW5kb3cuJGhzQWNjb3JkaW9uQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09dC5ncm91cC5xdWVyeVNlbGVjdG9yKFwiLmhzLWFjY29yZGlvbi5hY3RpdmVcIil9KSkuZWxlbWVudC5oaWRlKCk7aWYodGhpcy5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIikpcmV0dXJuITE7dGhpcy5lbC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpLHRoaXMuY29udGVudC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIix0aGlzLmNvbnRlbnQuc3R5bGUuaGVpZ2h0PVwiMFwiLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5jb250ZW50LnN0eWxlLmhlaWdodD1cIlwiLmNvbmNhdCh0LmNvbnRlbnQuc2Nyb2xsSGVpZ2h0LFwicHhcIil9KSksKDAsci5hZnRlclRyYW5zaXRpb24pKHRoaXMuY29udGVudCwoZnVuY3Rpb24oKXt0LmNvbnRlbnQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdC5jb250ZW50LnN0eWxlLmhlaWdodD1cIlwiLHQuZmlyZUV2ZW50KFwib3BlblwiLHQuZWwpLCgwLHIuZGlzcGF0Y2gpKFwib3Blbi5ocy5hY2NvcmRpb25cIix0LmVsLHQuZWwpfSkpfSxlLnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZighdGhpcy5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIikpcmV0dXJuITE7dGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLHRoaXMuY29udGVudC5zdHlsZS5oZWlnaHQ9XCJcIi5jb25jYXQodGhpcy5jb250ZW50LnNjcm9sbEhlaWdodCxcInB4XCIpLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5jb250ZW50LnN0eWxlLmhlaWdodD1cIjBcIn0pKSwoMCxyLmFmdGVyVHJhbnNpdGlvbikodGhpcy5jb250ZW50LChmdW5jdGlvbigpe3QuY29udGVudC5zdHlsZS5kaXNwbGF5PVwiXCIsdC5jb250ZW50LnN0eWxlLmhlaWdodD1cIjBcIix0LmZpcmVFdmVudChcImNsb3NlXCIsdC5lbCksKDAsci5kaXNwYXRjaCkoXCJjbG9zZS5ocy5hY2NvcmRpb25cIix0LmVsLHQuZWwpfSkpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc0FjY29yZGlvbkNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO3JldHVybiBuP2U/bjpuLmVsZW1lbnQuZWw6bnVsbH0sZS5zaG93PWZ1bmN0aW9uKHQpe3ZhciBlPXdpbmRvdy4kaHNBY2NvcmRpb25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtlJiZcImJsb2NrXCIhPT1lLmVsZW1lbnQuY29udGVudC5zdHlsZS5kaXNwbGF5JiZlLmVsZW1lbnQuc2hvdygpfSxlLmhpZGU9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc0FjY29yZGlvbkNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO2UmJlwiYmxvY2tcIj09PWUuZWxlbWVudC5jb250ZW50LnN0eWxlLmRpc3BsYXkmJmUuZWxlbWVudC5oaWRlKCl9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzQWNjb3JkaW9uQ29sbGVjdGlvbnx8KHdpbmRvdy4kaHNBY2NvcmRpb25Db2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhzLWFjY29yZGlvbjpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNBY2NvcmRpb25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKX0sZS5vbj1mdW5jdGlvbih0LGUsbil7dmFyIG89d2luZG93LiRoc0FjY29yZGlvbkNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgZT9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpOmUpfSkpO28mJihvLmVsZW1lbnQuZXZlbnRzW3RdPW4pfSxlfShuKDczNykuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7cy5hdXRvSW5pdCgpfSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuSFNBY2NvcmRpb249cyksZS5kZWZhdWx0PXN9LDczNzoodCxlKT0+e1xuLypcbiAqIEhTQmFzZVBsdWdpblxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbil7dGhpcy5lbD10LHRoaXMub3B0aW9ucz1lLHRoaXMuZXZlbnRzPW4sdGhpcy5lbD10LHRoaXMub3B0aW9ucz1lLHRoaXMuZXZlbnRzPXt9fXJldHVybiB0LnByb3RvdHlwZS5jcmVhdGVDb2xsZWN0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIG47dC5wdXNoKHtpZDoobnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWwpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmlkKXx8dC5sZW5ndGgrMSxlbGVtZW50OmV9KX0sdC5wcm90b3R5cGUuZmlyZUV2ZW50PWZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwPT09ZSYmKGU9bnVsbCksdGhpcy5ldmVudHMuaGFzT3duUHJvcGVydHkodCkpcmV0dXJuIHRoaXMuZXZlbnRzW3RdKGUpfSx0LnByb3RvdHlwZS5vbj1mdW5jdGlvbih0LGUpe3RoaXMuZXZlbnRzW3RdPWV9LHR9KCk7ZS5kZWZhdWx0PW59LDYyOTpmdW5jdGlvbih0LGUsbil7XG4vKlxuICogSFNDYXJvdXNlbFxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbyxpLHMsbD10LmNhbGwodGhpcyxlLG4pfHx0aGlzLGE9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNhcm91c2VsXCIpLGM9YT9KU09OLnBhcnNlKGEpOnt9LHU9cihyKHt9LGMpLG4pO3JldHVybiBsLmN1cnJlbnRJbmRleD11LmN1cnJlbnRJbmRleHx8MCxsLmxvYWRpbmdDbGFzc2VzPXUubG9hZGluZ0NsYXNzZXM/XCJcIi5jb25jYXQodS5sb2FkaW5nQ2xhc3Nlcykuc3BsaXQoXCIsXCIpOm51bGwsbC5sb2FkaW5nQ2xhc3Nlc1JlbW92ZT0obnVsbD09PShvPWwubG9hZGluZ0NsYXNzZXMpfHx2b2lkIDA9PT1vP3ZvaWQgMDpvWzBdKT9sLmxvYWRpbmdDbGFzc2VzWzBdLnNwbGl0KFwiIFwiKTpcIm9wYWNpdHktMFwiLGwubG9hZGluZ0NsYXNzZXNBZGQ9KG51bGw9PT0oaT1sLmxvYWRpbmdDbGFzc2VzKXx8dm9pZCAwPT09aT92b2lkIDA6aVsxXSk/bC5sb2FkaW5nQ2xhc3Nlc1sxXS5zcGxpdChcIiBcIik6XCJcIixsLmFmdGVyTG9hZGluZ0NsYXNzZXNBZGQ9KG51bGw9PT0ocz1sLmxvYWRpbmdDbGFzc2VzKXx8dm9pZCAwPT09cz92b2lkIDA6c1syXSk/bC5sb2FkaW5nQ2xhc3Nlc1syXS5zcGxpdChcIiBcIik6XCJcIixsLmlzQXV0b1BsYXk9dm9pZCAwIT09dS5pc0F1dG9QbGF5JiZ1LmlzQXV0b1BsYXksbC5zcGVlZD11LnNwZWVkfHw0ZTMsbC5pc0luZmluaXRlTG9vcD12b2lkIDA9PT11LmlzSW5maW5pdGVMb29wfHx1LmlzSW5maW5pdGVMb29wLGwuaW5uZXI9bC5lbC5xdWVyeVNlbGVjdG9yKFwiLmhzLWNhcm91c2VsLWJvZHlcIil8fG51bGwsbC5zbGlkZXM9bC5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhzLWNhcm91c2VsLXNsaWRlXCIpfHxbXSxsLnByZXY9bC5lbC5xdWVyeVNlbGVjdG9yKFwiLmhzLWNhcm91c2VsLXByZXZcIil8fG51bGwsbC5uZXh0PWwuZWwucXVlcnlTZWxlY3RvcihcIi5ocy1jYXJvdXNlbC1uZXh0XCIpfHxudWxsLGwuZG90cz1sLmVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaHMtY2Fyb3VzZWwtcGFnaW5hdGlvbiA+ICpcIil8fG51bGwsbC5zbGlkZXJXaWR0aD1sLmlubmVyLnBhcmVudEVsZW1lbnQuY2xpZW50V2lkdGgsbC50b3VjaFg9e3N0YXJ0OjAsZW5kOjB9LGwuaW5pdCgpLGx9cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXM7dGhpcy5jcmVhdGVDb2xsZWN0aW9uKHdpbmRvdy4kaHNDYXJvdXNlbENvbGxlY3Rpb24sdGhpcyksdGhpcy5pbm5lciYmKHRoaXMuY2FsY3VsYXRlV2lkdGgoKSx0aGlzLmxvYWRpbmdDbGFzc2VzUmVtb3ZlJiYoXCJzdHJpbmdcIj09dHlwZW9mIHRoaXMubG9hZGluZ0NsYXNzZXNSZW1vdmU/dGhpcy5pbm5lci5jbGFzc0xpc3QucmVtb3ZlKHRoaXMubG9hZGluZ0NsYXNzZXNSZW1vdmUpOih0PXRoaXMuaW5uZXIuY2xhc3NMaXN0KS5yZW1vdmUuYXBwbHkodCx0aGlzLmxvYWRpbmdDbGFzc2VzUmVtb3ZlKSksdGhpcy5sb2FkaW5nQ2xhc3Nlc0FkZCYmKFwic3RyaW5nXCI9PXR5cGVvZiB0aGlzLmxvYWRpbmdDbGFzc2VzQWRkP3RoaXMuaW5uZXIuY2xhc3NMaXN0LmFkZCh0aGlzLmxvYWRpbmdDbGFzc2VzQWRkKTooZT10aGlzLmlubmVyLmNsYXNzTGlzdCkuYWRkLmFwcGx5KGUsdGhpcy5sb2FkaW5nQ2xhc3Nlc0FkZCkpKSx0aGlzLnByZXYmJnRoaXMucHJldi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtuLmdvVG9QcmV2KCksbi5pc0F1dG9QbGF5JiYobi5yZXNldFRpbWVyKCksbi5zZXRUaW1lcigpKX0pKSx0aGlzLm5leHQmJnRoaXMubmV4dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtuLmdvVG9OZXh0KCksbi5pc0F1dG9QbGF5JiYobi5yZXNldFRpbWVyKCksbi5zZXRUaW1lcigpKX0pKSx0aGlzLmRvdHMmJnRoaXMuZG90cy5mb3JFYWNoKChmdW5jdGlvbih0LGUpe3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe24uZ29UbyhlKSxuLmlzQXV0b1BsYXkmJihuLnJlc2V0VGltZXIoKSxuLnNldFRpbWVyKCkpfSkpfSkpLHRoaXMuc2xpZGVzLmxlbmd0aCYmKHRoaXMuYWRkQ3VycmVudENsYXNzKCksdGhpcy5pc0luZmluaXRlTG9vcHx8dGhpcy5hZGREaXNhYmxlZENsYXNzKCksdGhpcy5pc0F1dG9QbGF5JiZ0aGlzLmF1dG9QbGF5KCkpLHRoaXMuaW5uZXImJnRoaXMuYWZ0ZXJMb2FkaW5nQ2xhc3Nlc0FkZCYmc2V0VGltZW91dCgoZnVuY3Rpb24oKXt2YXIgdDtcInN0cmluZ1wiPT10eXBlb2Ygbi5hZnRlckxvYWRpbmdDbGFzc2VzQWRkP24uaW5uZXIuY2xhc3NMaXN0LmFkZChuLmFmdGVyTG9hZGluZ0NsYXNzZXNBZGQpOih0PW4uaW5uZXIuY2xhc3NMaXN0KS5hZGQuYXBwbHkodCxuLmFmdGVyTG9hZGluZ0NsYXNzZXNBZGQpfSkpLHRoaXMuZWwuY2xhc3NMaXN0LmFkZChcImluaXRcIiksdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLChmdW5jdGlvbih0KXtuLnRvdWNoWC5zdGFydD10LmNoYW5nZWRUb3VjaGVzWzBdLnNjcmVlblh9KSksdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwoZnVuY3Rpb24odCl7bi50b3VjaFguZW5kPXQuY2hhbmdlZFRvdWNoZXNbMF0uc2NyZWVuWCxuLmRldGVjdERpcmVjdGlvbigpfSkpLHRoaXMub2JzZXJ2ZVJlc2l6ZSgpfSxlLnByb3RvdHlwZS5vYnNlcnZlUmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztuZXcgUmVzaXplT2JzZXJ2ZXIoKGZ1bmN0aW9uKCl7cmV0dXJuIHQucmVjYWxjdWxhdGVXaWR0aCgpfSkpLm9ic2VydmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIikpfSxlLnByb3RvdHlwZS5jYWxjdWxhdGVXaWR0aD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5pbm5lci5zdHlsZS53aWR0aD1cIlwiLmNvbmNhdCh0aGlzLnNsaWRlcldpZHRoKnRoaXMuc2xpZGVzLmxlbmd0aCxcInB4XCIpLHRoaXMuaW5uZXIuc3R5bGUudHJhbnNmb3JtPVwidHJhbnNsYXRlKC1cIi5jb25jYXQodGhpcy5jdXJyZW50SW5kZXgqdGhpcy5zbGlkZXJXaWR0aCxcInB4LCAwcHgpXCIpLHRoaXMuc2xpZGVzLmZvckVhY2goKGZ1bmN0aW9uKGUpe2Uuc3R5bGUud2lkdGg9XCJcIi5jb25jYXQodC5zbGlkZXJXaWR0aCxcInB4XCIpfSkpfSxlLnByb3RvdHlwZS5hZGRDdXJyZW50Q2xhc3M9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuc2xpZGVzLmZvckVhY2goKGZ1bmN0aW9uKGUsbil7bj09PXQuY3VycmVudEluZGV4P2UuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTplLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIil9KSksdGhpcy5kb3RzJiZ0aGlzLmRvdHMuZm9yRWFjaCgoZnVuY3Rpb24oZSxuKXtuPT09dC5jdXJyZW50SW5kZXg/ZS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpOmUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKX0pKX0sZS5wcm90b3R5cGUuYWRkRGlzYWJsZWRDbGFzcz1mdW5jdGlvbigpe2lmKCF0aGlzLnByZXZ8fCF0aGlzLm5leHQpcmV0dXJuITE7MD09PXRoaXMuY3VycmVudEluZGV4Pyh0aGlzLm5leHQuY2xhc3NMaXN0LnJlbW92ZShcImRpc2FibGVkXCIpLHRoaXMucHJldi5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIikpOnRoaXMuY3VycmVudEluZGV4PT09dGhpcy5zbGlkZXMubGVuZ3RoLTE/KHRoaXMucHJldi5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIiksdGhpcy5uZXh0LmNsYXNzTGlzdC5hZGQoXCJkaXNhYmxlZFwiKSk6KHRoaXMucHJldi5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIiksdGhpcy5uZXh0LmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKSl9LGUucHJvdG90eXBlLmF1dG9QbGF5PWZ1bmN0aW9uKCl7dGhpcy5zZXRUaW1lcigpfSxlLnByb3RvdHlwZS5zZXRUaW1lcj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy50aW1lcj1zZXRJbnRlcnZhbCgoZnVuY3Rpb24oKXt0LmN1cnJlbnRJbmRleD09PXQuc2xpZGVzLmxlbmd0aC0xP3QuZ29UbygwKTp0LmdvVG9OZXh0KCl9KSx0aGlzLnNwZWVkKX0sZS5wcm90b3R5cGUucmVzZXRUaW1lcj1mdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwodGhpcy50aW1lcil9LGUucHJvdG90eXBlLmRldGVjdERpcmVjdGlvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXMudG91Y2hYLGU9dC5zdGFydCxuPXQuZW5kO248ZSYmdGhpcy5nb1RvTmV4dCgpLG4+ZSYmdGhpcy5nb1RvUHJldigpfSxlLnByb3RvdHlwZS5yZWNhbGN1bGF0ZVdpZHRoPWZ1bmN0aW9uKCl7dGhpcy5zbGlkZXJXaWR0aD10aGlzLmlubmVyLnBhcmVudEVsZW1lbnQuY2xpZW50V2lkdGgsdGhpcy5jYWxjdWxhdGVXaWR0aCgpfSxlLnByb3RvdHlwZS5nb1RvUHJldj1mdW5jdGlvbigpezA9PT10aGlzLmN1cnJlbnRJbmRleCYmdGhpcy5pc0luZmluaXRlTG9vcD8odGhpcy5jdXJyZW50SW5kZXg9dGhpcy5zbGlkZXMubGVuZ3RoLTEsdGhpcy5pbm5lci5zdHlsZS50cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLVwiLmNvbmNhdCh0aGlzLmN1cnJlbnRJbmRleCp0aGlzLnNsaWRlcldpZHRoLFwicHgsIDBweClcIiksdGhpcy5hZGRDdXJyZW50Q2xhc3MoKSk6MCE9PXRoaXMuY3VycmVudEluZGV4JiYodGhpcy5jdXJyZW50SW5kZXgtPTEsdGhpcy5pbm5lci5zdHlsZS50cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLVwiLmNvbmNhdCh0aGlzLmN1cnJlbnRJbmRleCp0aGlzLnNsaWRlcldpZHRoLFwicHgsIDBweClcIiksdGhpcy5hZGRDdXJyZW50Q2xhc3MoKSx0aGlzLmFkZERpc2FibGVkQ2xhc3MoKSl9LGUucHJvdG90eXBlLmdvVG9OZXh0PWZ1bmN0aW9uKCl7dGhpcy5jdXJyZW50SW5kZXg9PT10aGlzLnNsaWRlcy5sZW5ndGgtMSYmdGhpcy5pc0luZmluaXRlTG9vcD8odGhpcy5jdXJyZW50SW5kZXg9MCx0aGlzLmlubmVyLnN0eWxlLnRyYW5zZm9ybT1cInRyYW5zbGF0ZSgtXCIuY29uY2F0KHRoaXMuY3VycmVudEluZGV4KnRoaXMuc2xpZGVyV2lkdGgsXCJweCwgMHB4KVwiKSx0aGlzLmFkZEN1cnJlbnRDbGFzcygpKTp0aGlzLmN1cnJlbnRJbmRleDx0aGlzLnNsaWRlcy5sZW5ndGgtMSYmKHRoaXMuY3VycmVudEluZGV4Kz0xLHRoaXMuaW5uZXIuc3R5bGUudHJhbnNmb3JtPVwidHJhbnNsYXRlKC1cIi5jb25jYXQodGhpcy5jdXJyZW50SW5kZXgqdGhpcy5zbGlkZXJXaWR0aCxcInB4LCAwcHgpXCIpLHRoaXMuYWRkQ3VycmVudENsYXNzKCksdGhpcy5hZGREaXNhYmxlZENsYXNzKCkpfSxlLnByb3RvdHlwZS5nb1RvPWZ1bmN0aW9uKHQpe3RoaXMuY3VycmVudEluZGV4PXQsdGhpcy5pbm5lci5zdHlsZS50cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLVwiLmNvbmNhdCh0aGlzLmN1cnJlbnRJbmRleCp0aGlzLnNsaWRlcldpZHRoLFwicHgsIDBweClcIiksdGhpcy5hZGRDdXJyZW50Q2xhc3MoKSx0aGlzLmlzSW5maW5pdGVMb29wfHx0aGlzLmFkZERpc2FibGVkQ2xhc3MoKX0sZS5nZXRJbnN0YW5jZT1mdW5jdGlvbih0LGUpe3ZhciBuPXdpbmRvdy4kaHNDYXJvdXNlbENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO3JldHVybiBuP2U/bjpuLmVsZW1lbnQ6bnVsbH0sZS5hdXRvSW5pdD1mdW5jdGlvbigpe3dpbmRvdy4kaHNDYXJvdXNlbENvbGxlY3Rpb258fCh3aW5kb3cuJGhzQ2Fyb3VzZWxDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtY2Fyb3VzZWxdOm5vdCguLS1wcmV2ZW50LW9uLWxvYWQtaW5pdClcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7d2luZG93LiRoc0Nhcm91c2VsQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSl9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtzLmF1dG9Jbml0KCl9KSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwoZnVuY3Rpb24oKXtpZighd2luZG93LiRoc0Nhcm91c2VsQ29sbGVjdGlvbilyZXR1cm4hMTt3aW5kb3cuJGhzQ2Fyb3VzZWxDb2xsZWN0aW9uLmZvckVhY2goKGZ1bmN0aW9uKHQpe3QuZWxlbWVudC5yZWNhbGN1bGF0ZVdpZHRoKCl9KSl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU0Nhcm91c2VsPXMpLGUuZGVmYXVsdD1zfSw2NTI6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTQ29sbGFwc2VcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciByPW4oOTY5KSxzPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuLG8pe3ZhciBpPXQuY2FsbCh0aGlzLGUsbixvKXx8dGhpcztyZXR1cm4gaS5jb250ZW50SWQ9aS5lbC5kYXRhc2V0LmhzQ29sbGFwc2UsaS5jb250ZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaS5jb250ZW50SWQpLGkuYW5pbWF0aW9uSW5Qcm9jZXNzPSExLGkuY29udGVudCYmaS5pbml0KCksaX1yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzQ29sbGFwc2VDb2xsZWN0aW9uLHRoaXMpLHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7dC5jb250ZW50LmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIik/dC5oaWRlKCk6dC5zaG93KCl9KSl9LGUucHJvdG90eXBlLmhpZGVBbGxNZWdhTWVudUl0ZW1zPWZ1bmN0aW9uKCl7dGhpcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaHMtbWVnYS1tZW51LWNvbnRlbnQuYmxvY2tcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5jbGFzc0xpc3QucmVtb3ZlKFwiYmxvY2tcIiksdC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpfSkpfSxlLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmFuaW1hdGlvbkluUHJvY2Vzc3x8dGhpcy5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKXJldHVybiExO3RoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzPSEwLHRoaXMuZWwuY2xhc3NMaXN0LmFkZChcIm9wZW5cIiksdGhpcy5jb250ZW50LmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpLHRoaXMuY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpLHRoaXMuY29udGVudC5zdHlsZS5oZWlnaHQ9XCIwXCIsc2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LmNvbnRlbnQuc3R5bGUuaGVpZ2h0PVwiXCIuY29uY2F0KHQuY29udGVudC5zY3JvbGxIZWlnaHQsXCJweFwiKSx0LmZpcmVFdmVudChcImJlZm9yZU9wZW5cIix0LmVsKSwoMCxyLmRpc3BhdGNoKShcImJlZm9yZU9wZW4uaHMuY29sbGFwc2VcIix0LmVsLHQuZWwpfSkpLCgwLHIuYWZ0ZXJUcmFuc2l0aW9uKSh0aGlzLmNvbnRlbnQsKGZ1bmN0aW9uKCl7dC5jb250ZW50LnN0eWxlLmhlaWdodD1cIlwiLHQuZmlyZUV2ZW50KFwib3BlblwiLHQuZWwpLCgwLHIuZGlzcGF0Y2gpKFwib3Blbi5ocy5jb2xsYXBzZVwiLHQuZWwsdC5lbCksdC5hbmltYXRpb25JblByb2Nlc3M9ITF9KSl9LGUucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzfHwhdGhpcy5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKXJldHVybiExO3RoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzPSEwLHRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIiksdGhpcy5jb250ZW50LnN0eWxlLmhlaWdodD1cIlwiLmNvbmNhdCh0aGlzLmNvbnRlbnQuc2Nyb2xsSGVpZ2h0LFwicHhcIiksc2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LmNvbnRlbnQuc3R5bGUuaGVpZ2h0PVwiMFwifSkpLHRoaXMuY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKSwoMCxyLmFmdGVyVHJhbnNpdGlvbikodGhpcy5jb250ZW50LChmdW5jdGlvbigpe3QuY29udGVudC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpLHQuY29udGVudC5zdHlsZS5oZWlnaHQ9XCJcIix0LmZpcmVFdmVudChcImhpZGVcIix0LmVsKSwoMCxyLmRpc3BhdGNoKShcImhpZGUuaHMuY29sbGFwc2VcIix0LmVsLHQuZWwpLHQuYW5pbWF0aW9uSW5Qcm9jZXNzPSExfSkpLHRoaXMuY29udGVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhzLW1lZ2EtbWVudS1jb250ZW50LmJsb2NrXCIpLmxlbmd0aCYmdGhpcy5oaWRlQWxsTWVnYU1lbnVJdGVtcygpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9ITEpO3ZhciBuPXdpbmRvdy4kaHNDb2xsYXBzZUNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO3JldHVybiBuP2U/bjpuLmVsZW1lbnQuZWw6bnVsbH0sZS5hdXRvSW5pdD1mdW5jdGlvbigpe3dpbmRvdy4kaHNDb2xsYXBzZUNvbGxlY3Rpb258fCh3aW5kb3cuJGhzQ29sbGFwc2VDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhzLWNvbGxhcHNlLXRvZ2dsZTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNDb2xsYXBzZUNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSl8fG5ldyBlKHQpfSkpfSxlLnNob3c9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc0NvbGxhcHNlQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7ZSYmZS5lbGVtZW50LmNvbnRlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGlkZGVuXCIpJiZlLmVsZW1lbnQuc2hvdygpfSxlLmhpZGU9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc0NvbGxhcHNlQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7ZSYmIWUuZWxlbWVudC5jb250ZW50LmNsYXNzTGlzdC5jb250YWlucyhcImhpZGRlblwiKSYmZS5lbGVtZW50LmhpZGUoKX0sZS5vbj1mdW5jdGlvbih0LGUsbil7dmFyIG89d2luZG93LiRoc0NvbGxhcHNlQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZSl9KSk7byYmKG8uZWxlbWVudC5ldmVudHNbdF09bil9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtzLmF1dG9Jbml0KCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU0NvbGxhcHNlPXMpLGUuZGVmYXVsdD1zfSwyMzpmdW5jdGlvbih0LGUsbil7XG4vKlxuICogSFNDb21ib0JveFxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHM9dGhpcyYmdGhpcy5fX2F3YWl0ZXJ8fGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVybiBuZXcobnx8KG49UHJvbWlzZSkpKChmdW5jdGlvbihpLHIpe2Z1bmN0aW9uIHModCl7dHJ5e2Eoby5uZXh0KHQpKX1jYXRjaCh0KXtyKHQpfX1mdW5jdGlvbiBsKHQpe3RyeXthKG8udGhyb3codCkpfWNhdGNoKHQpe3IodCl9fWZ1bmN0aW9uIGEodCl7dmFyIGU7dC5kb25lP2kodC52YWx1ZSk6KGU9dC52YWx1ZSxlIGluc3RhbmNlb2Ygbj9lOm5ldyBuKChmdW5jdGlvbih0KXt0KGUpfSkpKS50aGVuKHMsbCl9YSgobz1vLmFwcGx5KHQsZXx8W10pKS5uZXh0KCkpfSkpfSxsPXRoaXMmJnRoaXMuX19nZW5lcmF0b3J8fGZ1bmN0aW9uKHQsZSl7dmFyIG4sbyxpLHIscz17bGFiZWw6MCxzZW50OmZ1bmN0aW9uKCl7aWYoMSZpWzBdKXRocm93IGlbMV07cmV0dXJuIGlbMV19LHRyeXM6W10sb3BzOltdfTtyZXR1cm4gcj17bmV4dDpsKDApLHRocm93OmwoMSkscmV0dXJuOmwoMil9LFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKHJbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSkscjtmdW5jdGlvbiBsKGwpe3JldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24obCl7aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtmb3IoO3ImJihyPTAsbFswXSYmKHM9MCkpLHM7KXRyeXtpZihuPTEsbyYmKGk9MiZsWzBdP28ucmV0dXJuOmxbMF0/by50aHJvd3x8KChpPW8ucmV0dXJuKSYmaS5jYWxsKG8pLDApOm8ubmV4dCkmJiEoaT1pLmNhbGwobyxsWzFdKSkuZG9uZSlyZXR1cm4gaTtzd2l0Y2gobz0wLGkmJihsPVsyJmxbMF0saS52YWx1ZV0pLGxbMF0pe2Nhc2UgMDpjYXNlIDE6aT1sO2JyZWFrO2Nhc2UgNDpyZXR1cm4gcy5sYWJlbCsrLHt2YWx1ZTpsWzFdLGRvbmU6ITF9O2Nhc2UgNTpzLmxhYmVsKyssbz1sWzFdLGw9WzBdO2NvbnRpbnVlO2Nhc2UgNzpsPXMub3BzLnBvcCgpLHMudHJ5cy5wb3AoKTtjb250aW51ZTtkZWZhdWx0OmlmKCEoaT1zLnRyeXMsKGk9aS5sZW5ndGg+MCYmaVtpLmxlbmd0aC0xXSl8fDYhPT1sWzBdJiYyIT09bFswXSkpe3M9MDtjb250aW51ZX1pZigzPT09bFswXSYmKCFpfHxsWzFdPmlbMF0mJmxbMV08aVszXSkpe3MubGFiZWw9bFsxXTticmVha31pZig2PT09bFswXSYmcy5sYWJlbDxpWzFdKXtzLmxhYmVsPWlbMV0saT1sO2JyZWFrfWlmKGkmJnMubGFiZWw8aVsyXSl7cy5sYWJlbD1pWzJdLHMub3BzLnB1c2gobCk7YnJlYWt9aVsyXSYmcy5vcHMucG9wKCkscy50cnlzLnBvcCgpO2NvbnRpbnVlfWw9ZS5jYWxsKHQscyl9Y2F0Y2godCl7bD1bNix0XSxvPTB9ZmluYWxseXtuPWk9MH1pZig1JmxbMF0pdGhyb3cgbFsxXTtyZXR1cm57dmFsdWU6bFswXT9sWzFdOnZvaWQgMCxkb25lOiEwfX0oW2wsYV0pfX19LGE9dGhpcyYmdGhpcy5fX3NwcmVhZEFycmF5fHxmdW5jdGlvbih0LGUsbil7aWYobnx8Mj09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciBvLGk9MCxyPWUubGVuZ3RoO2k8cjtpKyspIW8mJmkgaW4gZXx8KG98fChvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsMCxpKSksb1tpXT1lW2ldKTtyZXR1cm4gdC5jb25jYXQob3x8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgYz1uKDk2OSksdT1uKDczNyksZD1uKDE5MCkscD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG8saSxzLGwsYSxjLHUsZCxwLGgsZixtLHYseSxnLHcsYixDLFMseCxJLFQsRT10LmNhbGwodGhpcyxlLG4pfHx0aGlzLE89ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveFwiKSxMPU8/SlNPTi5wYXJzZShPKTp7fSxBPXIocih7fSxMKSxuKTtyZXR1cm4gRS5nYXA9NSxFLnZpZXdwb3J0PW51bGwhPT0obz1cInN0cmluZ1wiPT10eXBlb2YobnVsbD09QT92b2lkIDA6QS52aWV3cG9ydCk/ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihudWxsPT1BP3ZvaWQgMDpBLnZpZXdwb3J0KTpudWxsPT1BP3ZvaWQgMDpBLnZpZXdwb3J0KSYmdm9pZCAwIT09bz9vOm51bGwsRS5wcmV2ZW50VmlzaWJpbGl0eT1udWxsIT09KGk9bnVsbD09QT92b2lkIDA6QS5wcmV2ZW50VmlzaWJpbGl0eSkmJnZvaWQgMCE9PWkmJmksRS5hcGlVcmw9bnVsbCE9PShzPW51bGw9PUE/dm9pZCAwOkEuYXBpVXJsKSYmdm9pZCAwIT09cz9zOm51bGwsRS5hcGlEYXRhUGFydD1udWxsIT09KGw9bnVsbD09QT92b2lkIDA6QS5hcGlEYXRhUGFydCkmJnZvaWQgMCE9PWw/bDpudWxsLEUuYXBpUXVlcnk9bnVsbCE9PShhPW51bGw9PUE/dm9pZCAwOkEuYXBpUXVlcnkpJiZ2b2lkIDAhPT1hP2E6bnVsbCxFLmFwaVNlYXJjaFF1ZXJ5PW51bGwhPT0oYz1udWxsPT1BP3ZvaWQgMDpBLmFwaVNlYXJjaFF1ZXJ5KSYmdm9pZCAwIT09Yz9jOm51bGwsRS5hcGlIZWFkZXJzPW51bGwhPT0odT1udWxsPT1BP3ZvaWQgMDpBLmFwaUhlYWRlcnMpJiZ2b2lkIDAhPT11P3U6e30sRS5hcGlHcm91cEZpZWxkPW51bGwhPT0oZD1udWxsPT1BP3ZvaWQgMDpBLmFwaUdyb3VwRmllbGQpJiZ2b2lkIDAhPT1kP2Q6bnVsbCxFLm91dHB1dEl0ZW1UZW1wbGF0ZT1udWxsIT09KHA9bnVsbD09QT92b2lkIDA6QS5vdXRwdXRJdGVtVGVtcGxhdGUpJiZ2b2lkIDAhPT1wP3A6JzxkaXYgY2xhc3M9XCJjdXJzb3ItcG9pbnRlciBweS0yIHB4LTQgdy1mdWxsIHRleHQtc20gdGV4dC1ncmF5LTgwMCBob3ZlcjpiZy1ncmF5LTEwMCByb3VuZGVkLWxnIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpiZy1ncmF5LTEwMCBkYXJrOmJnLXNsYXRlLTkwMCBkYXJrOmhvdmVyOmJnLXNsYXRlLTgwMCBkYXJrOnRleHQtZ3JheS0yMDAgZGFyazpmb2N1czpiZy1zbGF0ZS04MDBcIiBkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbT5cXG5cXHRcXHRcXHQ8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyIHctZnVsbFwiPlxcblxcdFxcdFxcdFxcdDxzcGFuIGRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0Pjwvc3Bhbj5cXG5cXHRcXHRcXHRcXHQ8c3BhbiBjbGFzcz1cImhpZGRlbiBocy1jb21iby1ib3gtc2VsZWN0ZWQ6YmxvY2tcIj5cXG5cXHRcXHRcXHRcXHRcXHQ8c3ZnIGNsYXNzPVwiZmxleC1zaHJpbmstMCBzaXplLTMuNSB0ZXh0LWJsdWUtNjAwIGRhcms6dGV4dC1ibHVlLTUwMFwiIHhtbG5zPVwiaHR0cDoudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlLXdpZHRoPVwiMlwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPlxcblxcdFxcdFxcdFxcdFxcdFxcdDxwb2x5bGluZSBwb2ludHM9XCIyMCA2IDkgMTcgNCAxMlwiPjwvcG9seWxpbmU+XFxuXFx0XFx0XFx0XFx0XFx0PC9zdmc+XFxuXFx0XFx0XFx0XFx0PC9zcGFuPlxcblxcdFxcdFxcdDwvZGl2PlxcblxcdFxcdDwvZGl2PicsRS5vdXRwdXRFbXB0eVRlbXBsYXRlPW51bGwhPT0oaD1udWxsPT1BP3ZvaWQgMDpBLm91dHB1dEVtcHR5VGVtcGxhdGUpJiZ2b2lkIDAhPT1oP2g6JzxkaXYgY2xhc3M9XCJweS0yIHB4LTQgdy1mdWxsIHRleHQtc20gdGV4dC1ncmF5LTgwMCByb3VuZGVkLWxnIGRhcms6Ymctc2xhdGUtOTAwIGRhcms6dGV4dC1ncmF5LTIwMFwiPk5vdGhpbmcgZm91bmQuLi48L2Rpdj4nLEUub3V0cHV0TG9hZGVyVGVtcGxhdGU9bnVsbCE9PShmPW51bGw9PUE/dm9pZCAwOkEub3V0cHV0TG9hZGVyVGVtcGxhdGUpJiZ2b2lkIDAhPT1mP2Y6JzxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBweS0yIHB4LTQgdGV4dC1zbSB0ZXh0LWdyYXktODAwIHJvdW5kZWQtbGcgYmctd2hpdGUgZGFyazpiZy1zbGF0ZS05MDAgZGFyazp0ZXh0LWdyYXktMjAwXCI+XFxuXFx0XFx0XFx0XFx0PGRpdiBjbGFzcz1cImFuaW1hdGUtc3BpbiBpbmxpbmUtYmxvY2sgc2l6ZS02IGJvcmRlci1bM3B4XSBib3JkZXItY3VycmVudCBib3JkZXItdC10cmFuc3BhcmVudCB0ZXh0LWJsdWUtNjAwIHJvdW5kZWQtZnVsbCBkYXJrOnRleHQtYmx1ZS01MDBcIiByb2xlPVwic3RhdHVzXCIgYXJpYS1sYWJlbD1cImxvYWRpbmdcIj5cXG5cXHRcXHRcXHRcXHRcXHQ8c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5Mb2FkaW5nLi4uPC9zcGFuPlxcblxcdFxcdFxcdFxcdDwvZGl2PlxcblxcdFxcdFxcdDwvZGl2PicsRS5ncm91cGluZ1R5cGU9bnVsbCE9PShtPW51bGw9PUE/dm9pZCAwOkEuZ3JvdXBpbmdUeXBlKSYmdm9pZCAwIT09bT9tOm51bGwsRS5ncm91cGluZ1RpdGxlVGVtcGxhdGU9bnVsbCE9PSh2PW51bGw9PUE/dm9pZCAwOkEuZ3JvdXBpbmdUaXRsZVRlbXBsYXRlKSYmdm9pZCAwIT09dj92OlwiZGVmYXVsdFwiPT09RS5ncm91cGluZ1R5cGU/JzxkaXYgY2xhc3M9XCJibG9jayBtYi0xIHRleHQteHMgZm9udC1zZW1pYm9sZCB1cHBlcmNhc2UgdGV4dC1ibHVlLTYwMCBkYXJrOnRleHQtYmx1ZS01MDBcIj48L2Rpdj4nOic8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInB5LTIgcHgtMyBpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgZ2FwLXgtMiB0ZXh0LXNtIGZvbnQtc2VtaWJvbGQgd2hpdGVzcGFjZS1ub3dyYXAgcm91bmRlZC1sZyBib3JkZXIgYm9yZGVyLXRyYW5zcGFyZW50IGJnLWJsdWUtNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctYmx1ZS03MDAgZGlzYWJsZWQ6b3BhY2l0eS01MCBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lXCI+PC9idXR0b24+JyxFLnRhYnNXcmFwcGVyVGVtcGxhdGU9bnVsbCE9PSh5PW51bGw9PUE/dm9pZCAwOkEudGFic1dyYXBwZXJUZW1wbGF0ZSkmJnZvaWQgMCE9PXk/eTonPGRpdiBjbGFzcz1cIm92ZXJmbG93LXgtYXV0byBwLTRcIj48L2Rpdj4nLEUucHJldmVudFNlbGVjdGlvbj1udWxsIT09KGc9bnVsbD09QT92b2lkIDA6QS5wcmV2ZW50U2VsZWN0aW9uKSYmdm9pZCAwIT09ZyYmZyxFLmlzT3Blbk9uRm9jdXM9bnVsbCE9PSh3PW51bGw9PUE/dm9pZCAwOkEuaXNPcGVuT25Gb2N1cykmJnZvaWQgMCE9PXcmJncsRS5pbnB1dD1udWxsIT09KGI9RS5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtY29tYm8tYm94LWlucHV0XVwiKSkmJnZvaWQgMCE9PWI/YjpudWxsLEUub3V0cHV0PW51bGwhPT0oQz1FLmVsLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb21iby1ib3gtb3V0cHV0XVwiKSkmJnZvaWQgMCE9PUM/QzpudWxsLEUuaXRlbXNXcmFwcGVyPW51bGwhPT0oUz1FLmVsLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb21iby1ib3gtb3V0cHV0LWl0ZW1zLXdyYXBwZXJdXCIpKSYmdm9pZCAwIT09Uz9TOm51bGwsRS5pdGVtcz1udWxsIT09KHg9QXJyYXkuZnJvbShFLmVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1jb21iby1ib3gtb3V0cHV0LWl0ZW1dXCIpKSkmJnZvaWQgMCE9PXg/eDpbXSxFLnRhYnM9W10sRS50b2dnbGU9bnVsbCE9PShJPUUuZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLWNvbWJvLWJveC10b2dnbGVdXCIpKSYmdm9pZCAwIT09ST9JOm51bGwsRS5vdXRwdXRQbGFjZWhvbGRlcj1udWxsLEUuc2VsZWN0ZWQ9RS52YWx1ZT1udWxsIT09KFQ9RS5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtY29tYm8tYm94LWlucHV0XVwiKS52YWx1ZSkmJnZvaWQgMCE9PVQ/VDpcIlwiLEUuaXNPcGVuZWQ9ITEsRS5pc0N1cnJlbnQ9ITEsRS5hbmltYXRpb25JblByb2Nlc3M9ITEsRS5zZWxlY3RlZEdyb3VwPVwiYWxsXCIsRS5pbml0KCksRX1yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbix0aGlzKSx0aGlzLmJ1aWxkKCl9LGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKCl7dGhpcy5idWlsZElucHV0KCksdGhpcy5ncm91cGluZ1R5cGUmJnRoaXMuc2V0R3JvdXBzKCksdGhpcy5idWlsZEl0ZW1zKCksdGhpcy5wcmV2ZW50VmlzaWJpbGl0eSYmKHRoaXMuaXNPcGVuZWQ9ITAsdGhpcy5yZWNhbGN1bGF0ZURpcmVjdGlvbigpKSx0aGlzLnRvZ2dsZSYmdGhpcy5idWlsZFRvZ2dsZSgpfSxlLnByb3RvdHlwZS5zZXRSZXN1bHRBbmRSZW5kZXI9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9XCJcIiksdGhpcy5zZXRSZXN1bHRzKHQpLHRoaXMuYXBpU2VhcmNoUXVlcnkmJnRoaXMuaXRlbXNGcm9tSnNvbigpfSxlLnByb3RvdHlwZS5idWlsZElucHV0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmlzT3Blbk9uRm9jdXMmJnRoaXMuaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsKGZ1bmN0aW9uKCl7dC5pc09wZW5lZHx8KHQuc2V0UmVzdWx0QW5kUmVuZGVyKCksdC5vcGVuKCkpfSkpLHRoaXMuaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsKDAsYy5kZWJvdW5jZSkoKGZ1bmN0aW9uKGUpe3Quc2V0UmVzdWx0QW5kUmVuZGVyKGUudGFyZ2V0LnZhbHVlKSx0LmlzT3BlbmVkfHx0Lm9wZW4oKX0pKSl9LGUucHJvdG90eXBlLmJ1aWxkSXRlbXM9ZnVuY3Rpb24oKXt0aGlzLmFwaVVybD90aGlzLml0ZW1zRnJvbUpzb24oKToodGhpcy5pdGVtc1dyYXBwZXI/dGhpcy5pdGVtc1dyYXBwZXIuaW5uZXJIVE1MPVwiXCI6dGhpcy5vdXRwdXQuaW5uZXJIVE1MPVwiXCIsdGhpcy5pdGVtc0Zyb21IdG1sKCkpfSxlLnByb3RvdHlwZS5zZXRSZXN1bHRzPWZ1bmN0aW9uKHQpe3RoaXMudmFsdWU9dCx0aGlzLnJlc3VsdEl0ZW1zKCksdGhpcy5oYXNWaXNpYmxlSXRlbXMoKT90aGlzLmRlc3Ryb3lPdXRwdXRQbGFjZWhvbGRlcigpOnRoaXMuYnVpbGRPdXRwdXRQbGFjZWhvbGRlcigpfSxlLnByb3RvdHlwZS5pc0l0ZW1FeGlzdHM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaXRlbXMuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuIEFycmF5LmZyb20oZS5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XVwiKSkuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtc2VhcmNoLXRleHRcIik9PT10W2UuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtb3V0cHV0LWl0ZW0tZmllbGRcIildfSkpfSkpfSxlLnByb3RvdHlwZS5pc1RleHRFeGlzdHM9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQudG9Mb3dlckNhc2UoKX0pKTtyZXR1cm4gQXJyYXkuZnJvbSh0LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1jb21iby1ib3gtc2VhcmNoLXRleHRdXCIpKS5zb21lKChmdW5jdGlvbih0KXtyZXR1cm4gbi5pbmNsdWRlcyh0LmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XCIpLnRvTG93ZXJDYXNlKCkpfSkpfSxlLnByb3RvdHlwZS5pc1RleHRFeGlzdHNBbnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkuZnJvbSh0LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1jb21iby1ib3gtc2VhcmNoLXRleHRdXCIpKS5zb21lKChmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1zZWFyY2gtdGV4dFwiKS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGUudG9Mb3dlckNhc2UoKSl9KSl9LGUucHJvdG90eXBlLnZhbHVlc0J5U2VsZWN0b3I9ZnVuY3Rpb24odCl7cmV0dXJuIEFycmF5LmZyb20odC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XVwiKSkucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiBhKGEoW10sdCwhMCksW2UuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtc2VhcmNoLXRleHRcIildLCExKX0pLFtdKX0sZS5wcm90b3R5cGUuYnVpbGRPdXRwdXRMb2FkZXI9ZnVuY3Rpb24oKXtpZih0aGlzLm91dHB1dExvYWRlcilyZXR1cm4hMTt0aGlzLm91dHB1dExvYWRlcj0oMCxjLmh0bWxUb0VsZW1lbnQpKHRoaXMub3V0cHV0TG9hZGVyVGVtcGxhdGUpLHRoaXMuaXRlbXMubGVuZ3RofHx0aGlzLm91dHB1dFBsYWNlaG9sZGVyPyh0aGlzLm91dHB1dExvYWRlci5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUudG9wPVwiMFwiLHRoaXMub3V0cHV0TG9hZGVyLnN0eWxlLmJvdHRvbT1cIjBcIix0aGlzLm91dHB1dExvYWRlci5zdHlsZS5sZWZ0PVwiMFwiLHRoaXMub3V0cHV0TG9hZGVyLnN0eWxlLnJpZ2h0PVwiMFwiLHRoaXMub3V0cHV0TG9hZGVyLnN0eWxlLnpJbmRleD1cIjJcIik6KHRoaXMub3V0cHV0TG9hZGVyLnN0eWxlLnBvc2l0aW9uPVwiXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUudG9wPVwiXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUuYm90dG9tPVwiXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUubGVmdD1cIlwiLHRoaXMub3V0cHV0TG9hZGVyLnN0eWxlLnJpZ2h0PVwiXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUuekluZGV4PVwiXCIsdGhpcy5vdXRwdXRMb2FkZXIuc3R5bGUuaGVpZ2h0PVwiMzBweFwiKSx0aGlzLm91dHB1dC5hcHBlbmQodGhpcy5vdXRwdXRMb2FkZXIpfSxlLnByb3RvdHlwZS5kZXN0cm95T3V0cHV0TG9hZGVyPWZ1bmN0aW9uKCl7dGhpcy5vdXRwdXRMb2FkZXImJnRoaXMub3V0cHV0TG9hZGVyLnJlbW92ZSgpLHRoaXMub3V0cHV0TG9hZGVyPW51bGx9LGUucHJvdG90eXBlLml0ZW1zRnJvbUpzb249ZnVuY3Rpb24oKXtyZXR1cm4gcyh0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIHQsZSxuLG8saSxyPXRoaXM7cmV0dXJuIGwodGhpcywoZnVuY3Rpb24ocyl7c3dpdGNoKHMubGFiZWwpe2Nhc2UgMDp0aGlzLmJ1aWxkT3V0cHV0TG9hZGVyKCkscy5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gcy50cnlzLnB1c2goWzEsNCwsNV0pLHQ9XCJcIi5jb25jYXQodGhpcy5hcGlRdWVyeSksZT1cIlwiLmNvbmNhdCh0aGlzLmFwaVNlYXJjaFF1ZXJ5LFwiPVwiKS5jb25jYXQodGhpcy52YWx1ZS50b0xvd2VyQ2FzZSgpKSxuPXRoaXMuYXBpVXJsLHRoaXMuYXBpUXVlcnkmJnRoaXMuYXBpU2VhcmNoUXVlcnk/bis9XCI/XCIuY29uY2F0KGUsXCImXCIpLmNvbmNhdCh0KTp0aGlzLmFwaVF1ZXJ5P24rPVwiP1wiLmNvbmNhdCh0KTp0aGlzLmFwaVNlYXJjaFF1ZXJ5JiYobis9XCI/XCIuY29uY2F0KGUpKSxbNCxmZXRjaChuLHRoaXMuYXBpSGVhZGVycyldO2Nhc2UgMjpyZXR1cm5bNCxzLnNlbnQoKS5qc29uKCldO2Nhc2UgMzpyZXR1cm4gbz1zLnNlbnQoKSx0aGlzLmFwaURhdGFQYXJ0JiYobz1vW3RoaXMuYXBpRGF0YVBhcnRdKSx0aGlzLmFwaVNlYXJjaFF1ZXJ5JiYodGhpcy5pdGVtcz1bXSksdGhpcy5pdGVtc1dyYXBwZXI/dGhpcy5pdGVtc1dyYXBwZXIuaW5uZXJIVE1MPVwiXCI6dGhpcy5vdXRwdXQuaW5uZXJIVE1MPVwiXCIsXCJ0YWJzXCI9PT10aGlzLmdyb3VwaW5nVHlwZT8odGhpcy5zZXRBcGlHcm91cHMobyksdGhpcy5ncm91cFRhYnNSZW5kZXIoKSx0aGlzLmpzb25JdGVtc1JlbmRlcihvKSk6XCJkZWZhdWx0XCI9PT10aGlzLmdyb3VwaW5nVHlwZT8odGhpcy5zZXRBcGlHcm91cHMobyksdGhpcy5ncm91cHMuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGU9KDAsYy5odG1sVG9FbGVtZW50KShyLmdyb3VwaW5nVGl0bGVUZW1wbGF0ZSk7ZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1ncm91cC10aXRsZVwiLHQubmFtZSksZS5jbGFzc0xpc3QuYWRkKFwiLS1leGNsdWRlLWFjY2Vzc2liaWxpdHlcIiksZS5pbm5lclRleHQ9dC50aXRsZTt2YXIgbj1vLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIGVbci5hcGlHcm91cEZpZWxkXT09PXQubmFtZX0pKTtyLml0ZW1zV3JhcHBlcj9yLml0ZW1zV3JhcHBlci5hcHBlbmQoZSk6ci5vdXRwdXQuYXBwZW5kKGUpLHIuanNvbkl0ZW1zUmVuZGVyKG4pfSkpKTp0aGlzLmpzb25JdGVtc1JlbmRlcihvKSx0aGlzLnNldFJlc3VsdHModGhpcy5pbnB1dC52YWx1ZSksWzMsNV07Y2FzZSA0OnJldHVybiBpPXMuc2VudCgpLGNvbnNvbGUuZXJyb3IoaSksWzMsNV07Y2FzZSA1OnJldHVybiB0aGlzLmRlc3Ryb3lPdXRwdXRMb2FkZXIoKSxbMl19fSkpfSkpfSxlLnByb3RvdHlwZS5qc29uSXRlbXNSZW5kZXI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0LmZvckVhY2goKGZ1bmN0aW9uKHQsbil7aWYoZS5pc0l0ZW1FeGlzdHModCkpcmV0dXJuITE7dmFyIG89KDAsYy5odG1sVG9FbGVtZW50KShlLm91dHB1dEl0ZW1UZW1wbGF0ZSk7by5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XVwiKS5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbixvO2UudGV4dENvbnRlbnQ9bnVsbCE9PShuPXRbZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbS1maWVsZFwiKV0pJiZ2b2lkIDAhPT1uP246XCJcIixlLnNldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XCIsbnVsbCE9PShvPXRbZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbS1maWVsZFwiKV0pJiZ2b2lkIDAhPT1vP286XCJcIil9KSksby5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtY29tYm8tYm94LW91dHB1dC1pdGVtLWF0dHJdXCIpLmZvckVhY2goKGZ1bmN0aW9uKGUpe0pTT04ucGFyc2UoZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbS1hdHRyXCIpKS5mb3JFYWNoKChmdW5jdGlvbihuKXtlLnNldEF0dHJpYnV0ZShuLmF0dHIsdFtuLnZhbHVlRnJvbV0pfSkpfSkpLG8uc2V0QXR0cmlidXRlKFwidGFiSW5kZXhcIixcIlwiLmNvbmNhdChuKSksXCJ0YWJzXCIhPT1lLmdyb3VwaW5nVHlwZSYmXCJkZWZhdWx0XCIhPT1lLmdyb3VwaW5nVHlwZXx8by5zZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbVwiLCd7XCJncm91cFwiOiB7XCJuYW1lXCI6IFwiJy5jb25jYXQodFtlLmFwaUdyb3VwRmllbGRdLCdcIiwgXCJ0aXRsZVwiOiBcIicpLmNvbmNhdCh0W2UuYXBpR3JvdXBGaWVsZF0sJ1wifX0nKSksZS5pdGVtcz1hKGEoW10sZS5pdGVtcywhMCksW29dLCExKSxlLnByZXZlbnRTZWxlY3Rpb258fG8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7ZS5jbG9zZShvLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb21iby1ib3gtdmFsdWVdXCIpLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XCIpKSxlLnNldFNlbGVjdGVkQnlWYWx1ZShlLnZhbHVlc0J5U2VsZWN0b3IobykpfSkpLGUuYXBwZW5kSXRlbXNUb1dyYXBwZXIobyl9KSl9LGUucHJvdG90eXBlLnNldEdyb3Vwcz1mdW5jdGlvbigpe3ZhciB0PVtdO3RoaXMuaXRlbXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49SlNPTi5wYXJzZShlLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LW91dHB1dC1pdGVtXCIpKS5ncm91cDt0LnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybihudWxsPT10P3ZvaWQgMDp0Lm5hbWUpPT09bi5uYW1lfSkpfHx0LnB1c2gobil9KSksdGhpcy5ncm91cHM9dH0sZS5wcm90b3R5cGUuc2V0Q3VycmVudD1mdW5jdGlvbigpe3dpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb24ubGVuZ3RoJiYod2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNDdXJyZW50PSExfSkpLHRoaXMuaXNDdXJyZW50PSEwKX0sZS5wcm90b3R5cGUuc2V0QXBpR3JvdXBzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTt0LmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBvPXRbZS5hcGlHcm91cEZpZWxkXTtuLnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWU9PT1vfSkpfHxuLnB1c2goe25hbWU6byx0aXRsZTpvfSl9KSksdGhpcy5ncm91cHM9bn0sZS5wcm90b3R5cGUuc29ydEl0ZW1zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXRlbXMuc29ydCgoZnVuY3Rpb24odCxlKXt2YXIgbj10LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb21iby1ib3gtdmFsdWVdXCIpLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XCIpLG89ZS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtY29tYm8tYm94LXZhbHVlXVwiKS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1zZWFyY2gtdGV4dFwiKTtyZXR1cm4gbjxvPy0xOm4+bz8xOjB9KSl9LGUucHJvdG90eXBlLml0ZW1SZW5kZXI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLWNvbWJvLWJveC12YWx1ZV1cIikuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtc2VhcmNoLXRleHRcIik7dGhpcy5pdGVtc1dyYXBwZXI/dGhpcy5pdGVtc1dyYXBwZXIuYXBwZW5kKHQpOnRoaXMub3V0cHV0LmFwcGVuZCh0KSx0aGlzLnByZXZlbnRTZWxlY3Rpb258fHQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7ZS5jbG9zZShuKSxlLnNldFNlbGVjdGVkQnlWYWx1ZShlLnZhbHVlc0J5U2VsZWN0b3IodCkpfSkpfSxlLnByb3RvdHlwZS5wbGFpblJlbmRlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3QuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZS5pdGVtUmVuZGVyKHQpfSkpfSxlLnByb3RvdHlwZS5ncm91cFRhYnNSZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9KDAsYy5odG1sVG9FbGVtZW50KSh0aGlzLnRhYnNXcmFwcGVyVGVtcGxhdGUpLG49KDAsYy5odG1sVG9FbGVtZW50KSgnPGRpdiBjbGFzcz1cImZsZXggZmxleC1ub3dyYXAgZ2FwLXgtMlwiPjwvZGl2PicpO2UuYXBwZW5kKG4pLHRoaXMub3V0cHV0Lmluc2VydEJlZm9yZShlLHRoaXMub3V0cHV0LmZpcnN0Q2hpbGQpO3ZhciBvPSgwLGMuaHRtbFRvRWxlbWVudCkodGhpcy5ncm91cGluZ1RpdGxlVGVtcGxhdGUpO28uc2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtZ3JvdXAtdGl0bGVcIixcImFsbFwiKSxvLmNsYXNzTGlzdC5hZGQoXCItLWV4Y2x1ZGUtYWNjZXNzaWJpbGl0eVwiLFwiYWN0aXZlXCIpLG8uaW5uZXJUZXh0PVwiQWxsXCIsdGhpcy50YWJzPWEoYShbXSx0aGlzLnRhYnMsITApLFtvXSwhMSksbi5hcHBlbmQobyksby5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXt0LnNlbGVjdGVkR3JvdXA9XCJhbGxcIjt2YXIgZT10LnRhYnMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtZ3JvdXAtdGl0bGVcIik9PT10LnNlbGVjdGVkR3JvdXB9KSk7dC50YWJzLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIil9KSksZS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpLHQuc2V0SXRlbXNWaXNpYmlsaXR5KCl9KSksdGhpcy5ncm91cHMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG89KDAsYy5odG1sVG9FbGVtZW50KSh0Lmdyb3VwaW5nVGl0bGVUZW1wbGF0ZSk7by5zZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1ncm91cC10aXRsZVwiLGUubmFtZSksby5jbGFzc0xpc3QuYWRkKFwiLS1leGNsdWRlLWFjY2Vzc2liaWxpdHlcIiksby5pbm5lclRleHQ9ZS50aXRsZSx0LnRhYnM9YShhKFtdLHQudGFicywhMCksW29dLCExKSxuLmFwcGVuZChvKSxvLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe3Quc2VsZWN0ZWRHcm91cD1lLm5hbWU7dmFyIG49dC50YWJzLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LWdyb3VwLXRpdGxlXCIpPT09dC5zZWxlY3RlZEdyb3VwfSkpO3QudGFicy5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpfSkpLG4uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKSx0LnNldEl0ZW1zVmlzaWJpbGl0eSgpfSkpfSkpfSxlLnByb3RvdHlwZS5ncm91cERlZmF1bHRSZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZ3JvdXBzLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBuPSgwLGMuaHRtbFRvRWxlbWVudCkodC5ncm91cGluZ1RpdGxlVGVtcGxhdGUpO24uc2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtZ3JvdXAtdGl0bGVcIixlLm5hbWUpLG4uY2xhc3NMaXN0LmFkZChcIi0tZXhjbHVkZS1hY2Nlc3NpYmlsaXR5XCIpLG4uaW5uZXJUZXh0PWUudGl0bGUsdC5pdGVtc1dyYXBwZXI/dC5pdGVtc1dyYXBwZXIuYXBwZW5kKG4pOnQub3V0cHV0LmFwcGVuZChuKTt2YXIgbz10LnNvcnRJdGVtcygpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIEpTT04ucGFyc2UodC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbVwiKSkuZ3JvdXAubmFtZT09PWUubmFtZX0pKTt0LnBsYWluUmVuZGVyKG8pfSkpfSxlLnByb3RvdHlwZS5pdGVtc0Zyb21IdG1sPWZ1bmN0aW9uKCl7aWYoXCJkZWZhdWx0XCI9PT10aGlzLmdyb3VwaW5nVHlwZSl0aGlzLmdyb3VwRGVmYXVsdFJlbmRlcigpO2Vsc2UgaWYoXCJ0YWJzXCI9PT10aGlzLmdyb3VwaW5nVHlwZSl7dmFyIHQ9dGhpcy5zb3J0SXRlbXMoKTt0aGlzLmdyb3VwVGFic1JlbmRlcigpLHRoaXMucGxhaW5SZW5kZXIodCl9ZWxzZXt0PXRoaXMuc29ydEl0ZW1zKCk7dGhpcy5wbGFpblJlbmRlcih0KX10aGlzLnNldFJlc3VsdHModGhpcy5pbnB1dC52YWx1ZSl9LGUucHJvdG90eXBlLmJ1aWxkVG9nZ2xlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXt0LmlzT3BlbmVkP3QuY2xvc2UoKTp0Lm9wZW4odC50b2dnbGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3gtdG9nZ2xlXCIpKX0pKX0sZS5wcm90b3R5cGUuc2V0U2VsZWN0ZWRCeVZhbHVlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5pdGVtcy5mb3JFYWNoKChmdW5jdGlvbihuKXtlLmlzVGV4dEV4aXN0cyhuLHQpP24uY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpOm4uY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpfSkpfSxlLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih0KXt0aGlzLnNlbGVjdGVkPXQsdGhpcy52YWx1ZT10LHRoaXMuaW5wdXQudmFsdWU9dH0sZS5wcm90b3R5cGUuc2V0SXRlbXNWaXNpYmlsaXR5PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztcInRhYnNcIj09PXRoaXMuZ3JvdXBpbmdUeXBlJiZcImFsbFwiIT09dGhpcy5zZWxlY3RlZEdyb3VwJiZ0aGlzLml0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKHQpe3Quc3R5bGUuZGlzcGxheT1cIm5vbmVcIn0pKTt2YXIgZT1cInRhYnNcIj09PXRoaXMuZ3JvdXBpbmdUeXBlP1wiYWxsXCI9PT10aGlzLnNlbGVjdGVkR3JvdXA/dGhpcy5pdGVtczp0aGlzLml0ZW1zLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIEpTT04ucGFyc2UoZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbVwiKSkuZ3JvdXAubmFtZT09PXQuc2VsZWN0ZWRHcm91cH0pKTp0aGlzLml0ZW1zO1widGFic1wiPT09dGhpcy5ncm91cGluZ1R5cGUmJlwiYWxsXCIhPT10aGlzLnNlbGVjdGVkR3JvdXAmJmUuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIn0pKSxlLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QuaXNUZXh0RXhpc3RzQW55KGUsdC52YWx1ZSk/ZS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjplLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSksXCJkZWZhdWx0XCI9PT10aGlzLmdyb3VwaW5nVHlwZSYmdGhpcy5vdXRwdXQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLWNvbWJvLWJveC1ncm91cC10aXRsZV1cIikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1ncm91cC10aXRsZVwiKTt0Lml0ZW1zLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIEpTT04ucGFyc2UodC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbVwiKSkuZ3JvdXAubmFtZT09PW4mJlwiYmxvY2tcIj09PXQuc3R5bGUuZGlzcGxheX0pKS5sZW5ndGg/ZS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjplLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSl9LGUucHJvdG90eXBlLmhhc1Zpc2libGVJdGVtcz1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5pdGVtcy5sZW5ndGgmJnRoaXMuaXRlbXMuc29tZSgoZnVuY3Rpb24odCl7cmV0dXJuXCJibG9ja1wiPT09dC5zdHlsZS5kaXNwbGF5fSkpfSxlLnByb3RvdHlwZS5hcHBlbmRJdGVtc1RvV3JhcHBlcj1mdW5jdGlvbih0KXt0aGlzLml0ZW1zV3JhcHBlcj90aGlzLml0ZW1zV3JhcHBlci5hcHBlbmQodCk6dGhpcy5vdXRwdXQuYXBwZW5kKHQpfSxlLnByb3RvdHlwZS5idWlsZE91dHB1dFBsYWNlaG9sZGVyPWZ1bmN0aW9uKCl7dGhpcy5vdXRwdXRQbGFjZWhvbGRlcnx8KHRoaXMub3V0cHV0UGxhY2Vob2xkZXI9KDAsYy5odG1sVG9FbGVtZW50KSh0aGlzLm91dHB1dEVtcHR5VGVtcGxhdGUpKSx0aGlzLmFwcGVuZEl0ZW1zVG9XcmFwcGVyKHRoaXMub3V0cHV0UGxhY2Vob2xkZXIpfSxlLnByb3RvdHlwZS5kZXN0cm95T3V0cHV0UGxhY2Vob2xkZXI9ZnVuY3Rpb24oKXt0aGlzLm91dHB1dFBsYWNlaG9sZGVyJiZ0aGlzLm91dHB1dFBsYWNlaG9sZGVyLnJlbW92ZSgpLHRoaXMub3V0cHV0UGxhY2Vob2xkZXI9bnVsbH0sZS5wcm90b3R5cGUucmVzdWx0SXRlbXM9ZnVuY3Rpb24oKXtpZighdGhpcy5pdGVtcy5sZW5ndGgpcmV0dXJuITE7dGhpcy5zZXRJdGVtc1Zpc2liaWxpdHkoKSx0aGlzLnNldFNlbGVjdGVkQnlWYWx1ZShbdGhpcy5zZWxlY3RlZF0pfSxlLnByb3RvdHlwZS5zZXRWYWx1ZUFuZE9wZW49ZnVuY3Rpb24odCl7dGhpcy52YWx1ZT10LHRoaXMuaXRlbXMubGVuZ3RoJiZ0aGlzLnNldEl0ZW1zVmlzaWJpbGl0eSgpfSxlLnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIXRoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzJiYodm9pZCAwIT09dCYmdGhpcy5zZXRWYWx1ZUFuZE9wZW4odCksIXRoaXMucHJldmVudFZpc2liaWxpdHkmJih0aGlzLmFuaW1hdGlvbkluUHJvY2Vzcz0hMCx0aGlzLm91dHB1dC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIix0aGlzLnJlY2FsY3VsYXRlRGlyZWN0aW9uKCksc2V0VGltZW91dCgoZnVuY3Rpb24oKXtlLmVsLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIiksZS5hbmltYXRpb25JblByb2Nlc3M9ITF9KSksdm9pZCh0aGlzLmlzT3BlbmVkPSEwKSkpfSxlLnByb3RvdHlwZS5zZXRWYWx1ZUFuZENsZWFyPWZ1bmN0aW9uKHQpe3Q/dGhpcy5zZXRWYWx1ZSh0KTp0aGlzLnNldFZhbHVlKHRoaXMuc2VsZWN0ZWQpLHRoaXMub3V0cHV0UGxhY2Vob2xkZXImJnRoaXMuZGVzdHJveU91dHB1dFBsYWNlaG9sZGVyKCl9LGUucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIXRoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzJiYodGhpcy5wcmV2ZW50VmlzaWJpbGl0eT8odGhpcy5zZXRWYWx1ZUFuZENsZWFyKHQpLCExKToodGhpcy5hbmltYXRpb25JblByb2Nlc3M9ITAsdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLHRoaXMub3V0cHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJib3R0b20tZnVsbFwiLFwidG9wLWZ1bGxcIiksdGhpcy5vdXRwdXQuc3R5bGUubWFyZ2luVG9wPVwiXCIsdGhpcy5vdXRwdXQuc3R5bGUubWFyZ2luQm90dG9tPVwiXCIsKDAsYy5hZnRlclRyYW5zaXRpb24pKHRoaXMub3V0cHV0LChmdW5jdGlvbigpe2Uub3V0cHV0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsZS5zZXRWYWx1ZUFuZENsZWFyKHQpLGUuYW5pbWF0aW9uSW5Qcm9jZXNzPSExfSkpLHZvaWQodGhpcy5pc09wZW5lZD0hMSkpKX0sZS5wcm90b3R5cGUucmVjYWxjdWxhdGVEaXJlY3Rpb249ZnVuY3Rpb24oKXsoMCxjLmlzRW5vdWdoU3BhY2UpKHRoaXMub3V0cHV0LHRoaXMuaW5wdXQsXCJib3R0b21cIix0aGlzLmdhcCx0aGlzLnZpZXdwb3J0KT8odGhpcy5vdXRwdXQuY2xhc3NMaXN0LnJlbW92ZShcImJvdHRvbS1mdWxsXCIpLHRoaXMub3V0cHV0LnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiLHRoaXMub3V0cHV0LmNsYXNzTGlzdC5hZGQoXCJ0b3AtZnVsbFwiKSx0aGlzLm91dHB1dC5zdHlsZS5tYXJnaW5Ub3A9XCJcIi5jb25jYXQodGhpcy5nYXAsXCJweFwiKSk6KHRoaXMub3V0cHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJ0b3AtZnVsbFwiKSx0aGlzLm91dHB1dC5zdHlsZS5tYXJnaW5Ub3A9XCJcIix0aGlzLm91dHB1dC5jbGFzc0xpc3QuYWRkKFwiYm90dG9tLWZ1bGxcIiksdGhpcy5vdXRwdXQuc3R5bGUubWFyZ2luQm90dG9tPVwiXCIuY29uY2F0KHRoaXMuZ2FwLFwicHhcIikpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbnx8KHdpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1jb21iby1ib3hdOm5vdCguLS1wcmV2ZW50LW9uLWxvYWQtaW5pdClcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoIXdpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSkpe3ZhciBuPXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb21iby1ib3hcIiksbz1uP0pTT04ucGFyc2Uobik6e307bmV3IGUodCxvKX19KSksd2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbiYmKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24odCl7dmFyIG49dC50YXJnZXQ7ZS5jbG9zZUN1cnJlbnRseU9wZW5lZChuKX0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5hY2Nlc3NpYmlsaXR5KHQpfSkpKX0sZS5jbG9zZT1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cuJGhzQ29tYm9Cb3hDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtlJiZlLmVsZW1lbnQuaXNPcGVuZWQmJmUuZWxlbWVudC5jbG9zZSgpfSxlLmNsb3NlQ3VycmVudGx5T3BlbmVkPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXQmJih0PW51bGwpLCF0LmNsb3Nlc3QoXCJbZGF0YS1ocy1jb21iby1ib3hdLmFjdGl2ZVwiKSl7dmFyIGU9d2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSl8fG51bGw7ZSYmZS5mb3JFYWNoKChmdW5jdGlvbih0KXt0LmVsZW1lbnQuY2xvc2UoKX0pKX19LGUuZ2V0UHJlcGFyZWRJdGVtcz1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD0hMSksZT8odD9BcnJheS5mcm9tKGUucXVlcnlTZWxlY3RvckFsbChcIjpzY29wZSA+ICo6bm90KC4tLWV4Y2x1ZGUtYWNjZXNzaWJpbGl0eSlcIikpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuXCJub25lXCIhPT10LnN0eWxlLmRpc3BsYXl9KSkucmV2ZXJzZSgpOkFycmF5LmZyb20oZS5xdWVyeVNlbGVjdG9yQWxsKFwiOnNjb3BlID4gKjpub3QoLi0tZXhjbHVkZS1hY2Nlc3NpYmlsaXR5KVwiKSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm5cIm5vbmVcIiE9PXQuc3R5bGUuZGlzcGxheX0pKSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hdC5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNhYmxlZFwiKX0pKTpudWxsfSxlLnNldEhpZ2hsaWdodGVkPWZ1bmN0aW9uKHQsZSxuKXtlLmZvY3VzKCksbi52YWx1ZT1lLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb21iby1ib3gtdmFsdWVdXCIpLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LXNlYXJjaC10ZXh0XCIpLHQmJnQuY2xhc3NMaXN0LnJlbW92ZShcImhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbS1oaWdobGlnaHRlZFwiKSxlLmNsYXNzTGlzdC5hZGQoXCJocy1jb21iby1ib3gtb3V0cHV0LWl0ZW0taGlnaGxpZ2h0ZWRcIil9LGUuYWNjZXNzaWJpbGl0eT1mdW5jdGlvbih0KXtpZih3aW5kb3cuJGhzQ29tYm9Cb3hDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSkmJmQuQ09NQk9fQk9YX0FDQ0VTU0lCSUxJVFlfS0VZX1NFVC5pbmNsdWRlcyh0LmNvZGUpJiYhdC5tZXRhS2V5KXN3aXRjaCh0LmNvZGUpe2Nhc2VcIkVzY2FwZVwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uRXNjYXBlKCk7YnJlYWs7Y2FzZVwiQXJyb3dVcFwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uQXJyb3coKTticmVhaztjYXNlXCJBcnJvd0Rvd25cIjp0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkFycm93KCExKTticmVhaztjYXNlXCJIb21lXCI6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25TdGFydEVuZCgpO2JyZWFrO2Nhc2VcIkVuZFwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uU3RhcnRFbmQoITEpO2JyZWFrO2Nhc2VcIkVudGVyXCI6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25FbnRlcih0KX19LGUub25Fc2NhcGU9ZnVuY3Rpb24oKXt2YXIgdD13aW5kb3cuJGhzQ29tYm9Cb3hDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiF0LmVsZW1lbnQucHJldmVudFZpc2liaWxpdHkmJnQuZWxlbWVudC5pc09wZW5lZH0pKTt0JiYodC5lbGVtZW50LmNsb3NlKCksdC5lbGVtZW50LmlucHV0LmJsdXIoKSl9LGUub25BcnJvdz1mdW5jdGlvbih0KXt2YXIgbjt2b2lkIDA9PT10JiYodD0hMCk7dmFyIG89d2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LnByZXZlbnRWaXNpYmlsaXR5P3QuZWxlbWVudC5pc0N1cnJlbnQ6dC5lbGVtZW50LmlzT3BlbmVkfSkpO2lmKG8pe3ZhciBpPW51bGwhPT0obj1vLmVsZW1lbnQuaXRlbXNXcmFwcGVyKSYmdm9pZCAwIT09bj9uOm8uZWxlbWVudC5vdXRwdXQ7aWYoIWkpcmV0dXJuITE7dmFyIHIscz1lLmdldFByZXBhcmVkSXRlbXModCxpKSxsPWkucXVlcnlTZWxlY3RvcihcIi5ocy1jb21iby1ib3gtb3V0cHV0LWl0ZW0taGlnaGxpZ2h0ZWRcIik7bHx8c1swXS5jbGFzc0xpc3QuYWRkKFwiaHMtY29tYm8tYm94LW91dHB1dC1pdGVtLWhpZ2hsaWdodGVkXCIpO3ZhciBhPXMuZmluZEluZGV4KChmdW5jdGlvbih0KXtyZXR1cm4gdD09PWx9KSk7YSsxPHMubGVuZ3RoJiZhKysscj1zW2FdLGUuc2V0SGlnaGxpZ2h0ZWQobCxyLG8uZWxlbWVudC5pbnB1dCl9fSxlLm9uU3RhcnRFbmQ9ZnVuY3Rpb24odCl7dmFyIG47dm9pZCAwPT09dCYmKHQ9ITApO3ZhciBvPXdpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5wcmV2ZW50VmlzaWJpbGl0eT90LmVsZW1lbnQuaXNDdXJyZW50OnQuZWxlbWVudC5pc09wZW5lZH0pKTtpZihvKXt2YXIgaT1udWxsIT09KG49by5lbGVtZW50Lml0ZW1zV3JhcHBlcikmJnZvaWQgMCE9PW4/bjpvLmVsZW1lbnQub3V0cHV0O2lmKCFpKXJldHVybiExO3ZhciByPWUuZ2V0UHJlcGFyZWRJdGVtcyh0LGkpLHM9aS5xdWVyeVNlbGVjdG9yKFwiLmhzLWNvbWJvLWJveC1vdXRwdXQtaXRlbS1oaWdobGlnaHRlZFwiKTtyLmxlbmd0aCYmZS5zZXRIaWdobGlnaHRlZChzLHJbMF0sby5lbGVtZW50LmlucHV0KX19LGUub25FbnRlcj1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldCxuPXdpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuISgwLGMuaXNQYXJlbnRPckVsZW1lbnRIaWRkZW4pKHQuZWxlbWVudC5lbCkmJnQuZWxlbWVudC5pc09wZW5lZH0pKSxvPW4uZWxlbWVudC5lbC5xdWVyeVNlbGVjdG9yKFwiYVwiKTtlLmhhc0F0dHJpYnV0ZShcImRhdGEtaHMtY29tYm8tYm94LWlucHV0XCIpPyhuLmVsZW1lbnQuY2xvc2UoKSxlLmJsdXIoKSk6KG4uZWxlbWVudC5wcmV2ZW50U2VsZWN0aW9ufHxuLmVsZW1lbnQuc2V0U2VsZWN0ZWRCeVZhbHVlKG4uZWxlbWVudC52YWx1ZXNCeVNlbGVjdG9yKHQudGFyZ2V0KSksbi5lbGVtZW50LnByZXZlbnRTZWxlY3Rpb24mJm8mJndpbmRvdy5sb2NhdGlvbi5hc3NpZ24oby5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpKSxuLmVsZW1lbnQuY2xvc2Uobi5lbGVtZW50LnByZXZlbnRTZWxlY3Rpb24/bnVsbDp0LnRhcmdldC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtY29tYm8tYm94LXZhbHVlXVwiKS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLWNvbWJvLWJveC1zZWFyY2gtdGV4dFwiKSkpfSxlfSh1LmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe3AuYXV0b0luaXQoKX0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsKGZ1bmN0aW9uKCl7aWYoIXdpbmRvdy4kaHNDb21ib0JveENvbGxlY3Rpb24pcmV0dXJuITE7dmFyIHQ9d2luZG93LiRoc0NvbWJvQm94Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmlzT3BlbmVkfSkpO3QmJnQuZWxlbWVudC5yZWNhbGN1bGF0ZURpcmVjdGlvbigpfSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuSFNDb21ib0JveD1wKSxlLmRlZmF1bHQ9cH0sNDEzOmZ1bmN0aW9uKHQsZSxuKXtcbi8qXG4gKiBIU0NvcHlNYXJrdXBcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1uKDk2OSksbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcyxpPWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb3B5LW1hcmt1cFwiKSxzPWk/SlNPTi5wYXJzZShpKTp7fSxsPXIocih7fSxzKSxuKTtyZXR1cm4gby50YXJnZXRTZWxlY3Rvcj0obnVsbD09bD92b2lkIDA6bC50YXJnZXRTZWxlY3Rvcil8fG51bGwsby53cmFwcGVyU2VsZWN0b3I9KG51bGw9PWw/dm9pZCAwOmwud3JhcHBlclNlbGVjdG9yKXx8bnVsbCxvLmxpbWl0PShudWxsPT1sP3ZvaWQgMDpsLmxpbWl0KXx8bnVsbCxvLml0ZW1zPVtdLG8udGFyZ2V0U2VsZWN0b3ImJm8uaW5pdCgpLG99cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc0NvcHlNYXJrdXBDb2xsZWN0aW9uLHRoaXMpLHRoaXMuc2V0VGFyZ2V0KCksdGhpcy5zZXRXcmFwcGVyKCksdGhpcy5hZGRQcmVkZWZpbmVkSXRlbXMoKSx0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe3JldHVybiB0LmNvcHkoKX0pKX0sZS5wcm90b3R5cGUuY29weT1mdW5jdGlvbigpe2lmKHRoaXMubGltaXQmJnRoaXMuaXRlbXMubGVuZ3RoPj10aGlzLmxpbWl0KXJldHVybiExO3RoaXMuZWwuaGFzQXR0cmlidXRlKFwiZGlzYWJsZWRcIikmJnRoaXMuZWwuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIixcIlwiKTt2YXIgdD10aGlzLnRhcmdldC5jbG9uZU5vZGUoITApO3RoaXMuYWRkVG9JdGVtcyh0KSx0aGlzLmxpbWl0JiZ0aGlzLml0ZW1zLmxlbmd0aD49dGhpcy5saW1pdCYmdGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLFwiZGlzYWJsZWRcIiksdGhpcy5maXJlRXZlbnQoXCJjb3B5XCIsdCksKDAscy5kaXNwYXRjaCkoXCJjb3B5LmhzLmNvcHlNYXJrdXBcIix0LHQpfSxlLnByb3RvdHlwZS5hZGRQcmVkZWZpbmVkSXRlbXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO0FycmF5LmZyb20odGhpcy53cmFwcGVyLmNoaWxkcmVuKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiF0LmNsYXNzTGlzdC5jb250YWlucyhcIlstLWlnbm9yZS1mb3ItY291bnRdXCIpfSkpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QuYWRkVG9JdGVtcyhlKX0pKX0sZS5wcm90b3R5cGUuc2V0VGFyZ2V0PWZ1bmN0aW9uKCl7dmFyIHQ9XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMudGFyZ2V0U2VsZWN0b3I/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnRhcmdldFNlbGVjdG9yKS5jbG9uZU5vZGUoITApOnRoaXMudGFyZ2V0U2VsZWN0b3IuY2xvbmVOb2RlKCEwKTt0LnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpLHRoaXMudGFyZ2V0PXR9LGUucHJvdG90eXBlLnNldFdyYXBwZXI9ZnVuY3Rpb24oKXt0aGlzLndyYXBwZXI9XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMud3JhcHBlclNlbGVjdG9yP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy53cmFwcGVyU2VsZWN0b3IpOnRoaXMud3JhcHBlclNlbGVjdG9yfSxlLnByb3RvdHlwZS5hZGRUb0l0ZW1zPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1jb3B5LW1hcmt1cC1kZWxldGUtaXRlbV1cIik7dGhpcy53cmFwcGVyP3RoaXMud3JhcHBlci5hcHBlbmQodCk6dGhpcy5lbC5iZWZvcmUodCksbiYmbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWxldGUodCl9KSksdGhpcy5pdGVtcy5wdXNoKHQpfSxlLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pdGVtcy5pbmRleE9mKHQpOy0xIT09ZSYmdGhpcy5pdGVtcy5zcGxpY2UoZSwxKSx0LnJlbW92ZSgpLHRoaXMuZmlyZUV2ZW50KFwiZGVsZXRlXCIsdCksKDAscy5kaXNwYXRjaCkoXCJkZWxldGUuaHMuY29weU1hcmt1cFwiLHQsdCl9LGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj13aW5kb3cuJGhzQ29weU1hcmt1cENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO3JldHVybiBuP2U/bjpuLmVsZW1lbnQ6bnVsbH0sZS5hdXRvSW5pdD1mdW5jdGlvbigpe3dpbmRvdy4kaHNDb3B5TWFya3VwQ29sbGVjdGlvbnx8KHdpbmRvdy4kaHNDb3B5TWFya3VwQ29sbGVjdGlvbj1bXSksZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLWNvcHktbWFya3VwXTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2lmKCF3aW5kb3cuJGhzQ29weU1hcmt1cENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSkpe3ZhciBuPXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1jb3B5LW1hcmt1cFwiKSxvPW4/SlNPTi5wYXJzZShuKTp7fTtuZXcgZSh0LG8pfX0pKX0sZX0obig3MzcpLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2wuYXV0b0luaXQoKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTQ29weU1hcmt1cD1sKSxlLmRlZmF1bHQ9bH0sNjEwOmZ1bmN0aW9uKHQsZSxuKXtcbi8qXG4gKiBIU0Ryb3Bkb3duXG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xudmFyIG8saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8KG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LG8odCxlKX0sZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxyPXRoaXMmJnRoaXMuX19zcHJlYWRBcnJheXx8ZnVuY3Rpb24odCxlLG4pe2lmKG58fDI9PT1hcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgbyxpPTAscj1lLmxlbmd0aDtpPHI7aSsrKSFvJiZpIGluIGV8fChvfHwobz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLDAsaSkpLG9baV09ZVtpXSk7cmV0dXJuIHQuY29uY2F0KG98fEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUpKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9big5NjkpLGw9big0OTIpLGE9big3MzcpLGM9bigxOTApLHU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4sbyl7dmFyIGk9dC5jYWxsKHRoaXMsZSxuLG8pfHx0aGlzO3JldHVybiBpLnRvZ2dsZT1pLmVsLnF1ZXJ5U2VsZWN0b3IoXCI6c2NvcGUgPiAuaHMtZHJvcGRvd24tdG9nZ2xlXCIpfHxpLmVsLmNoaWxkcmVuWzBdLGkubWVudT1pLmVsLnF1ZXJ5U2VsZWN0b3IoXCI6c2NvcGUgPiAuaHMtZHJvcGRvd24tbWVudVwiKSxpLmV2ZW50TW9kZT0oMCxzLmdldENsYXNzUHJvcGVydHkpKGkuZWwsXCItLXRyaWdnZXJcIixcImNsaWNrXCIpLGkuY2xvc2VNb2RlPSgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkoaS5lbCxcIi0tYXV0by1jbG9zZVwiLFwidHJ1ZVwiKSxpLmFuaW1hdGlvbkluUHJvY2Vzcz0hMSxpLnRvZ2dsZSYmaS5tZW51JiZpLmluaXQoKSxpfXJldHVybiBpKGUsdCksZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodGhpcy5jcmVhdGVDb2xsZWN0aW9uKHdpbmRvdy4kaHNEcm9wZG93bkNvbGxlY3Rpb24sdGhpcyksdGhpcy50b2dnbGUuZGlzYWJsZWQpcmV0dXJuITE7dGhpcy50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQub25DbGlja0hhbmRsZXIoKX0pKSwoMCxzLmlzSU9TKSgpfHwoMCxzLmlzSXBhZE9TKSgpfHwodGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLChmdW5jdGlvbigpe3JldHVybiB0Lm9uTW91c2VFbnRlckhhbmRsZXIoKX0pKSx0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQub25Nb3VzZUxlYXZlSGFuZGxlcigpfSkpKX0sZS5wcm90b3R5cGUucmVzaXplSGFuZGxlcj1mdW5jdGlvbigpe3RoaXMuZXZlbnRNb2RlPSgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkodGhpcy5lbCxcIi0tdHJpZ2dlclwiLFwiY2xpY2tcIil9LGUucHJvdG90eXBlLm9uQ2xpY2tIYW5kbGVyPWZ1bmN0aW9uKCl7dGhpcy5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpJiYhdGhpcy5tZW51LmNsYXNzTGlzdC5jb250YWlucyhcImhpZGRlblwiKT90aGlzLmNsb3NlKCk6dGhpcy5vcGVuKCl9LGUucHJvdG90eXBlLm9uTW91c2VFbnRlckhhbmRsZXI9ZnVuY3Rpb24oKXtpZihcImhvdmVyXCIhPT10aGlzLmV2ZW50TW9kZSlyZXR1cm4hMTt0aGlzLmVsLl9wb3BwZXImJnRoaXMuZm9yY2VDbGVhclN0YXRlKCksIXRoaXMuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSYmdGhpcy5tZW51LmNsYXNzTGlzdC5jb250YWlucyhcImhpZGRlblwiKSYmdGhpcy5vcGVuKCl9LGUucHJvdG90eXBlLm9uTW91c2VMZWF2ZUhhbmRsZXI9ZnVuY3Rpb24oKXtpZihcImhvdmVyXCIhPT10aGlzLmV2ZW50TW9kZSlyZXR1cm4hMTt0aGlzLmVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIikmJiF0aGlzLm1lbnUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGlkZGVuXCIpJiZ0aGlzLmNsb3NlKCl9LGUucHJvdG90eXBlLmRlc3Ryb3lQb3BwZXI9ZnVuY3Rpb24oKXt0aGlzLm1lbnUuY2xhc3NMaXN0LnJlbW92ZShcImJsb2NrXCIpLHRoaXMubWVudS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpLHRoaXMubWVudS5zdHlsZS5pbnNldD1udWxsLHRoaXMubWVudS5zdHlsZS5wb3NpdGlvbj1udWxsLHRoaXMuZWwmJnRoaXMuZWwuX3BvcHBlciYmdGhpcy5lbC5fcG9wcGVyLmRlc3Ryb3koKSx0aGlzLmFuaW1hdGlvbkluUHJvY2Vzcz0hMX0sZS5wcm90b3R5cGUuYWJzb2x1dGVTdHJhdGVneU1vZGlmaWVycz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuW3tuYW1lOlwiYXBwbHlTdHlsZXNcIixmbjpmdW5jdGlvbihlKXt2YXIgbj0od2luZG93LmdldENvbXB1dGVkU3R5bGUodC5lbCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tc3RyYXRlZ3lcIil8fFwiYWJzb2x1dGVcIikucmVwbGFjZShcIiBcIixcIlwiKSxvPSh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0LmVsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiLS1hZGFwdGl2ZVwiKXx8XCJhZGFwdGl2ZVwiKS5yZXBsYWNlKFwiIFwiLFwiXCIpO2Uuc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLnBvc2l0aW9uPW4sZS5zdGF0ZS5lbGVtZW50cy5wb3BwZXIuc3R5bGUudHJhbnNmb3JtPVwiYWRhcHRpdmVcIj09PW8/ZS5zdGF0ZS5zdHlsZXMucG9wcGVyLnRyYW5zZm9ybTpudWxsLGUuc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLnRvcD1udWxsLGUuc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLmJvdHRvbT1udWxsLGUuc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLmxlZnQ9bnVsbCxlLnN0YXRlLmVsZW1lbnRzLnBvcHBlci5zdHlsZS5yaWdodD1udWxsLGUuc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLm1hcmdpbj0wfX0se25hbWU6XCJjb21wdXRlU3R5bGVzXCIsb3B0aW9uczp7YWRhcHRpdmU6ITF9fV19LGUucHJvdG90eXBlLm9wZW49ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSlyZXR1cm4hMTtpZih0aGlzLmFuaW1hdGlvbkluUHJvY2VzcylyZXR1cm4hMTt0aGlzLmFuaW1hdGlvbkluUHJvY2Vzcz0hMDt2YXIgZT0od2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5lbCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tcGxhY2VtZW50XCIpfHxcIlwiKS5yZXBsYWNlKFwiIFwiLFwiXCIpLG49KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWwpLmdldFByb3BlcnR5VmFsdWUoXCItLWZsaXBcIil8fFwidHJ1ZVwiKS5yZXBsYWNlKFwiIFwiLFwiXCIpLG89KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWwpLmdldFByb3BlcnR5VmFsdWUoXCItLXN0cmF0ZWd5XCIpfHxcImZpeGVkXCIpLnJlcGxhY2UoXCIgXCIsXCJcIiksaT1wYXJzZUludCgod2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5lbCkuZ2V0UHJvcGVydHlWYWx1ZShcIi0tb2Zmc2V0XCIpfHxcIjEwXCIpLnJlcGxhY2UoXCIgXCIsXCJcIikpO1wic3RhdGljXCIhPT1vJiYodGhpcy5lbC5fcG9wcGVyPSgwLGwuY3JlYXRlUG9wcGVyKSh0aGlzLmVsLHRoaXMubWVudSx7cGxhY2VtZW50OmMuUE9TSVRJT05TW2VdfHxcImJvdHRvbS1zdGFydFwiLHN0cmF0ZWd5Om8sbW9kaWZpZXJzOnIocihbXSxcImZpeGVkXCIhPT1vP3RoaXMuYWJzb2x1dGVTdHJhdGVneU1vZGlmaWVycygpOltdLCEwKSxbe25hbWU6XCJmbGlwXCIsZW5hYmxlZDpcInRydWVcIj09PW59LHtuYW1lOlwib2Zmc2V0XCIsb3B0aW9uczp7b2Zmc2V0OlswLGldfX1dLCExKX0pKSx0aGlzLm1lbnUuc3R5bGUubWFyZ2luPW51bGwsdGhpcy5tZW51LmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIiksdGhpcy5tZW51LmNsYXNzTGlzdC5hZGQoXCJibG9ja1wiKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuZWwuY2xhc3NMaXN0LmFkZChcIm9wZW5cIiksdC5hbmltYXRpb25JblByb2Nlc3M9ITF9KSksdGhpcy5maXJlRXZlbnQoXCJvcGVuXCIsdGhpcy5lbCksKDAscy5kaXNwYXRjaCkoXCJvcGVuLmhzLmRyb3Bkb3duXCIsdGhpcy5lbCx0aGlzLmVsKX0sZS5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZih2b2lkIDA9PT10JiYodD0hMCksdGhpcy5hbmltYXRpb25JblByb2Nlc3N8fCF0aGlzLmVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIikpcmV0dXJuITE7aWYodGhpcy5hbmltYXRpb25JblByb2Nlc3M9ITAsdCl7dmFyIG49dGhpcy5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtZHJvcGRvd24tdHJhbnNpdGlvbl1cIil8fHRoaXMubWVudTsoMCxzLmFmdGVyVHJhbnNpdGlvbikobiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5kZXN0cm95UG9wcGVyKCl9KSl9ZWxzZSB0aGlzLmRlc3Ryb3lQb3BwZXIoKTt0aGlzLm1lbnUuc3R5bGUubWFyZ2luPW51bGwsdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKSx0aGlzLmZpcmVFdmVudChcImNsb3NlXCIsdGhpcy5lbCksKDAscy5kaXNwYXRjaCkoXCJjbG9zZS5ocy5kcm9wZG93blwiLHRoaXMuZWwsdGhpcy5lbCl9LGUucHJvdG90eXBlLmZvcmNlQ2xlYXJTdGF0ZT1mdW5jdGlvbigpe3RoaXMuZGVzdHJveVBvcHBlcigpLHRoaXMubWVudS5zdHlsZS5tYXJnaW49bnVsbCx0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudC5lbDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7aWYod2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbnx8KHdpbmRvdy4kaHNEcm9wZG93bkNvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuaHMtZHJvcGRvd246bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXt3aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKSx3aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uKXtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5hY2Nlc3NpYmlsaXR5KHQpfSkpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24odCl7dmFyIG49dC50YXJnZXQ7ZS5jbG9zZUN1cnJlbnRseU9wZW5lZChuKX0pKTt2YXIgdD13aW5kb3cuaW5uZXJXaWR0aDt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLChmdW5jdGlvbigpe3dpbmRvdy5pbm5lcldpZHRoIT09dCYmKHQ9aW5uZXJXaWR0aCxlLmNsb3NlQ3VycmVudGx5T3BlbmVkKG51bGwsITEpKX0pKX19LGUub3Blbj1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtlJiZlLmVsZW1lbnQubWVudS5jbGFzc0xpc3QuY29udGFpbnMoXCJoaWRkZW5cIikmJmUuZWxlbWVudC5vcGVuKCl9LGUuY2xvc2U9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7ZSYmIWUuZWxlbWVudC5tZW51LmNsYXNzTGlzdC5jb250YWlucyhcImhpZGRlblwiKSYmZS5lbGVtZW50LmNsb3NlKCl9LGUuYWNjZXNzaWJpbGl0eT1mdW5jdGlvbih0KXt0aGlzLmhpc3Rvcnk9cy5tZW51U2VhcmNoSGlzdG9yeTt2YXIgZT13aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKX0pKTtpZihlJiYoYy5EUk9QRE9XTl9BQ0NFU1NJQklMSVRZX0tFWV9TRVQuaW5jbHVkZXModC5jb2RlKXx8ND09PXQuY29kZS5sZW5ndGgmJnQuY29kZVt0LmNvZGUubGVuZ3RoLTFdLm1hdGNoKC9eW0EtWl0qJC8pKSYmIXQubWV0YUtleSYmIWUuZWxlbWVudC5tZW51LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dDpmb2N1c1wiKSlzd2l0Y2godC5jb2RlKXtjYXNlXCJFc2NhcGVcIjplLmVsZW1lbnQubWVudS5xdWVyeVNlbGVjdG9yKFwiLmhzLXNlbGVjdC5hY3RpdmVcIil8fCh0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkVzY2FwZSh0KSk7YnJlYWs7Y2FzZVwiRW50ZXJcIjplLmVsZW1lbnQubWVudS5xdWVyeVNlbGVjdG9yKFwiLmhzLXNlbGVjdCBidXR0b246Zm9jdXNcIil8fGUuZWxlbWVudC5tZW51LnF1ZXJ5U2VsZWN0b3IoXCIuaHMtY29sbGFwc2UtdG9nZ2xlOmZvY3VzXCIpfHx0aGlzLm9uRW50ZXIodCk7YnJlYWs7Y2FzZVwiQXJyb3dVcFwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uQXJyb3coKTticmVhaztjYXNlXCJBcnJvd0Rvd25cIjp0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkFycm93KCExKTticmVhaztjYXNlXCJIb21lXCI6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25TdGFydEVuZCgpO2JyZWFrO2Nhc2VcIkVuZFwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uU3RhcnRFbmQoITEpO2JyZWFrO2RlZmF1bHQ6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25GaXJzdExldHRlcih0LmtleSl9fSxlLm9uRXNjYXBlPWZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0LmNsb3Nlc3QoXCIuaHMtZHJvcGRvd24ub3BlblwiKTtpZih3aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWw9PT1lfSkpKXt2YXIgbj13aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWw9PT1lfSkpO24mJihuLmVsZW1lbnQuY2xvc2UoKSxuLmVsZW1lbnQudG9nZ2xlLmZvY3VzKCkpfWVsc2UgdGhpcy5jbG9zZUN1cnJlbnRseU9wZW5lZCgpfSxlLm9uRW50ZXI9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQucGFyZW50RWxlbWVudDtpZih3aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWw9PT1lfSkpKXt0LnByZXZlbnREZWZhdWx0KCk7dmFyIG49d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmVsPT09ZX0pKTtuJiZuLmVsZW1lbnQub3BlbigpfX0sZS5vbkFycm93PWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSEwKTt2YXIgZT13aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKX0pKTtpZihlKXt2YXIgbj1lLmVsZW1lbnQubWVudTtpZighbilyZXR1cm4hMTt2YXIgbz0odD9BcnJheS5mcm9tKG4ucXVlcnlTZWxlY3RvckFsbChcImE6bm90KFtoaWRkZW5dKSwgLmhzLWRyb3Bkb3duID4gYnV0dG9uOm5vdChbaGlkZGVuXSlcIikpLnJldmVyc2UoKTpBcnJheS5mcm9tKG4ucXVlcnlTZWxlY3RvckFsbChcImE6bm90KFtoaWRkZW5dKSwgLmhzLWRyb3Bkb3duID4gYnV0dG9uOm5vdChbaGlkZGVuXSlcIikpKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiF0LmNsYXNzTGlzdC5jb250YWlucyhcImRpc2FibGVkXCIpfSkpLGk9bi5xdWVyeVNlbGVjdG9yKFwiYTpmb2N1cywgYnV0dG9uOmZvY3VzXCIpLHI9by5maW5kSW5kZXgoKGZ1bmN0aW9uKHQpe3JldHVybiB0PT09aX0pKTtyKzE8by5sZW5ndGgmJnIrKyxvW3JdLmZvY3VzKCl9fSxlLm9uU3RhcnRFbmQ9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9ITApO3ZhciBlPXdpbmRvdy4kaHNEcm9wZG93bkNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpfSkpO2lmKGUpe3ZhciBuPWUuZWxlbWVudC5tZW51O2lmKCFuKXJldHVybiExO3ZhciBvPSh0P0FycmF5LmZyb20obi5xdWVyeVNlbGVjdG9yQWxsKFwiYVwiKSk6QXJyYXkuZnJvbShuLnF1ZXJ5U2VsZWN0b3JBbGwoXCJhXCIpKS5yZXZlcnNlKCkpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZGlzYWJsZWRcIil9KSk7by5sZW5ndGgmJm9bMF0uZm9jdXMoKX19LGUub25GaXJzdExldHRlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIil9KSk7aWYobil7dmFyIG89bi5lbGVtZW50Lm1lbnU7aWYoIW8pcmV0dXJuITE7dmFyIGk9QXJyYXkuZnJvbShvLnF1ZXJ5U2VsZWN0b3JBbGwoXCJhXCIpKSxyPWZ1bmN0aW9uKCl7cmV0dXJuIGkuZmluZEluZGV4KChmdW5jdGlvbihuLG8pe3JldHVybiBuLmlubmVyVGV4dC50b0xvd2VyQ2FzZSgpLmNoYXJBdCgwKT09PXQudG9Mb3dlckNhc2UoKSYmZS5oaXN0b3J5LmV4aXN0c0luSGlzdG9yeShvKX0pKX0scz1yKCk7LTE9PT1zJiYodGhpcy5oaXN0b3J5LmNsZWFySGlzdG9yeSgpLHM9cigpKSwtMSE9PXMmJihpW3NdLmZvY3VzKCksdGhpcy5oaXN0b3J5LmFkZEhpc3RvcnkocykpfX0sZS5jbG9zZUN1cnJlbnRseU9wZW5lZD1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSEwKTt2YXIgbj10JiZ0LmNsb3Nlc3QoXCIuaHMtZHJvcGRvd25cIikmJnQuY2xvc2VzdChcIi5ocy1kcm9wZG93blwiKS5wYXJlbnRFbGVtZW50LmNsb3Nlc3QoXCIuaHMtZHJvcGRvd25cIik/dC5jbG9zZXN0KFwiLmhzLWRyb3Bkb3duXCIpLnBhcmVudEVsZW1lbnQuY2xvc2VzdChcIi5ocy1kcm9wZG93blwiKTpudWxsLG89bj93aW5kb3cuJGhzRHJvcGRvd25Db2xsZWN0aW9uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpJiZ0LmVsZW1lbnQubWVudS5jbG9zZXN0KFwiLmhzLWRyb3Bkb3duXCIpLnBhcmVudEVsZW1lbnQuY2xvc2VzdChcIi5ocy1kcm9wZG93blwiKT09PW59KSk6d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKX0pKTt0JiZ0LmNsb3Nlc3QoXCIuaHMtZHJvcGRvd25cIikmJlwiaW5zaWRlXCI9PT0oMCxzLmdldENsYXNzUHJvcGVydHlBbHQpKHQuY2xvc2VzdChcIi5ocy1kcm9wZG93blwiKSxcIi0tYXV0by1jbG9zZVwiKSYmKG89by5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWwhPT10LmNsb3Nlc3QoXCIuaHMtZHJvcGRvd25cIil9KSkpLG8mJm8uZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYoXCJmYWxzZVwiPT09dC5lbGVtZW50LmNsb3NlTW9kZXx8XCJvdXRzaWRlXCI9PT10LmVsZW1lbnQuY2xvc2VNb2RlKXJldHVybiExO3QuZWxlbWVudC5jbG9zZShlKX0pKX0sZS5vbj1mdW5jdGlvbih0LGUsbil7dmFyIG89d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZSl9KSk7byYmKG8uZWxlbWVudC5ldmVudHNbdF09bil9LGV9KGEuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7dS5hdXRvSW5pdCgpfSkpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsKGZ1bmN0aW9uKCl7d2luZG93LiRoc0Ryb3Bkb3duQ29sbGVjdGlvbnx8KHdpbmRvdy4kaHNEcm9wZG93bkNvbGxlY3Rpb249W10pLHdpbmRvdy4kaHNEcm9wZG93bkNvbGxlY3Rpb24uZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5yZXNpemVIYW5kbGVyKCl9KSl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU0Ryb3Bkb3duPXUpLGUuZGVmYXVsdD11fSwzNzE6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTSW5wdXROdW1iZXJcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1uKDk2OSksbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcztvLmlucHV0PW8uZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLWlucHV0LW51bWJlci1pbnB1dF1cIil8fG51bGwsby5pbmNyZW1lbnQ9by5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtaW5wdXQtbnVtYmVyLWluY3JlbWVudF1cIil8fG51bGwsby5kZWNyZW1lbnQ9by5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtaW5wdXQtbnVtYmVyLWRlY3JlbWVudF1cIil8fG51bGwsby5pbnB1dCYmKG8uaW5wdXRWYWx1ZT1pc05hTihwYXJzZUludChvLmlucHV0LnZhbHVlKSk/MDpwYXJzZUludChvLmlucHV0LnZhbHVlKSk7dmFyIGk9by5lbC5kYXRhc2V0LmhzSW5wdXROdW1iZXIscz1pP0pTT04ucGFyc2UoaSk6e3N0ZXA6MX0sbD1yKHIoe30scyksbik7cmV0dXJuIG8ubWluSW5wdXRWYWx1ZT1cIm1pblwiaW4gbD9sLm1pbjowLG8ubWF4SW5wdXRWYWx1ZT1cIm1heFwiaW4gbD9sLm1heDpudWxsLG8uc3RlcD1cInN0ZXBcImluIGwmJmwuc3RlcD4wP2wuc3RlcDoxLG8uaW5pdCgpLG99cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5jcmVhdGVDb2xsZWN0aW9uKHdpbmRvdy4kaHNJbnB1dE51bWJlckNvbGxlY3Rpb24sdGhpcyksdGhpcy5pbnB1dCYmdGhpcy5pbmNyZW1lbnQmJnRoaXMuYnVpbGQoKX0sZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24oKXt0aGlzLmlucHV0JiZ0aGlzLmJ1aWxkSW5wdXQoKSx0aGlzLmluY3JlbWVudCYmdGhpcy5idWlsZEluY3JlbWVudCgpLHRoaXMuZGVjcmVtZW50JiZ0aGlzLmJ1aWxkRGVjcmVtZW50KCksdGhpcy5pbnB1dFZhbHVlPD0wJiYwPT09dGhpcy5taW5JbnB1dFZhbHVlJiYodGhpcy5pbnB1dFZhbHVlPTAsdGhpcy5pbnB1dC52YWx1ZT1cIjBcIiksKHRoaXMuaW5wdXRWYWx1ZTw9MHx8dGhpcy5taW5JbnB1dFZhbHVlPDApJiZ0aGlzLmNoYW5nZVZhbHVlKCksdGhpcy5pbnB1dC5oYXNBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSYmdGhpcy5kaXNhYmxlQnV0dG9ucygpfSxlLnByb3RvdHlwZS5idWlsZElucHV0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLChmdW5jdGlvbigpe3JldHVybiB0LmNoYW5nZVZhbHVlKCl9KSl9LGUucHJvdG90eXBlLmJ1aWxkSW5jcmVtZW50PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmluY3JlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXt0LmNoYW5nZVZhbHVlKFwiaW5jcmVtZW50XCIpfSkpfSxlLnByb3RvdHlwZS5idWlsZERlY3JlbWVudD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5kZWNyZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7dC5jaGFuZ2VWYWx1ZShcImRlY3JlbWVudFwiKX0pKX0sZS5wcm90b3R5cGUuY2hhbmdlVmFsdWU9ZnVuY3Rpb24odCl7dmFyIGUsbjt2b2lkIDA9PT10JiYodD1cIm5vbmVcIik7dmFyIG89e2lucHV0VmFsdWU6dGhpcy5pbnB1dFZhbHVlfSxpPW51bGwhPT0oZT10aGlzLm1pbklucHV0VmFsdWUpJiZ2b2lkIDAhPT1lP2U6TnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIscj1udWxsIT09KG49dGhpcy5tYXhJbnB1dFZhbHVlKSYmdm9pZCAwIT09bj9uOk51bWJlci5NQVhfU0FGRV9JTlRFR0VSO3N3aXRjaCh0aGlzLmlucHV0VmFsdWU9aXNOYU4odGhpcy5pbnB1dFZhbHVlKT8wOnRoaXMuaW5wdXRWYWx1ZSx0KXtjYXNlXCJpbmNyZW1lbnRcIjp2YXIgbD10aGlzLmlucHV0VmFsdWUrdGhpcy5zdGVwO3RoaXMuaW5wdXRWYWx1ZT1sPj1pJiZsPD1yP2w6cix0aGlzLmlucHV0LnZhbHVlPXRoaXMuaW5wdXRWYWx1ZS50b1N0cmluZygpO2JyZWFrO2Nhc2VcImRlY3JlbWVudFwiOnZhciBhPXRoaXMuaW5wdXRWYWx1ZS10aGlzLnN0ZXA7dGhpcy5pbnB1dFZhbHVlPWE+PWkmJmE8PXI/YTppLHRoaXMuaW5wdXQudmFsdWU9dGhpcy5pbnB1dFZhbHVlLnRvU3RyaW5nKCk7YnJlYWs7ZGVmYXVsdDp2YXIgYz1pc05hTihwYXJzZUludCh0aGlzLmlucHV0LnZhbHVlKSk/MDpwYXJzZUludCh0aGlzLmlucHV0LnZhbHVlKTt0aGlzLmlucHV0VmFsdWU9Yz49cj9yOmM8PWk/aTpjLHRoaXMuaW5wdXRWYWx1ZTw9aSYmKHRoaXMuaW5wdXQudmFsdWU9dGhpcy5pbnB1dFZhbHVlLnRvU3RyaW5nKCkpfW8uaW5wdXRWYWx1ZT10aGlzLmlucHV0VmFsdWUsdGhpcy5pbnB1dFZhbHVlPT09aT8odGhpcy5lbC5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIiksdGhpcy5kZWNyZW1lbnQmJnRoaXMuZGlzYWJsZUJ1dHRvbnMoXCJkZWNyZW1lbnRcIikpOih0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKSx0aGlzLmRlY3JlbWVudCYmdGhpcy5lbmFibGVCdXR0b25zKFwiZGVjcmVtZW50XCIpKSx0aGlzLmlucHV0VmFsdWU9PT1yPyh0aGlzLmVsLmNsYXNzTGlzdC5hZGQoXCJkaXNhYmxlZFwiKSx0aGlzLmluY3JlbWVudCYmdGhpcy5kaXNhYmxlQnV0dG9ucyhcImluY3JlbWVudFwiKSk6KHRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcImRpc2FibGVkXCIpLHRoaXMuaW5jcmVtZW50JiZ0aGlzLmVuYWJsZUJ1dHRvbnMoXCJpbmNyZW1lbnRcIikpLHRoaXMuZmlyZUV2ZW50KFwiY2hhbmdlXCIsbyksKDAscy5kaXNwYXRjaCkoXCJjaGFuZ2UuaHMuaW5wdXROdW1iZXJcIix0aGlzLmVsLG8pfSxlLnByb3RvdHlwZS5kaXNhYmxlQnV0dG9ucz1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD1cImFsbFwiKSxcImFsbFwiPT09dD8oXCJCVVRUT05cIiE9PXRoaXMuaW5jcmVtZW50LnRhZ05hbWUmJlwiSU5QVVRcIiE9PXRoaXMuaW5jcmVtZW50LnRhZ05hbWV8fHRoaXMuaW5jcmVtZW50LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsXCJkaXNhYmxlZFwiKSxcIkJVVFRPTlwiIT09dGhpcy5kZWNyZW1lbnQudGFnTmFtZSYmXCJJTlBVVFwiIT09dGhpcy5kZWNyZW1lbnQudGFnTmFtZXx8dGhpcy5kZWNyZW1lbnQuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIixcImRpc2FibGVkXCIpKTpcImluY3JlbWVudFwiPT09dD9cIkJVVFRPTlwiIT09dGhpcy5pbmNyZW1lbnQudGFnTmFtZSYmXCJJTlBVVFwiIT09dGhpcy5pbmNyZW1lbnQudGFnTmFtZXx8dGhpcy5pbmNyZW1lbnQuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIixcImRpc2FibGVkXCIpOlwiZGVjcmVtZW50XCI9PT10JiYoXCJCVVRUT05cIiE9PXRoaXMuZGVjcmVtZW50LnRhZ05hbWUmJlwiSU5QVVRcIiE9PXRoaXMuZGVjcmVtZW50LnRhZ05hbWV8fHRoaXMuZGVjcmVtZW50LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsXCJkaXNhYmxlZFwiKSl9LGUucHJvdG90eXBlLmVuYWJsZUJ1dHRvbnM9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9XCJhbGxcIiksXCJhbGxcIj09PXQ/KFwiQlVUVE9OXCIhPT10aGlzLmluY3JlbWVudC50YWdOYW1lJiZcIklOUFVUXCIhPT10aGlzLmluY3JlbWVudC50YWdOYW1lfHx0aGlzLmluY3JlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSxcIkJVVFRPTlwiIT09dGhpcy5kZWNyZW1lbnQudGFnTmFtZSYmXCJJTlBVVFwiIT09dGhpcy5kZWNyZW1lbnQudGFnTmFtZXx8dGhpcy5kZWNyZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIikpOlwiaW5jcmVtZW50XCI9PT10P1wiQlVUVE9OXCIhPT10aGlzLmluY3JlbWVudC50YWdOYW1lJiZcIklOUFVUXCIhPT10aGlzLmluY3JlbWVudC50YWdOYW1lfHx0aGlzLmluY3JlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTpcImRlY3JlbWVudFwiPT09dCYmKFwiQlVUVE9OXCIhPT10aGlzLmRlY3JlbWVudC50YWdOYW1lJiZcIklOUFVUXCIhPT10aGlzLmRlY3JlbWVudC50YWdOYW1lfHx0aGlzLmRlY3JlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSl9LGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj13aW5kb3cuJGhzSW5wdXROdW1iZXJDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtyZXR1cm4gbj9lP246bi5lbGVtZW50Om51bGx9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzSW5wdXROdW1iZXJDb2xsZWN0aW9ufHwod2luZG93LiRoc0lucHV0TnVtYmVyQ29sbGVjdGlvbj1bXSksZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLWlucHV0LW51bWJlcl06bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXt3aW5kb3cuJGhzSW5wdXROdW1iZXJDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKX0sZX0obig3MzcpLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2wuYXV0b0luaXQoKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTSW5wdXROdW1iZXI9bCksZS5kZWZhdWx0PWx9LDc3MDpmdW5jdGlvbih0LGUsbil7XG4vKlxuICogSFNPdmVybGF5XG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xudmFyIG8saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8KG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LG8odCxlKX0sZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxyPXRoaXMmJnRoaXMuX19hc3NpZ258fGZ1bmN0aW9uKCl7cmV0dXJuIHI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9big5NjkpLGw9bigxOTApLGE9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4sbyl7dmFyIGksYSxjPXQuY2FsbCh0aGlzLGUsbixvKXx8dGhpcyx1PWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1vdmVybGF5LW9wdGlvbnNcIiksZD11P0pTT04ucGFyc2UodSk6e30scD1yKHIoe30sZCksbik7aWYoYy5oaWRkZW5DbGFzcz0obnVsbD09cD92b2lkIDA6cC5oaWRkZW5DbGFzcyl8fFwiaGlkZGVuXCIsYy5pc0Nsb3NlUHJldj1udWxsPT09KGk9bnVsbD09cD92b2lkIDA6cC5pc0Nsb3NlUHJldil8fHZvaWQgMD09PWl8fGksYy5iYWNrZHJvcENsYXNzZXM9bnVsbCE9PShhPW51bGw9PXA/dm9pZCAwOnAuYmFja2Ryb3BDbGFzc2VzKSYmdm9pZCAwIT09YT9hOlwidHJhbnNpdGlvbiBkdXJhdGlvbiBmaXhlZCBpbnNldC0wIGJnLWdyYXktOTAwIGJnLW9wYWNpdHktNTAgZGFyazpiZy1vcGFjaXR5LTgwIGhzLW92ZXJsYXktYmFja2Ryb3BcIixjLm9wZW5OZXh0T3ZlcmxheT0hMSxjLmF1dG9IaWRlPW51bGwsYy5vdmVybGF5SWQ9Yy5lbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLW92ZXJsYXlcIiksYy5vdmVybGF5PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5vdmVybGF5SWQpLGMub3ZlcmxheSl7Yy5pc0Nsb3NlV2hlbkNsaWNrSW5zaWRlPSgwLHMuc3RyaW5nVG9Cb29sZWFuKSgoMCxzLmdldENsYXNzUHJvcGVydHkpKGMub3ZlcmxheSxcIi0tY2xvc2Utd2hlbi1jbGljay1pbnNpZGVcIixcImZhbHNlXCIpfHxcImZhbHNlXCIpLGMuaXNUYWJBY2Nlc3NpYmlsaXR5TGltaXRlZD0oMCxzLnN0cmluZ1RvQm9vbGVhbikoKDAscy5nZXRDbGFzc1Byb3BlcnR5KShjLm92ZXJsYXksXCItLXRhYi1hY2Nlc3NpYmlsaXR5LWxpbWl0ZWRcIixcInRydWVcIil8fFwidHJ1ZVwiKSxjLmlzTGF5b3V0QWZmZWN0PSgwLHMuc3RyaW5nVG9Cb29sZWFuKSgoMCxzLmdldENsYXNzUHJvcGVydHkpKGMub3ZlcmxheSxcIi0taXMtbGF5b3V0LWFmZmVjdFwiLFwiZmFsc2VcIil8fFwiZmFsc2VcIiksYy5oYXNBdXRvZm9jdXM9KDAscy5zdHJpbmdUb0Jvb2xlYW4pKCgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkoYy5vdmVybGF5LFwiLS1oYXMtYXV0b2ZvY3VzXCIsXCJ0cnVlXCIpfHxcInRydWVcIiksYy5oYXNBYmlsaXR5VG9DbG9zZU9uQmFja2Ryb3BDbGljaz0oMCxzLnN0cmluZ1RvQm9vbGVhbikoYy5vdmVybGF5LmdldEF0dHJpYnV0ZShcImRhdGEtaHMtb3ZlcmxheS1rZXlib2FyZFwiKXx8XCJ0cnVlXCIpO3ZhciBoPSgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkoYy5vdmVybGF5LFwiLS1hdXRvLWNsb3NlXCIpO2MuYXV0b0Nsb3NlPSFpc05hTigraCkmJmlzRmluaXRlKCtoKT8raDpsLkJSRUFLUE9JTlRTW2hdfHxudWxsO3ZhciBmPSgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkoYy5vdmVybGF5LFwiLS1vcGVuZWRcIik7Yy5vcGVuZWRCcmVha3BvaW50PSghaXNOYU4oK2YpJiZpc0Zpbml0ZSgrZik/K2Y6bC5CUkVBS1BPSU5UU1tmXSl8fG51bGx9cmV0dXJuIGMub3ZlcmxheSYmYy5pbml0KCksY31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb24sdGhpcyksdGhpcy5pc0xheW91dEFmZmVjdCYmdGhpcy5vcGVuZWRCcmVha3BvaW50KXt2YXIgbj1lLmdldEluc3RhbmNlKHRoaXMuZWwsITApO2Uuc2V0T3BlbmVkKHRoaXMub3BlbmVkQnJlYWtwb2ludCxuKX10aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe3Qub3ZlcmxheS5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIik/dC5jbG9zZSgpOnQub3BlbigpfSkpLHRoaXMub3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oZSl7ZS50YXJnZXQuaWQmJlwiI1wiLmNvbmNhdChlLnRhcmdldC5pZCk9PT10Lm92ZXJsYXlJZCYmdC5pc0Nsb3NlV2hlbkNsaWNrSW5zaWRlJiZ0Lmhhc0FiaWxpdHlUb0Nsb3NlT25CYWNrZHJvcENsaWNrJiZ0LmNsb3NlKCl9KSl9LGUucHJvdG90eXBlLmhpZGVBdXRvPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXBhcnNlSW50KCgwLHMuZ2V0Q2xhc3NQcm9wZXJ0eSkodGhpcy5vdmVybGF5LFwiLS1hdXRvLWhpZGVcIixcIjBcIikpO2UmJih0aGlzLmF1dG9IaWRlPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5jbG9zZSgpfSksZSkpfSxlLnByb3RvdHlwZS5jaGVja1RpbWVyPWZ1bmN0aW9uKCl7dGhpcy5hdXRvSGlkZSYmKGNsZWFyVGltZW91dCh0aGlzLmF1dG9IaWRlKSx0aGlzLmF1dG9IaWRlPW51bGwpfSxlLnByb3RvdHlwZS5idWlsZEJhY2tkcm9wPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMub3ZlcmxheS5jbGFzc0xpc3QudmFsdWUuc3BsaXQoXCIgXCIpLG49cGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5vdmVybGF5KS5nZXRQcm9wZXJ0eVZhbHVlKFwiei1pbmRleFwiKSksbz10aGlzLm92ZXJsYXkuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1vdmVybGF5LWJhY2tkcm9wLWNvbnRhaW5lclwiKXx8ITEsaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHI9dGhpcy5iYWNrZHJvcENsYXNzZXMsbD1cInN0YXRpY1wiIT09KDAscy5nZXRDbGFzc1Byb3BlcnR5KSh0aGlzLm92ZXJsYXksXCItLW92ZXJsYXktYmFja2Ryb3BcIixcInRydWVcIiksYT1cImZhbHNlXCI9PT0oMCxzLmdldENsYXNzUHJvcGVydHkpKHRoaXMub3ZlcmxheSxcIi0tb3ZlcmxheS1iYWNrZHJvcFwiLFwidHJ1ZVwiKTtpLmlkPVwiXCIuY29uY2F0KHRoaXMub3ZlcmxheS5pZCxcIi1iYWNrZHJvcFwiKSxcInN0eWxlXCJpbiBpJiYoaS5zdHlsZS56SW5kZXg9XCJcIi5jb25jYXQobi0xKSk7Zm9yKHZhciBjPTAsdT1lO2M8dS5sZW5ndGg7YysrKXt2YXIgZD11W2NdOyhkLnN0YXJ0c1dpdGgoXCJocy1vdmVybGF5LWJhY2tkcm9wLW9wZW46XCIpfHxkLmluY2x1ZGVzKFwiOmhzLW92ZXJsYXktYmFja2Ryb3Atb3BlbjpcIikpJiYocis9XCIgXCIuY29uY2F0KGQpKX1hfHwobyYmKChpPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobykuY2xvbmVOb2RlKCEwKSkuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKSxyPVwiXCIuY29uY2F0KGkuY2xhc3NMaXN0LnRvU3RyaW5nKCkpLGkuY2xhc3NMaXN0LnZhbHVlPVwiXCIpLGwmJmkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuY2xvc2UoKX0pLCEwKSxpLnNldEF0dHJpYnV0ZShcImRhdGEtaHMtb3ZlcmxheS1iYWNrZHJvcC10ZW1wbGF0ZVwiLFwiXCIpLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaSksc2V0VGltZW91dCgoZnVuY3Rpb24oKXtpLmNsYXNzTGlzdC52YWx1ZT1yfSkpKX0sZS5wcm90b3R5cGUuZGVzdHJveUJhY2tkcm9wPWZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIi5jb25jYXQodGhpcy5vdmVybGF5LmlkLFwiLWJhY2tkcm9wXCIpKTt0JiYodGhpcy5vcGVuTmV4dE92ZXJsYXkmJih0LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbj1cIlwiLmNvbmNhdCgxLjgqcGFyc2VGbG9hdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KS50cmFuc2l0aW9uRHVyYXRpb24ucmVwbGFjZSgvW15cXGQuLV0vZyxcIlwiKSksXCJzXCIpKSx0LmNsYXNzTGlzdC5hZGQoXCJvcGFjaXR5LTBcIiksKDAscy5hZnRlclRyYW5zaXRpb24pKHQsKGZ1bmN0aW9uKCl7dC5yZW1vdmUoKX0pKSl9LGUucHJvdG90eXBlLmZvY3VzRWxlbWVudD1mdW5jdGlvbigpe3ZhciB0PXRoaXMub3ZlcmxheS5xdWVyeVNlbGVjdG9yKFwiW2F1dG9mb2N1c11cIik7aWYoIXQpcmV0dXJuITE7dC5mb2N1cygpfSxlLnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZighdGhpcy5vdmVybGF5KXJldHVybiExO3ZhciBlPXdpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50Lm92ZXJsYXk9PT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhzLW92ZXJsYXkub3BlblwiKSYmIXQuZWxlbWVudC5pc0xheW91dEFmZmVjdH0pKSxuPVwidHJ1ZVwiIT09KDAscy5nZXRDbGFzc1Byb3BlcnR5KSh0aGlzLm92ZXJsYXksXCItLWJvZHktc2Nyb2xsXCIsXCJmYWxzZVwiKTtpZih0aGlzLmlzQ2xvc2VQcmV2JiZlKXJldHVybiB0aGlzLm9wZW5OZXh0T3ZlcmxheT0hMCxlLmVsZW1lbnQuY2xvc2UoKS50aGVuKChmdW5jdGlvbigpe3Qub3BlbigpLHQub3Blbk5leHRPdmVybGF5PSExfSkpO24mJihkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIpLHRoaXMuYnVpbGRCYWNrZHJvcCgpLHRoaXMuY2hlY2tUaW1lcigpLHRoaXMuaGlkZUF1dG8oKSx0aGlzLm92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLmhpZGRlbkNsYXNzKSx0aGlzLm92ZXJsYXkuc2V0QXR0cmlidXRlKFwiYXJpYS1vdmVybGF5XCIsXCJ0cnVlXCIpLHRoaXMub3ZlcmxheS5zZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiLFwiLTFcIiksc2V0VGltZW91dCgoZnVuY3Rpb24oKXtpZih0Lm92ZXJsYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpKXJldHVybiExO3Qub3ZlcmxheS5jbGFzc0xpc3QuYWRkKFwib3BlblwiLFwib3BlbmVkXCIpLHQuaXNMYXlvdXRBZmZlY3QmJmRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChcImhzLW92ZXJsYXktYm9keS1vcGVuXCIpLHQuZmlyZUV2ZW50KFwib3BlblwiLHQuZWwpLCgwLHMuZGlzcGF0Y2gpKFwib3Blbi5ocy5vdmVybGF5XCIsdC5lbCx0LmVsKSx0Lmhhc0F1dG9mb2N1cyYmdC5mb2N1c0VsZW1lbnQoKX0pLDUwKX0sZS5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt2b2lkIDA9PT10JiYodD0hMSksdGhpcy5pc0xheW91dEFmZmVjdCYmZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwiaHMtb3ZlcmxheS1ib2R5LW9wZW5cIik7dmFyIG49ZnVuY3Rpb24odCl7aWYoZS5vdmVybGF5LmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIikpcmV0dXJuITE7ZS5vdmVybGF5LmNsYXNzTGlzdC5hZGQoZS5oaWRkZW5DbGFzcyksZS5kZXN0cm95QmFja2Ryb3AoKSxlLmZpcmVFdmVudChcImNsb3NlXCIsZS5lbCksKDAscy5kaXNwYXRjaCkoXCJjbG9zZS5ocy5vdmVybGF5XCIsZS5lbCxlLmVsKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhzLW92ZXJsYXkub3BlbmVkXCIpfHwoZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz1cIlwiKSx0KGUub3ZlcmxheSl9O3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24obyl7aWYoIWUub3ZlcmxheSlyZXR1cm4hMTtlLm92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIixcIm9wZW5lZFwiKSxlLm92ZXJsYXkucmVtb3ZlQXR0cmlidXRlKFwiYXJpYS1vdmVybGF5XCIpLGUub3ZlcmxheS5yZW1vdmVBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiKSx0P24obyk6KDAscy5hZnRlclRyYW5zaXRpb24pKGUub3ZlcmxheSwoZnVuY3Rpb24oKXtuKG8pfSkpfSkpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc092ZXJsYXlDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KXx8ZS5lbGVtZW50Lm92ZXJsYXk9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtyZXR1cm4gbj9lP246bi5lbGVtZW50LmVsOm51bGx9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb258fCh3aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1vdmVybGF5XTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSksd2luZG93LiRoc092ZXJsYXlDb2xsZWN0aW9uJiZkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5hY2Nlc3NpYmlsaXR5KHQpfSkpfSxlLm9wZW49ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc092ZXJsYXlDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KXx8ZS5lbGVtZW50Lm92ZXJsYXk9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtlJiZlLmVsZW1lbnQub3ZlcmxheS5jbGFzc0xpc3QuY29udGFpbnMoZS5lbGVtZW50LmhpZGRlbkNsYXNzKSYmZS5lbGVtZW50Lm9wZW4oKX0sZS5jbG9zZT1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfHxlLmVsZW1lbnQub3ZlcmxheT09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO2UmJiFlLmVsZW1lbnQub3ZlcmxheS5jbGFzc0xpc3QuY29udGFpbnMoZS5lbGVtZW50LmhpZGRlbkNsYXNzKSYmZS5lbGVtZW50LmNsb3NlKCl9LGUuc2V0T3BlbmVkPWZ1bmN0aW9uKHQsZSl7ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aD49dD8oZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwiaHMtb3ZlcmxheS1ib2R5LW9wZW5cIiksZS5lbGVtZW50Lm92ZXJsYXkuY2xhc3NMaXN0LmFkZChcIm9wZW5lZFwiKSk6ZS5lbGVtZW50LmNsb3NlKCEwKX0sZS5hY2Nlc3NpYmlsaXR5PWZ1bmN0aW9uKHQpe3ZhciBlLG4sbz13aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb24uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50Lm92ZXJsYXkuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKX0pKSxpPW9bby5sZW5ndGgtMV0scj1udWxsPT09KG49bnVsbD09PShlPW51bGw9PWk/dm9pZCAwOmkuZWxlbWVudCl8fHZvaWQgMD09PWU/dm9pZCAwOmUub3ZlcmxheSl8fHZvaWQgMD09PW4/dm9pZCAwOm4ucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLCBbaHJlZl0sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhLCBbdGFiaW5kZXhdOm5vdChbdGFiaW5kZXg9XCItMVwiXSknKSxsPVtdOyhudWxsPT1yP3ZvaWQgMDpyLmxlbmd0aCkmJnIuZm9yRWFjaCgoZnVuY3Rpb24odCl7KDAscy5pc1BhcmVudE9yRWxlbWVudEhpZGRlbikodCl8fGwucHVzaCh0KX0pKTt2YXIgYT1pJiYhdC5tZXRhS2V5O2lmKGEmJiFpLmVsZW1lbnQuaXNUYWJBY2Nlc3NpYmlsaXR5TGltaXRlZCYmXCJUYWJcIj09PXQuY29kZSlyZXR1cm4hMTthJiZsLmxlbmd0aCYmXCJUYWJcIj09PXQuY29kZSYmKHQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uVGFiKGksbCkpLGEmJlwiRXNjYXBlXCI9PT10LmNvZGUmJih0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkVzY2FwZShpKSl9LGUub25Fc2NhcGU9ZnVuY3Rpb24odCl7dCYmdC5lbGVtZW50Lmhhc0FiaWxpdHlUb0Nsb3NlT25CYWNrZHJvcENsaWNrJiZ0LmVsZW1lbnQuY2xvc2UoKX0sZS5vblRhYj1mdW5jdGlvbih0LGUpe2lmKCFlLmxlbmd0aClyZXR1cm4hMTt2YXIgbj10LmVsZW1lbnQub3ZlcmxheS5xdWVyeVNlbGVjdG9yKFwiOmZvY3VzXCIpLG89QXJyYXkuZnJvbShlKS5pbmRleE9mKG4pO28+LTE/ZVsobysxKSVlLmxlbmd0aF0uZm9jdXMoKTplWzBdLmZvY3VzKCl9LGUub249ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXdpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZSl8fHQuZWxlbWVudC5vdmVybGF5PT09KFwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZSl9KSk7byYmKG8uZWxlbWVudC5ldmVudHNbdF09bil9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXthLmF1dG9Jbml0KCl9KSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwoZnVuY3Rpb24oKXshZnVuY3Rpb24oKXtpZighd2luZG93LiRoc092ZXJsYXlDb2xsZWN0aW9uLmxlbmd0aHx8IXdpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmF1dG9DbG9zZX0pKSlyZXR1cm4hMTt3aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb24uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmF1dG9DbG9zZX0pKS5mb3JFYWNoKChmdW5jdGlvbih0KXtkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoPj10LmVsZW1lbnQuYXV0b0Nsb3NlJiZ0LmVsZW1lbnQuY2xvc2UoITApfSkpfSgpLGZ1bmN0aW9uKCl7aWYoIXdpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5sZW5ndGh8fCF3aW5kb3cuJGhzT3ZlcmxheUNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5vcGVuZWRCcmVha3BvaW50fSkpKXJldHVybiExO3dpbmRvdy4kaHNPdmVybGF5Q29sbGVjdGlvbi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQub3BlbmVkQnJlYWtwb2ludH0pKS5mb3JFYWNoKChmdW5jdGlvbih0KXthLnNldE9wZW5lZCh0LmVsZW1lbnQub3BlbmVkQnJlYWtwb2ludCx0KX0pKX0oKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTT3ZlcmxheT1hKSxlLmRlZmF1bHQ9YX0sNjU5OmZ1bmN0aW9uKHQsZSxuKXtcbi8qXG4gKiBIU1BpbklucHV0XG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xudmFyIG8saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8KG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LG8odCxlKX0sZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxyPXRoaXMmJnRoaXMuX19hc3NpZ258fGZ1bmN0aW9uKCl7cmV0dXJuIHI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHM9big5NjkpLGw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZhciBvPXQuY2FsbCh0aGlzLGUsbil8fHRoaXMsaT1lLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtcGluLWlucHV0XCIpLHM9aT9KU09OLnBhcnNlKGkpOnt9LGw9cihyKHt9LHMpLG4pO3JldHVybiBvLml0ZW1zPW8uZWwucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLXBpbi1pbnB1dC1pdGVtXVwiKSxvLmN1cnJlbnRJdGVtPW51bGwsby5jdXJyZW50VmFsdWU9bmV3IEFycmF5KG8uaXRlbXMubGVuZ3RoKS5maWxsKFwiXCIpLG8ucGxhY2Vob2xkZXJzPVtdLG8uYXZhaWxhYmxlQ2hhcnNSRT1uZXcgUmVnRXhwKChudWxsPT1sP3ZvaWQgMDpsLmF2YWlsYWJsZUNoYXJzUkUpfHxcIl5bYS16QS1aMC05XSskXCIpLG8uaW5pdCgpLG99cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5jcmVhdGVDb2xsZWN0aW9uKHdpbmRvdy4kaHNQaW5JbnB1dENvbGxlY3Rpb24sdGhpcyksdGhpcy5pdGVtcy5sZW5ndGgmJnRoaXMuYnVpbGQoKX0sZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24oKXt0aGlzLmJ1aWxkSW5wdXRJdGVtcygpfSxlLnByb3RvdHlwZS5idWlsZElucHV0SXRlbXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuaXRlbXMuZm9yRWFjaCgoZnVuY3Rpb24oZSxuKXt0LnBsYWNlaG9sZGVycy5wdXNoKGUuZ2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIil8fFwiXCIpLGUuaGFzQXR0cmlidXRlKFwiYXV0b2ZvY3VzXCIpJiZ0Lm9uRm9jdXNJbihuKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLChmdW5jdGlvbihlKXtyZXR1cm4gdC5vbklucHV0KGUsbil9KSksZS5hZGRFdmVudExpc3RlbmVyKFwicGFzdGVcIiwoZnVuY3Rpb24oZSl7cmV0dXJuIHQub25QYXN0ZShlKX0pKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsKGZ1bmN0aW9uKGUpe3JldHVybiB0Lm9uS2V5ZG93bihlLG4pfSkpLGUuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5vbkZvY3VzSW4obil9KSksZS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5vbkZvY3VzT3V0KG4pfSkpfSkpfSxlLnByb3RvdHlwZS5jaGVja0lmTnVtYmVyPWZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hdGNoKHRoaXMuYXZhaWxhYmxlQ2hhcnNSRSl9LGUucHJvdG90eXBlLmF1dG9GaWxsQWxsPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7QXJyYXkuZnJvbSh0KS5mb3JFYWNoKChmdW5jdGlvbih0LG4pe2lmKCEobnVsbD09ZT92b2lkIDA6ZS5pdGVtc1tuXSkpcmV0dXJuITE7ZS5pdGVtc1tuXS52YWx1ZT10LGUuaXRlbXNbbl0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJpbnB1dFwiLHtidWJibGVzOiEwfSkpfSkpfSxlLnByb3RvdHlwZS5zZXRDdXJyZW50VmFsdWU9ZnVuY3Rpb24oKXt0aGlzLmN1cnJlbnRWYWx1ZT1BcnJheS5mcm9tKHRoaXMuaXRlbXMpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQudmFsdWV9KSl9LGUucHJvdG90eXBlLnRvZ2dsZUNvbXBsZXRlZD1mdW5jdGlvbigpe3RoaXMuY3VycmVudFZhbHVlLmluY2x1ZGVzKFwiXCIpP3RoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTp0aGlzLmVsLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIil9LGUucHJvdG90eXBlLm9uSW5wdXQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10LnRhcmdldC52YWx1ZTtpZih0aGlzLmN1cnJlbnRJdGVtPXQudGFyZ2V0LHRoaXMuY3VycmVudEl0ZW0udmFsdWU9XCJcIix0aGlzLmN1cnJlbnRJdGVtLnZhbHVlPW5bbi5sZW5ndGgtMV0sIXRoaXMuY2hlY2tJZk51bWJlcih0aGlzLmN1cnJlbnRJdGVtLnZhbHVlKSlyZXR1cm4gdGhpcy5jdXJyZW50SXRlbS52YWx1ZT10aGlzLmN1cnJlbnRWYWx1ZVtlXXx8XCJcIiwhMTtpZih0aGlzLnNldEN1cnJlbnRWYWx1ZSgpLHRoaXMuY3VycmVudEl0ZW0udmFsdWUpe2lmKGU8dGhpcy5pdGVtcy5sZW5ndGgtMSYmdGhpcy5pdGVtc1tlKzFdLmZvY3VzKCksIXRoaXMuY3VycmVudFZhbHVlLmluY2x1ZGVzKFwiXCIpKXt2YXIgbz17Y3VycmVudFZhbHVlOnRoaXMuY3VycmVudFZhbHVlfTt0aGlzLmZpcmVFdmVudChcImNvbXBsZXRlZFwiLG8pLCgwLHMuZGlzcGF0Y2gpKFwiY29tcGxldGVkLmhzLnBpbklucHV0XCIsdGhpcy5lbCxvKX10aGlzLnRvZ2dsZUNvbXBsZXRlZCgpfWVsc2UgZT4wJiZ0aGlzLml0ZW1zW2UtMV0uZm9jdXMoKX0sZS5wcm90b3R5cGUub25LZXlkb3duPWZ1bmN0aW9uKHQsZSl7XCJCYWNrc3BhY2VcIj09PXQua2V5JiZlPjAmJihcIlwiPT09dGhpcy5pdGVtc1tlXS52YWx1ZT8odGhpcy5pdGVtc1tlLTFdLnZhbHVlPVwiXCIsdGhpcy5pdGVtc1tlLTFdLmZvY3VzKCkpOnRoaXMuaXRlbXNbZV0udmFsdWU9XCJcIiksdGhpcy5zZXRDdXJyZW50VmFsdWUoKSx0aGlzLnRvZ2dsZUNvbXBsZXRlZCgpfSxlLnByb3RvdHlwZS5vbkZvY3VzSW49ZnVuY3Rpb24odCl7dGhpcy5pdGVtc1t0XS5zZXRBdHRyaWJ1dGUoXCJwbGFjZWhvbGRlclwiLFwiXCIpfSxlLnByb3RvdHlwZS5vbkZvY3VzT3V0PWZ1bmN0aW9uKHQpe3RoaXMuaXRlbXNbdF0uc2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIix0aGlzLnBsYWNlaG9sZGVyc1t0XSl9LGUucHJvdG90eXBlLm9uUGFzdGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0LnByZXZlbnREZWZhdWx0KCksdGhpcy5pdGVtcy5mb3JFYWNoKChmdW5jdGlvbihuKXtkb2N1bWVudC5hY3RpdmVFbGVtZW50PT09biYmZS5hdXRvRmlsbEFsbCh0LmNsaXBib2FyZERhdGEuZ2V0RGF0YShcInRleHRcIikpfSkpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc1BpbklucHV0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1BpbklucHV0Q29sbGVjdGlvbnx8KHdpbmRvdy4kaHNQaW5JbnB1dENvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1waW4taW5wdXRdOm5vdCguLS1wcmV2ZW50LW9uLWxvYWQtaW5pdClcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7d2luZG93LiRoc1BpbklucHV0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSl9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtsLmF1dG9Jbml0KCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1BpbklucHV0PWwpLGUuZGVmYXVsdD1sfSwxMzk6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTUmVtb3ZlRWxlbWVudFxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPW4oOTY5KSxsPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbz10LmNhbGwodGhpcyxlLG4pfHx0aGlzLGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXJlbW92ZS1lbGVtZW50LW9wdGlvbnNcIikscz1pP0pTT04ucGFyc2UoaSk6e30sbD1yKHIoe30scyksbik7cmV0dXJuIG8ucmVtb3ZlVGFyZ2V0SWQ9by5lbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXJlbW92ZS1lbGVtZW50XCIpLG8ucmVtb3ZlVGFyZ2V0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioby5yZW1vdmVUYXJnZXRJZCksby5yZW1vdmVUYXJnZXRBbmltYXRpb25DbGFzcz0obnVsbD09bD92b2lkIDA6bC5yZW1vdmVUYXJnZXRBbmltYXRpb25DbGFzcyl8fFwiaHMtcmVtb3ZpbmdcIixvLnJlbW92ZVRhcmdldCYmby5pbml0KCksb31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzUmVtb3ZlRWxlbWVudENvbGxlY3Rpb24sdGhpcyksdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZW1vdmUoKX0pKX0sZS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZighdGhpcy5yZW1vdmVUYXJnZXQpcmV0dXJuITE7dGhpcy5yZW1vdmVUYXJnZXQuY2xhc3NMaXN0LmFkZCh0aGlzLnJlbW92ZVRhcmdldEFuaW1hdGlvbkNsYXNzKSwoMCxzLmFmdGVyVHJhbnNpdGlvbikodGhpcy5yZW1vdmVUYXJnZXQsKGZ1bmN0aW9uKCl7dC5yZW1vdmVUYXJnZXQucmVtb3ZlKCl9KSl9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzUmVtb3ZlRWxlbWVudENvbGxlY3Rpb258fCh3aW5kb3cuJGhzUmVtb3ZlRWxlbWVudENvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy1yZW1vdmUtZWxlbWVudF06bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXt3aW5kb3cuJGhzUmVtb3ZlRWxlbWVudENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSl8fG5ldyBlKHQpfSkpfSxlfShuKDczNykuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7bC5hdXRvSW5pdCgpfSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuSFNSZW1vdmVFbGVtZW50PWwpLGUuZGVmYXVsdD1sfSw1OTE6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTU2Nyb2xsc3B5XG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xudmFyIG8saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8KG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LG8odCxlKX0sZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcj1uKDk2OSkscz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dm9pZCAwPT09biYmKG49e30pO3ZhciBvPXQuY2FsbCh0aGlzLGUsbil8fHRoaXM7cmV0dXJuIG8uYWN0aXZlU2VjdGlvbj1udWxsLG8uY29udGVudElkPW8uZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zY3JvbGxzcHlcIiksby5jb250ZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioby5jb250ZW50SWQpLG8ubGlua3M9by5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiW2hyZWZdXCIpLG8uc2VjdGlvbnM9W10sby5zY3JvbGxhYmxlSWQ9by5lbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXNjcm9sbHNweS1zY3JvbGxhYmxlLXBhcmVudFwiKSxvLnNjcm9sbGFibGU9by5zY3JvbGxhYmxlSWQ/ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihvLnNjcm9sbGFibGVJZCk6ZG9jdW1lbnQsby5pbml0KCksb31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzU2Nyb2xsc3B5Q29sbGVjdGlvbix0aGlzKSx0aGlzLmxpbmtzLmZvckVhY2goKGZ1bmN0aW9uKGUpe3Quc2VjdGlvbnMucHVzaCh0LnNjcm9sbGFibGUucXVlcnlTZWxlY3RvcihlLmdldEF0dHJpYnV0ZShcImhyZWZcIikpKX0pKSxBcnJheS5mcm9tKHRoaXMuc2VjdGlvbnMpLmZvckVhY2goKGZ1bmN0aW9uKGUpe2lmKCFlLmdldEF0dHJpYnV0ZShcImlkXCIpKXJldHVybiExO3Quc2Nyb2xsYWJsZS5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsKGZ1bmN0aW9uKG4pe3JldHVybiB0LnVwZGF0ZShuLGUpfSkpfSkpLHRoaXMubGlua3MuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24obil7aWYobi5wcmV2ZW50RGVmYXVsdCgpLFwiamF2YXNjcmlwdDo7XCI9PT1lLmdldEF0dHJpYnV0ZShcImhyZWZcIikpcmV0dXJuITE7dC5zY3JvbGxUbyhlKX0pKX0pKX0sZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSl7dmFyIG49cGFyc2VJbnQoKDAsci5nZXRDbGFzc1Byb3BlcnR5KSh0aGlzLmVsLFwiLS1zY3JvbGxzcHktb2Zmc2V0XCIsXCIwXCIpKSxvPXBhcnNlSW50KCgwLHIuZ2V0Q2xhc3NQcm9wZXJ0eSkoZSxcIi0tc2Nyb2xsc3B5LW9mZnNldFwiKSl8fG4saT10LnRhcmdldD09PWRvY3VtZW50PzA6cGFyc2VJbnQoU3RyaW5nKHQudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCkpLHM9cGFyc2VJbnQoU3RyaW5nKGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wKSktby1pLGw9ZS5vZmZzZXRIZWlnaHQ7aWYoczw9MCYmcytsPjApe2lmKHRoaXMuYWN0aXZlU2VjdGlvbj09PWUpcmV0dXJuITE7dGhpcy5saW5rcy5mb3JFYWNoKChmdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIil9KSk7dmFyIGE9dGhpcy5lbC5xdWVyeVNlbGVjdG9yKCdbaHJlZj1cIiMnLmNvbmNhdChlLmdldEF0dHJpYnV0ZShcImlkXCIpLCdcIl0nKSk7aWYoYSl7YS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO3ZhciBjPWEuY2xvc2VzdChcIltkYXRhLWhzLXNjcm9sbHNweS1ncm91cF1cIik7aWYoYyl7dmFyIHU9Yy5xdWVyeVNlbGVjdG9yKFwiW2hyZWZdXCIpO3UmJnUuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKX19dGhpcy5hY3RpdmVTZWN0aW9uPWV9fSxlLnByb3RvdHlwZS5zY3JvbGxUbz1mdW5jdGlvbih0KXt2YXIgZT10LmdldEF0dHJpYnV0ZShcImhyZWZcIiksbj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpLG89cGFyc2VJbnQoKDAsci5nZXRDbGFzc1Byb3BlcnR5KSh0aGlzLmVsLFwiLS1zY3JvbGxzcHktb2Zmc2V0XCIsXCIwXCIpKSxpPXBhcnNlSW50KCgwLHIuZ2V0Q2xhc3NQcm9wZXJ0eSkobixcIi0tc2Nyb2xsc3B5LW9mZnNldFwiKSl8fG8scz10aGlzLnNjcm9sbGFibGU9PT1kb2N1bWVudD8wOnRoaXMuc2Nyb2xsYWJsZS5vZmZzZXRUb3AsbD1uLm9mZnNldFRvcC1pLXMsYT10aGlzLnNjcm9sbGFibGU9PT1kb2N1bWVudD93aW5kb3c6dGhpcy5zY3JvbGxhYmxlLGM9ZnVuY3Rpb24oKXt3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCxudWxsLHQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSksXCJzY3JvbGxUb1wiaW4gYSYmYS5zY3JvbGxUbyh7dG9wOmwsbGVmdDowLGJlaGF2aW9yOlwic21vb3RoXCJ9KX0sdT10aGlzLmZpcmVFdmVudChcImJlZm9yZVNjcm9sbFwiLHRoaXMuZWwpOygwLHIuZGlzcGF0Y2gpKFwiYmVmb3JlU2Nyb2xsLmhzLnNjcm9sbHNweVwiLHRoaXMuZWwsdGhpcy5lbCksdSBpbnN0YW5jZW9mIFByb21pc2U/dS50aGVuKChmdW5jdGlvbigpe3JldHVybiBjKCl9KSk6YygpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9ITEpO3ZhciBuPXdpbmRvdy4kaHNTY3JvbGxzcHlDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtyZXR1cm4gbj9lP246bi5lbGVtZW50LmVsOm51bGx9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzU2Nyb2xsc3B5Q29sbGVjdGlvbnx8KHdpbmRvdy4kaHNTY3JvbGxzcHlDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtc2Nyb2xsc3B5XTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNTY3JvbGxzcHlDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKX0sZX0obig3MzcpLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe3MuYXV0b0luaXQoKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTU2Nyb2xsc3B5PXMpLGUuZGVmYXVsdD1zfSw5NjE6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTVG9nZ2xlUGFzc3dvcmRcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxzPXRoaXMmJnRoaXMuX19hd2FpdGVyfHxmdW5jdGlvbih0LGUsbixvKXtyZXR1cm4gbmV3KG58fChuPVByb21pc2UpKSgoZnVuY3Rpb24oaSxyKXtmdW5jdGlvbiBzKHQpe3RyeXthKG8ubmV4dCh0KSl9Y2F0Y2godCl7cih0KX19ZnVuY3Rpb24gbCh0KXt0cnl7YShvLnRocm93KHQpKX1jYXRjaCh0KXtyKHQpfX1mdW5jdGlvbiBhKHQpe3ZhciBlO3QuZG9uZT9pKHQudmFsdWUpOihlPXQudmFsdWUsZSBpbnN0YW5jZW9mIG4/ZTpuZXcgbigoZnVuY3Rpb24odCl7dChlKX0pKSkudGhlbihzLGwpfWEoKG89by5hcHBseSh0LGV8fFtdKSkubmV4dCgpKX0pKX0sbD10aGlzJiZ0aGlzLl9fZ2VuZXJhdG9yfHxmdW5jdGlvbih0LGUpe3ZhciBuLG8saSxyLHM9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmaVswXSl0aHJvdyBpWzFdO3JldHVybiBpWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHI9e25leHQ6bCgwKSx0aHJvdzpsKDEpLHJldHVybjpsKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihyW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHI7ZnVuY3Rpb24gbChsKXtyZXR1cm4gZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKGwpe2lmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtyJiYocj0wLGxbMF0mJihzPTApKSxzOyl0cnl7aWYobj0xLG8mJihpPTImbFswXT9vLnJldHVybjpsWzBdP28udGhyb3d8fCgoaT1vLnJldHVybikmJmkuY2FsbChvKSwwKTpvLm5leHQpJiYhKGk9aS5jYWxsKG8sbFsxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKG89MCxpJiYobD1bMiZsWzBdLGkudmFsdWVdKSxsWzBdKXtjYXNlIDA6Y2FzZSAxOmk9bDticmVhaztjYXNlIDQ6cmV0dXJuIHMubGFiZWwrKyx7dmFsdWU6bFsxXSxkb25lOiExfTtjYXNlIDU6cy5sYWJlbCsrLG89bFsxXSxsPVswXTtjb250aW51ZTtjYXNlIDc6bD1zLm9wcy5wb3AoKSxzLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKGk9cy50cnlzLChpPWkubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pfHw2IT09bFswXSYmMiE9PWxbMF0pKXtzPTA7Y29udGludWV9aWYoMz09PWxbMF0mJighaXx8bFsxXT5pWzBdJiZsWzFdPGlbM10pKXtzLmxhYmVsPWxbMV07YnJlYWt9aWYoNj09PWxbMF0mJnMubGFiZWw8aVsxXSl7cy5sYWJlbD1pWzFdLGk9bDticmVha31pZihpJiZzLmxhYmVsPGlbMl0pe3MubGFiZWw9aVsyXSxzLm9wcy5wdXNoKGwpO2JyZWFrfWlbMl0mJnMub3BzLnBvcCgpLHMudHJ5cy5wb3AoKTtjb250aW51ZX1sPWUuY2FsbCh0LHMpfWNhdGNoKHQpe2w9WzYsdF0sbz0wfWZpbmFsbHl7bj1pPTB9aWYoNSZsWzBdKXRocm93IGxbMV07cmV0dXJue3ZhbHVlOmxbMF0/bFsxXTp2b2lkIDAsZG9uZTohMH19KFtsLGFdKX19fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgYT1uKDk2OSksYz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcyxpPWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zZWFyY2gtYnktanNvblwiKSxzPWk/SlNPTi5wYXJzZShpKTp7fSxsPXIocih7fSxzKSxuKTtyZXR1cm4gby5qc29uVXJsPWwuanNvblVybCxvLm1pbkNoYXJzPWwubWluQ2hhcnN8fDMsby5kcm9wZG93blRlbXBsYXRlPWwuZHJvcGRvd25UZW1wbGF0ZXx8XCI8ZGl2PjwvZGl2PlwiLG8uZHJvcGRvd25DbGFzc2VzPWwuZHJvcGRvd25DbGFzc2VzfHxcImFic29sdXRlIHRvcC1mdWxsIHotWzFdIHctZnVsbCBiZy13aGl0ZSBib3JkZXIgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtbWQgaGlkZGVuIG10LTJcIixvLmRyb3Bkb3duSXRlbVRlbXBsYXRlPWwuZHJvcGRvd25JdGVtVGVtcGxhdGV8fFwiPGRpdj48L2Rpdj5cIixvLmRyb3Bkb3duSXRlbVRlbXBsYXRlc0J5VHlwZT1sLmRyb3Bkb3duSXRlbVRlbXBsYXRlc0J5VHlwZXx8bnVsbCxvLmRyb3Bkb3duSXRlbUNsYXNzZXM9bC5kcm9wZG93bkl0ZW1DbGFzc2VzfHxcInB5LTIgcHgtNCB3LWZ1bGwgY3Vyc29yLXBvaW50ZXIgdGV4dC1zbSBob3ZlcjpiZy1ncmF5LTMwMCBob3Zlcjp0ZXh0LWJsYWNrXCIsby5oaWdobGlnaHRlZFRleHRUYWdOYW1lPWwuaGlnaGxpZ2h0ZWRUZXh0VGFnTmFtZXx8XCJ1XCIsby5oaWdobGlnaHRlZFRleHRDbGFzc2VzPWwuaGlnaGxpZ2h0ZWRUZXh0Q2xhc3Nlc3x8XCJiZy1ncmVlbi0yMDBcIixvLmpzb25VcmwmJm8uZmV0Y2hEYXRhKCkudGhlbigoZnVuY3Rpb24oKXtyZXR1cm4gby5pbml0KCl9KSksb31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzU2VhcmNoQnlKc29uQ29sbGVjdGlvbix0aGlzKSx0aGlzLmJ1aWxkRHJvcGRvd24oKSx0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCgwLGEuZGVib3VuY2UpKChmdW5jdGlvbihlKXt0LnZhbD1lLnRhcmdldC52YWx1ZSx0LnZhbC5sZW5ndGg+dC5taW5DaGFycz90LnNlYXJjaERhdGEodC52YWwpOnQucmVzdWx0PVtdLHQucmVzdWx0Lmxlbmd0aD90LmRyb3Bkb3duLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik6dC5kcm9wZG93bi5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpLHQuYnVpbGRJdGVtcygpfSkpKX0sZS5wcm90b3R5cGUuZmV0Y2hEYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHModGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGwodGhpcywoZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxmZXRjaCh0aGlzLmpzb25VcmwpLnRoZW4oKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmpzb24oKX0pKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gdC5qc29uPWV9KSldO2Nhc2UgMTpyZXR1cm4gZS5zZW50KCksWzJdfX0pKX0pKX0sZS5wcm90b3R5cGUuc2VhcmNoRGF0YT1mdW5jdGlvbih0KXt0aGlzLnJlc3VsdD10aGlzLmpzb24uZmlsdGVyKChmdW5jdGlvbihlKXt2YXIgbj10LnRvTG93ZXJDYXNlKCksbz1lLnRpdGxlLnRvTG93ZXJDYXNlKCksaT1lLmRlc2NyaXB0aW9uLnRvTG93ZXJDYXNlKCk7cmV0dXJuIG8uaW5jbHVkZXMobil8fGkuaW5jbHVkZXMobil9KSl9LGUucHJvdG90eXBlLmJ1aWxkRHJvcGRvd249ZnVuY3Rpb24oKXt0aGlzLmRyb3Bkb3duPSgwLGEuaHRtbFRvRWxlbWVudCkodGhpcy5kcm9wZG93blRlbXBsYXRlKSx0aGlzLmRyb3Bkb3duQ2xhc3NlcyYmKDAsYS5jbGFzc1RvQ2xhc3NMaXN0KSh0aGlzLmRyb3Bkb3duQ2xhc3Nlcyx0aGlzLmRyb3Bkb3duKSx0aGlzLmVsLmFmdGVyKHRoaXMuZHJvcGRvd24pfSxlLnByb3RvdHlwZS5idWlsZEl0ZW1zPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmRyb3Bkb3duLmlubmVySFRNTD1cIlwiLHRoaXMucmVzdWx0LmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBuPSgwLGEuaHRtbFRvRWxlbWVudCkoJzxhIGNsYXNzPVwiYmxvY2tcIiBocmVmPVwiJy5jb25jYXQoZS51cmwsJ1wiIHRhcmdldD1cIl9ibGFua1wiPjwvYT4nKSk7bi5hcHBlbmQodC5pdGVtVGVtcGxhdGUoZSkpLHQuZHJvcGRvd24uYXBwZW5kKG4pfSkpfSxlLnByb3RvdHlwZS5pdGVtVGVtcGxhdGU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IFJlZ0V4cCh0aGlzLnZhbCxcImdpXCIpLG49dC50aXRsZS5yZXBsYWNlKGUsXCI8XCIuY29uY2F0KHRoaXMuaGlnaGxpZ2h0ZWRUZXh0VGFnTmFtZSwnIGNsYXNzPVwiaW5saW5lLWJsb2NrICcpLmNvbmNhdCh0aGlzLmhpZ2hsaWdodGVkVGV4dENsYXNzZXMsJ1wiPicpLmNvbmNhdCh0aGlzLnZhbCxcIjwvXCIpLmNvbmNhdCh0aGlzLmhpZ2hsaWdodGVkVGV4dFRhZ05hbWUsXCI+XCIpKSxvPXQuZGVzY3JpcHRpb24ucmVwbGFjZShlLFwiPFwiLmNvbmNhdCh0aGlzLmhpZ2hsaWdodGVkVGV4dFRhZ05hbWUsJyBjbGFzcz1cImlubGluZS1ibG9jayAnKS5jb25jYXQodGhpcy5oaWdobGlnaHRlZFRleHRDbGFzc2VzLCdcIj4nKS5jb25jYXQodGhpcy52YWwsXCI8L1wiKS5jb25jYXQodGhpcy5oaWdobGlnaHRlZFRleHRUYWdOYW1lLFwiPlwiKSksaT10aGlzLmRyb3Bkb3duSXRlbVRlbXBsYXRlc0J5VHlwZT90aGlzLmRyb3Bkb3duSXRlbVRlbXBsYXRlc0J5VHlwZS5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS50eXBlPT09dC50eXBlfSkpOm51bGwscj1pPygwLGEuaHRtbFRvRWxlbWVudCkoaS5tYXJrdXApOigwLGEuaHRtbFRvRWxlbWVudCkodGhpcy5kcm9wZG93bkl0ZW1UZW1wbGF0ZSk7dGhpcy5kcm9wZG93bkl0ZW1DbGFzc2VzJiYoMCxhLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMuZHJvcGRvd25JdGVtQ2xhc3NlcyxyKTt2YXIgcz1yLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS10aXRsZV1cIik7cz9zLmFwcGVuZCgoMCxhLmh0bWxUb0VsZW1lbnQpKFwiPHNwYW4+XCIuY29uY2F0KG4sXCI8L3NwYW4+XCIpKSk6ci5hcHBlbmQoKDAsYS5odG1sVG9FbGVtZW50KShcIjxzcGFuPlwiLmNvbmNhdChuLFwiPC9zcGFuPlwiKSkpO3ZhciBsPXIucXVlcnlTZWxlY3RvcihcIltkYXRhLWRlc2NyaXB0aW9uXVwiKTtpZihsKWwuYXBwZW5kKCgwLGEuaHRtbFRvRWxlbWVudCkoXCI8c3Bhbj5cIi5jb25jYXQobyxcIjwvc3Bhbj5cIikpKTtlbHNlIGlmKCFpKXt2YXIgYz0oMCxhLmh0bWxUb0VsZW1lbnQpKFwiPGJyPlwiKTtyLmFwcGVuZChjKSxyLmFwcGVuZCgoMCxhLmh0bWxUb0VsZW1lbnQpKFwiPHNwYW4+XCIuY29uY2F0KG8sXCI8L3NwYW4+XCIpKSl9cmV0dXJuIHJ9LGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc1NlYXJjaEJ5SnNvbkNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO3JldHVybiBlP2UuZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1NlYXJjaEJ5SnNvbkNvbGxlY3Rpb258fCh3aW5kb3cuJGhzU2VhcmNoQnlKc29uQ29sbGVjdGlvbj1bXSksZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLXNlYXJjaC1ieS1qc29uXTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNTZWFyY2hCeUpzb25Db2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKX0sZX0obig3MzcpLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2MuYXV0b0luaXQoKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTU2VhcmNoQnlKc29uPWMpLGUuZGVmYXVsdD1jfSwyMzM6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTU2VsZWN0XG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xudmFyIG8saT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8KG89ZnVuY3Rpb24odCxlKXtyZXR1cm4gbz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9LG8odCxlKX0sZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxyPXRoaXMmJnRoaXMuX19hc3NpZ258fGZ1bmN0aW9uKCl7cmV0dXJuIHI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSxyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0scz10aGlzJiZ0aGlzLl9fc3ByZWFkQXJyYXl8fGZ1bmN0aW9uKHQsZSxuKXtpZihufHwyPT09YXJndW1lbnRzLmxlbmd0aClmb3IodmFyIG8saT0wLHI9ZS5sZW5ndGg7aTxyO2krKykhbyYmaSBpbiBlfHwob3x8KG89QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSwwLGkpKSxvW2ldPWVbaV0pO3JldHVybiB0LmNvbmNhdChvfHxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBsPW4oOTY5KSxhPW4oNzM3KSxjPW4oMTkwKSx1PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbyxpPXQuY2FsbCh0aGlzLGUsbil8fHRoaXMscz1lLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtc2VsZWN0XCIpLGw9cz9KU09OLnBhcnNlKHMpOnt9LGE9cihyKHt9LGwpLG4pO3JldHVybiBpLnZhbHVlPShudWxsPT1hP3ZvaWQgMDphLnZhbHVlKXx8aS5lbC52YWx1ZXx8bnVsbCxpLnBsYWNlaG9sZGVyPShudWxsPT1hP3ZvaWQgMDphLnBsYWNlaG9sZGVyKXx8XCJTZWxlY3QuLi5cIixpLmhhc1NlYXJjaD0obnVsbD09YT92b2lkIDA6YS5oYXNTZWFyY2gpfHwhMSxpLnByZXZlbnRTZWFyY2hGb2N1cz0obnVsbD09YT92b2lkIDA6YS5wcmV2ZW50U2VhcmNoRm9jdXMpfHwhMSxpLm1vZGU9KG51bGw9PWE/dm9pZCAwOmEubW9kZSl8fFwiZGVmYXVsdFwiLGkudmlld3BvcnQ9dm9pZCAwIT09KG51bGw9PWE/dm9pZCAwOmEudmlld3BvcnQpP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobnVsbD09YT92b2lkIDA6YS52aWV3cG9ydCk6bnVsbCxpLmlzT3BlbmVkPUJvb2xlYW4obnVsbD09YT92b2lkIDA6YS5pc09wZW5lZCl8fCExLGkuaXNNdWx0aXBsZT1pLmVsLmhhc0F0dHJpYnV0ZShcIm11bHRpcGxlXCIpfHwhMSxpLmlzRGlzYWJsZWQ9aS5lbC5oYXNBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKXx8ITEsaS5zZWxlY3RlZEl0ZW1zPVtdLGkud3JhcHBlckNsYXNzZXM9KG51bGw9PWE/dm9pZCAwOmEud3JhcHBlckNsYXNzZXMpfHxudWxsLGkudG9nZ2xlVGFnPShudWxsPT1hP3ZvaWQgMDphLnRvZ2dsZVRhZyl8fG51bGwsaS50b2dnbGVDbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLnRvZ2dsZUNsYXNzZXMpfHxudWxsLGkudG9nZ2xlQ291bnRUZXh0PShudWxsPT1hP3ZvaWQgMDphLnRvZ2dsZUNvdW50VGV4dCl8fG51bGwsaS50b2dnbGVDb3VudFRleHRNaW5JdGVtcz0obnVsbD09YT92b2lkIDA6YS50b2dnbGVDb3VudFRleHRNaW5JdGVtcyl8fDEsaS50YWdzSXRlbVRlbXBsYXRlPShudWxsPT1hP3ZvaWQgMDphLnRhZ3NJdGVtVGVtcGxhdGUpfHxudWxsLGkudGFnc0l0ZW1DbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLnRhZ3NJdGVtQ2xhc3Nlcyl8fG51bGwsaS50YWdzSW5wdXRDbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLnRhZ3NJbnB1dENsYXNzZXMpfHxudWxsLGkuZHJvcGRvd25UYWc9KG51bGw9PWE/dm9pZCAwOmEuZHJvcGRvd25UYWcpfHxudWxsLGkuZHJvcGRvd25DbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLmRyb3Bkb3duQ2xhc3Nlcyl8fG51bGwsaS5kcm9wZG93bkRpcmVjdGlvbkNsYXNzZXM9KG51bGw9PWE/dm9pZCAwOmEuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzKXx8bnVsbCxpLmRyb3Bkb3duU3BhY2U9KG51bGw9PWE/dm9pZCAwOmEuZHJvcGRvd25TcGFjZSl8fDEwLGkuc2VhcmNoV3JhcHBlclRlbXBsYXRlPShudWxsPT1hP3ZvaWQgMDphLnNlYXJjaFdyYXBwZXJUZW1wbGF0ZSl8fG51bGwsaS5zZWFyY2hXcmFwcGVyQ2xhc3Nlcz0obnVsbD09YT92b2lkIDA6YS5zZWFyY2hXcmFwcGVyQ2xhc3Nlcyl8fFwiYmctd2hpdGUgcC0yIHN0aWNreSB0b3AtMFwiLGkuc2VhcmNoQ2xhc3Nlcz0obnVsbD09YT92b2lkIDA6YS5zZWFyY2hDbGFzc2VzKXx8XCJibG9jayB3LVtjYWxjKDEwMCUtMnJlbSldIHRleHQtc20gYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtbWQgZm9jdXM6Ym9yZGVyLWJsdWUtNTAwIGZvY3VzOnJpbmctYmx1ZS01MDAgZGFyazpiZy1zbGF0ZS05MDAgZGFyazpib3JkZXItZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktNDAwIHB5LTIgcHgtMyBteS0yIG14LTRcIixpLnNlYXJjaFBsYWNlaG9sZGVyPShudWxsPT1hP3ZvaWQgMDphLnNlYXJjaFBsYWNlaG9sZGVyKXx8XCJTZWFyY2guLi5cIixpLnNlYXJjaE5vUmVzdWx0VGV4dD0obnVsbD09YT92b2lkIDA6YS5zZWFyY2hOb1Jlc3VsdFRleHQpfHxcIk5vIG9wdGlvbnMgZm91bmQuLi5cIixpLnNlYXJjaE5vUmVzdWx0Q2xhc3Nlcz0obnVsbD09YT92b2lkIDA6YS5zZWFyY2hOb1Jlc3VsdENsYXNzZXMpfHxcInB4LTQgdGV4dC1zbVwiLGkub3B0aW9uVGVtcGxhdGU9KG51bGw9PWE/dm9pZCAwOmEub3B0aW9uVGVtcGxhdGUpfHxudWxsLGkub3B0aW9uVGFnPShudWxsPT1hP3ZvaWQgMDphLm9wdGlvblRhZyl8fG51bGwsaS5vcHRpb25DbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLm9wdGlvbkNsYXNzZXMpfHxudWxsLGkuZXh0cmFNYXJrdXA9KG51bGw9PWE/dm9pZCAwOmEuZXh0cmFNYXJrdXApfHxudWxsLGkuZGVzY3JpcHRpb25DbGFzc2VzPShudWxsPT1hP3ZvaWQgMDphLmRlc2NyaXB0aW9uQ2xhc3Nlcyl8fG51bGwsaS5pY29uQ2xhc3Nlcz0obnVsbD09YT92b2lkIDA6YS5pY29uQ2xhc3Nlcyl8fG51bGwsaS5pc0FkZFRhZ09uRW50ZXI9bnVsbD09PShvPW51bGw9PWE/dm9pZCAwOmEuaXNBZGRUYWdPbkVudGVyKXx8dm9pZCAwPT09b3x8byxpLmFuaW1hdGlvbkluUHJvY2Vzcz0hMSxpLnNlbGVjdE9wdGlvbnM9W10saS50YWdzSW5wdXRIZWxwZXI9bnVsbCxpLmluaXQoKSxpfXJldHVybiBpKGUsdCksZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbix0aGlzKSx0aGlzLmJ1aWxkKCl9LGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmVsLnN0eWxlLmRpc3BsYXk9XCJub25lXCIsdGhpcy5lbC5jaGlsZHJlbiYmQXJyYXkuZnJvbSh0aGlzLmVsLmNoaWxkcmVuKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbHVlJiZcIlwiIT09dC52YWx1ZX0pKS5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbj1lLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtc2VsZWN0LW9wdGlvblwiKTt0LnNlbGVjdE9wdGlvbnM9cyhzKFtdLHQuc2VsZWN0T3B0aW9ucywhMCksW3t0aXRsZTplLnRleHRDb250ZW50LHZhbDplLnZhbHVlLG9wdGlvbnM6XCJ1bmRlZmluZWRcIiE9PW4/SlNPTi5wYXJzZShuKTpudWxsfV0sITEpfSkpLHRoaXMuaXNNdWx0aXBsZSl7dmFyIGU9QXJyYXkuZnJvbSh0aGlzLmVsLm9wdGlvbnMpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2VsZWN0ZWR9KSk7aWYoZSl7dmFyIG49W107ZS5mb3JFYWNoKChmdW5jdGlvbih0KXtuLnB1c2godC52YWx1ZSl9KSksdGhpcy52YWx1ZT1ufX10aGlzLmJ1aWxkV3JhcHBlcigpLFwidGFnc1wiPT09dGhpcy5tb2RlP3RoaXMuYnVpbGRUYWdzKCk6dGhpcy5idWlsZFRvZ2dsZSgpLHRoaXMuYnVpbGREcm9wZG93bigpLHRoaXMuZXh0cmFNYXJrdXAmJnRoaXMuYnVpbGRFeHRyYU1hcmt1cCgpfSxlLnByb3RvdHlwZS5idWlsZFdyYXBwZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMud3JhcHBlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMud3JhcHBlci5jbGFzc0xpc3QuYWRkKFwiaHMtc2VsZWN0XCIsXCJyZWxhdGl2ZVwiKSxcInRhZ3NcIj09PXRoaXMubW9kZSYmdGhpcy53cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbihlKXtlLnRhcmdldC5jbG9zZXN0KFwiW2RhdGEtaHMtc2VsZWN0LWRyb3Bkb3duXVwiKXx8ZS50YXJnZXQuY2xvc2VzdChcIltkYXRhLXRhZy12YWx1ZV1cIil8fHQudGFnc0lucHV0LmZvY3VzKCl9KSksdGhpcy53cmFwcGVyQ2xhc3NlcyYmKDAsbC5jbGFzc1RvQ2xhc3NMaXN0KSh0aGlzLndyYXBwZXJDbGFzc2VzLHRoaXMud3JhcHBlciksdGhpcy5lbC5iZWZvcmUodGhpcy53cmFwcGVyKSx0aGlzLndyYXBwZXIuYXBwZW5kKHRoaXMuZWwpfSxlLnByb3RvdHlwZS5idWlsZEV4dHJhTWFya3VwPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPWZ1bmN0aW9uKGUpe3Qud3JhcHBlci5hcHBlbmQoKDAsbC5odG1sVG9FbGVtZW50KShlKSl9O0FycmF5LmlzQXJyYXkodGhpcy5leHRyYU1hcmt1cCk/dGhpcy5leHRyYU1hcmt1cC5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gZSh0KX0pKTplKHRoaXMuZXh0cmFNYXJrdXApfSxlLnByb3RvdHlwZS5idWlsZFRvZ2dsZT1mdW5jdGlvbigpe3ZhciB0LGUsbixvPXRoaXM7dGhpcy50b2dnbGVUZXh0V3JhcHBlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKSx0aGlzLnRvZ2dsZVRleHRXcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJ0cnVuY2F0ZVwiKSx0aGlzLnRvZ2dsZT0oMCxsLmh0bWxUb0VsZW1lbnQpKHRoaXMudG9nZ2xlVGFnfHxcIjxkaXY+PC9kaXY+XCIpLGU9dGhpcy50b2dnbGUucXVlcnlTZWxlY3RvcihcIltkYXRhLWljb25dXCIpLG49dGhpcy50b2dnbGUucXVlcnlTZWxlY3RvcihcIltkYXRhLXRpdGxlXVwiKSwhdGhpcy5pc011bHRpcGxlJiZlJiZ0aGlzLnNldFRvZ2dsZUljb24oKSwhdGhpcy5pc011bHRpcGxlJiZuJiZ0aGlzLnNldFRvZ2dsZVRpdGxlKCksdGhpcy5pc011bHRpcGxlP3RoaXMudG9nZ2xlVGV4dFdyYXBwZXIuaW5uZXJIVE1MPXRoaXMudmFsdWUubGVuZ3RoP3RoaXMuc3RyaW5nRnJvbVZhbHVlKCk6dGhpcy5wbGFjZWhvbGRlcjp0aGlzLnRvZ2dsZVRleHRXcmFwcGVyLmlubmVySFRNTD0obnVsbD09PSh0PXRoaXMuZ2V0SXRlbUJ5VmFsdWUodGhpcy52YWx1ZSkpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnRpdGxlKXx8dGhpcy5wbGFjZWhvbGRlcixufHx0aGlzLnRvZ2dsZS5hcHBlbmQodGhpcy50b2dnbGVUZXh0V3JhcHBlciksdGhpcy50b2dnbGVDbGFzc2VzJiYoMCxsLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMudG9nZ2xlQ2xhc3Nlcyx0aGlzLnRvZ2dsZSksdGhpcy5pc0Rpc2FibGVkJiZ0aGlzLnRvZ2dsZS5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIiksdGhpcy53cmFwcGVyJiZ0aGlzLndyYXBwZXIuYXBwZW5kKHRoaXMudG9nZ2xlKSx0aGlzLnRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtpZihvLmlzRGlzYWJsZWQpcmV0dXJuITE7by5pc09wZW5lZD9vLmNsb3NlKCk6by5vcGVuKCl9KSl9LGUucHJvdG90eXBlLnNldFRvZ2dsZUljb249ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcy50b2dnbGUucXVlcnlTZWxlY3RvcihcIltkYXRhLWljb25dXCIpO2lmKG4uaW5uZXJIVE1MPVwiXCIsbil7dmFyIG89KDAsbC5odG1sVG9FbGVtZW50KSgobnVsbD09PShlPW51bGw9PT0odD10aGlzLmdldEl0ZW1CeVZhbHVlKHRoaXMudmFsdWUpKXx8dm9pZCAwPT09dD92b2lkIDA6dC5vcHRpb25zKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5pY29uKXx8XCJcIik7bi5hcHBlbmQobyksbz9uLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik6bi5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpfX0sZS5wcm90b3R5cGUuc2V0VG9nZ2xlVGl0bGU9ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMudG9nZ2xlLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS10aXRsZV1cIik7aWYoZS5jbGFzc0xpc3QuYWRkKFwidHJ1bmNhdGVcIiksZS5pbm5lckhUTUw9XCJcIixlKXt2YXIgbj0obnVsbD09PSh0PXRoaXMuZ2V0SXRlbUJ5VmFsdWUodGhpcy52YWx1ZSkpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnRpdGxlKXx8dGhpcy5wbGFjZWhvbGRlcjtlLmlubmVySFRNTD1uLHRoaXMudG9nZ2xlLmFwcGVuZChlKX19LGUucHJvdG90eXBlLmJ1aWxkVGFncz1mdW5jdGlvbigpe3RoaXMuYnVpbGRUYWdzSW5wdXQoKSx0aGlzLnNldFRhZ3NJdGVtcygpfSxlLnByb3RvdHlwZS5yZWFzc2lnblRhZ3NJbnB1dFBsYWNlaG9sZGVyPWZ1bmN0aW9uKHQpe3RoaXMudGFnc0lucHV0LnBsYWNlaG9sZGVyPXQsdGhpcy50YWdzSW5wdXRIZWxwZXIuaW5uZXJIVE1MPXQsdGhpcy5jYWxjdWxhdGVJbnB1dFdpZHRoKCl9LGUucHJvdG90eXBlLmJ1aWxkVGFnc0l0ZW09ZnVuY3Rpb24odCl7dmFyIGUsbixvLGkscixzLGEsYz10aGlzLHU9dGhpcy5nZXRJdGVtQnlWYWx1ZSh0KSxkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWYoZC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXRhZy12YWx1ZVwiLHQpLHRoaXMudGFnc0l0ZW1DbGFzc2VzJiYoMCxsLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMudGFnc0l0ZW1DbGFzc2VzLGQpLHRoaXMudGFnc0l0ZW1UZW1wbGF0ZSYmKGk9KDAsbC5odG1sVG9FbGVtZW50KSh0aGlzLnRhZ3NJdGVtVGVtcGxhdGUpLGQuYXBwZW5kKGkpKSxudWxsPT09KGU9bnVsbD09dT92b2lkIDA6dS5vcHRpb25zKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5pY29uKXt2YXIgcD0oMCxsLmh0bWxUb0VsZW1lbnQpKG51bGw9PT0obj1udWxsPT11P3ZvaWQgMDp1Lm9wdGlvbnMpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmljb24pOyhhPWk/aS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaWNvbl1cIik6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIikpLmFwcGVuZChwKSxpfHxkLmFwcGVuZChhKX1pJiZpLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1pY29uXVwiKSYmIShudWxsPT09KG89bnVsbD09dT92b2lkIDA6dS5vcHRpb25zKXx8dm9pZCAwPT09bz92b2lkIDA6by5pY29uKSYmaS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaWNvbl1cIikuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKSwocj1pP2kucXVlcnlTZWxlY3RvcihcIltkYXRhLXRpdGxlXVwiKTpkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKSkudGV4dENvbnRlbnQ9dS50aXRsZXx8XCJcIixpfHxkLmFwcGVuZChyKSxpP3M9aS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtcmVtb3ZlXVwiKTooKHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIikpLnRleHRDb250ZW50PVwiWFwiLGQuYXBwZW5kKHMpKSxzLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe2MudmFsdWU9Yy52YWx1ZS5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBlIT09dH0pKSxjLnNlbGVjdGVkSXRlbXM9Yy5zZWxlY3RlZEl0ZW1zLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT10fSkpLGMudmFsdWUubGVuZ3RofHxjLnJlYXNzaWduVGFnc0lucHV0UGxhY2Vob2xkZXIoYy5wbGFjZWhvbGRlciksYy51bnNlbGVjdE11bHRpcGxlSXRlbXMoKSxjLnNlbGVjdE11bHRpcGxlSXRlbXMoKSxkLnJlbW92ZSgpfSkpLHRoaXMud3JhcHBlci5hcHBlbmQoZCl9LGUucHJvdG90eXBlLmdldEl0ZW1CeVZhbHVlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlbGVjdE9wdGlvbnMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUudmFsPT09dH0pKX0sZS5wcm90b3R5cGUuc2V0VGFnc0l0ZW1zPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnZhbHVlJiZ0aGlzLnZhbHVlLmZvckVhY2goKGZ1bmN0aW9uKGUpe3Quc2VsZWN0ZWRJdGVtcy5pbmNsdWRlcyhlKXx8dC5idWlsZFRhZ3NJdGVtKGUpLHQuc2VsZWN0ZWRJdGVtcz10LnNlbGVjdGVkSXRlbXMuaW5jbHVkZXMoZSk/dC5zZWxlY3RlZEl0ZW1zOnMocyhbXSx0LnNlbGVjdGVkSXRlbXMsITApLFtlXSwhMSl9KSl9LGUucHJvdG90eXBlLmJ1aWxkVGFnc0lucHV0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnRhZ3NJbnB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksdGhpcy50YWdzSW5wdXRDbGFzc2VzJiYoMCxsLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMudGFnc0lucHV0Q2xhc3Nlcyx0aGlzLnRhZ3NJbnB1dCksdGhpcy50YWdzSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQub3BlbigpfSkpLHRoaXMudGFnc0lucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLChmdW5jdGlvbigpe3JldHVybiB0LmNhbGN1bGF0ZUlucHV0V2lkdGgoKX0pKSx0aGlzLnRhZ3NJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwoMCxsLmRlYm91bmNlKSgoZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2VhcmNoT3B0aW9ucyhlLnRhcmdldC52YWx1ZSl9KSkpLHRoaXMudGFnc0lucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsKGZ1bmN0aW9uKGUpe2lmKFwiRW50ZXJcIj09PWUua2V5JiZ0LmlzQWRkVGFnT25FbnRlcil7dmFyIG49ZS50YXJnZXQudmFsdWU7aWYodC5zZWxlY3RPcHRpb25zLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbD09PW59KSkpcmV0dXJuITE7dC5hZGRTZWxlY3RPcHRpb24obixuKSx0LmJ1aWxkT3B0aW9uKG4sbiksdC5kcm9wZG93bi5xdWVyeVNlbGVjdG9yKCdbZGF0YS12YWx1ZT1cIicuY29uY2F0KG4sJ1wiXScpKS5jbGljaygpLHQucmVzZXRUYWdzSW5wdXRGaWVsZCgpfX0pKSx0aGlzLndyYXBwZXIuYXBwZW5kKHRoaXMudGFnc0lucHV0KSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuYWRqdXN0SW5wdXRXaWR0aCgpLHQucmVhc3NpZ25UYWdzSW5wdXRQbGFjZWhvbGRlcih0LnZhbHVlLmxlbmd0aD9cIlwiOnQucGxhY2Vob2xkZXIpfSkpfSxlLnByb3RvdHlwZS5idWlsZERyb3Bkb3duPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmRyb3Bkb3duPSgwLGwuaHRtbFRvRWxlbWVudCkodGhpcy5kcm9wZG93blRhZ3x8XCI8ZGl2PjwvZGl2PlwiKSx0aGlzLmRyb3Bkb3duLnNldEF0dHJpYnV0ZShcImRhdGEtaHMtc2VsZWN0LWRyb3Bkb3duXCIsXCJcIiksdGhpcy5kcm9wZG93bi5jbGFzc0xpc3QuYWRkKFwiYWJzb2x1dGVcIixcInRvcC1mdWxsXCIpLHRoaXMuaXNPcGVuZWR8fHRoaXMuZHJvcGRvd24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKSx0aGlzLmRyb3Bkb3duQ2xhc3NlcyYmKDAsbC5jbGFzc1RvQ2xhc3NMaXN0KSh0aGlzLmRyb3Bkb3duQ2xhc3Nlcyx0aGlzLmRyb3Bkb3duKSx0aGlzLndyYXBwZXImJnRoaXMud3JhcHBlci5hcHBlbmQodGhpcy5kcm9wZG93biksdGhpcy5kcm9wZG93biYmdGhpcy5oYXNTZWFyY2gmJnRoaXMuYnVpbGRTZWFyY2goKSx0aGlzLnNlbGVjdE9wdGlvbnMmJnRoaXMuc2VsZWN0T3B0aW9ucy5mb3JFYWNoKChmdW5jdGlvbihlLG4pe3JldHVybiB0LmJ1aWxkT3B0aW9uKGUudGl0bGUsZS52YWwsZS5vcHRpb25zLFwiXCIuY29uY2F0KG4pKX0pKX0sZS5wcm90b3R5cGUuYnVpbGRTZWFyY2g9ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXM7dGhpcy5zZWFyY2hXcmFwcGVyPSgwLGwuaHRtbFRvRWxlbWVudCkodGhpcy5zZWFyY2hXcmFwcGVyVGVtcGxhdGV8fFwiPGRpdj48L2Rpdj5cIiksdGhpcy5zZWFyY2hXcmFwcGVyQ2xhc3NlcyYmKDAsbC5jbGFzc1RvQ2xhc3NMaXN0KSh0aGlzLnNlYXJjaFdyYXBwZXJDbGFzc2VzLHRoaXMuc2VhcmNoV3JhcHBlciksdD10aGlzLnNlYXJjaFdyYXBwZXIucXVlcnlTZWxlY3RvcihcIltkYXRhLWlucHV0XVwiKSx0aGlzLnNlYXJjaD0oMCxsLmh0bWxUb0VsZW1lbnQpKCc8aW5wdXQgdHlwZT1cInRleHRcIiAvPicpLHRoaXMuc2VhcmNoLnBsYWNlaG9sZGVyPXRoaXMuc2VhcmNoUGxhY2Vob2xkZXIsdGhpcy5zZWFyY2hDbGFzc2VzJiYoMCxsLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMuc2VhcmNoQ2xhc3Nlcyx0aGlzLnNlYXJjaCksdGhpcy5zZWFyY2guYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsKDAsbC5kZWJvdW5jZSkoKGZ1bmN0aW9uKHQpe3JldHVybiBlLnNlYXJjaE9wdGlvbnModC50YXJnZXQudmFsdWUpfSkpKSx0P3QuYXBwZW5kKHRoaXMuc2VhcmNoKTp0aGlzLnNlYXJjaFdyYXBwZXIuYXBwZW5kKHRoaXMuc2VhcmNoKSx0aGlzLmRyb3Bkb3duLmFwcGVuZCh0aGlzLnNlYXJjaFdyYXBwZXIpfSxlLnByb3RvdHlwZS5idWlsZE9wdGlvbj1mdW5jdGlvbih0LGUsbixvKXt2YXIgaT10aGlzO3ZvaWQgMD09PW8mJihvPVwiMVwiKTt2YXIgcj1udWxsLHM9KDAsbC5odG1sVG9FbGVtZW50KSh0aGlzLm9wdGlvblRhZ3x8XCI8ZGl2PjwvZGl2PlwiKTtpZihzLnNldEF0dHJpYnV0ZShcImRhdGEtdmFsdWVcIixlKSxzLnNldEF0dHJpYnV0ZShcImRhdGEtdGl0bGUtdmFsdWVcIix0KSxzLnNldEF0dHJpYnV0ZShcInRhYkluZGV4XCIsbykscy5jbGFzc0xpc3QuYWRkKFwiY3Vyc29yLXBvaW50ZXJcIiksdGhpcy5vcHRpb25UZW1wbGF0ZSYmKHI9KDAsbC5odG1sVG9FbGVtZW50KSh0aGlzLm9wdGlvblRlbXBsYXRlKSxzLmFwcGVuZChyKSkscj9yLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS10aXRsZV1cIikudGV4dENvbnRlbnQ9dHx8XCJcIjpzLnRleHRDb250ZW50PXR8fFwiXCIsbil7aWYobi5pY29uKXt2YXIgYT0oMCxsLmh0bWxUb0VsZW1lbnQpKG4uaWNvbik7aWYoYS5jbGFzc0xpc3QuYWRkKFwibXctZnVsbFwiKSxyKXIucXVlcnlTZWxlY3RvcihcIltkYXRhLWljb25dXCIpLmFwcGVuZChhKTtlbHNle3ZhciBjPSgwLGwuaHRtbFRvRWxlbWVudCkoXCI8ZGl2PjwvZGl2PlwiKTt0aGlzLmljb25DbGFzc2VzJiYoMCxsLmNsYXNzVG9DbGFzc0xpc3QpKHRoaXMuaWNvbkNsYXNzZXMsYyksYy5hcHBlbmQoYSkscy5hcHBlbmQoYyl9fWlmKG4uZGVzY3JpcHRpb24paWYocilyLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1kZXNjcmlwdGlvbl1cIikuYXBwZW5kKG4uZGVzY3JpcHRpb24pO2Vsc2V7dmFyIHU9KDAsbC5odG1sVG9FbGVtZW50KShcIjxkaXY+PC9kaXY+XCIpO3UudGV4dENvbnRlbnQ9bi5kZXNjcmlwdGlvbix0aGlzLmRlc2NyaXB0aW9uQ2xhc3NlcyYmKDAsbC5jbGFzc1RvQ2xhc3NMaXN0KSh0aGlzLmRlc2NyaXB0aW9uQ2xhc3Nlcyx1KSxzLmFwcGVuZCh1KX19ciYmci5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaWNvbl1cIikmJiFuJiYhKG51bGw9PW4/dm9pZCAwOm4uaWNvbikmJnIucXVlcnlTZWxlY3RvcihcIltkYXRhLWljb25dXCIpLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIiksdGhpcy52YWx1ZSYmKHRoaXMuaXNNdWx0aXBsZT90aGlzLnZhbHVlLmluY2x1ZGVzKGUpOnRoaXMudmFsdWU9PT1lKSYmcy5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIikscy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gaS5vblNlbGVjdE9wdGlvbihlKX0pKSx0aGlzLm9wdGlvbkNsYXNzZXMmJigwLGwuY2xhc3NUb0NsYXNzTGlzdCkodGhpcy5vcHRpb25DbGFzc2VzLHMpLHRoaXMuZHJvcGRvd24mJnRoaXMuZHJvcGRvd24uYXBwZW5kKHMpfSxlLnByb3RvdHlwZS5kZXN0cm95T3B0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZHJvcGRvd24ucXVlcnlTZWxlY3RvcignW2RhdGEtdmFsdWU9XCInLmNvbmNhdCh0LCdcIl0nKSk7aWYoIWUpcmV0dXJuITE7ZS5yZW1vdmUoKX0sZS5wcm90b3R5cGUuYnVpbGRPcmlnaW5hbE9wdGlvbj1mdW5jdGlvbih0LGUsbil7dmFyIG89KDAsbC5odG1sVG9FbGVtZW50KShcIjxvcHRpb24+PC9vcHRpb24+XCIpO28uc2V0QXR0cmlidXRlKFwidmFsdWVcIixlKSxvLnNldEF0dHJpYnV0ZShcImRhdGEtaHMtc2VsZWN0LW9wdGlvblwiLEpTT04uc3RyaW5naWZ5KG4pKSxvLmlubmVyVGV4dD10LHRoaXMuZWwuYXBwZW5kKG8pfSxlLnByb3RvdHlwZS5kZXN0cm95T3JpZ2luYWxPcHRpb249ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbC5xdWVyeVNlbGVjdG9yKCdbdmFsdWU9XCInLmNvbmNhdCh0LCdcIl0nKSk7aWYoIWUpcmV0dXJuITE7ZS5yZW1vdmUoKX0sZS5wcm90b3R5cGUuYnVpbGRUYWdzSW5wdXRIZWxwZXI9ZnVuY3Rpb24oKXt0aGlzLnRhZ3NJbnB1dEhlbHBlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKSx0aGlzLnRhZ3NJbnB1dEhlbHBlci5zdHlsZS5mb250U2l6ZT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnRhZ3NJbnB1dCkuZm9udFNpemUsdGhpcy50YWdzSW5wdXRIZWxwZXIuc3R5bGUuZm9udEZhbWlseT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnRhZ3NJbnB1dCkuZm9udEZhbWlseSx0aGlzLnRhZ3NJbnB1dEhlbHBlci5zdHlsZS5mb250V2VpZ2h0PXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMudGFnc0lucHV0KS5mb250V2VpZ2h0LHRoaXMudGFnc0lucHV0SGVscGVyLnN0eWxlLmxldHRlclNwYWNpbmc9d2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy50YWdzSW5wdXQpLmxldHRlclNwYWNpbmcsdGhpcy50YWdzSW5wdXRIZWxwZXIuc3R5bGUudmlzaWJpbGl0eT1cImhpZGRlblwiLHRoaXMudGFnc0lucHV0SGVscGVyLnN0eWxlLndoaXRlU3BhY2U9XCJwcmVcIix0aGlzLnRhZ3NJbnB1dEhlbHBlci5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsdGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMudGFnc0lucHV0SGVscGVyKX0sZS5wcm90b3R5cGUuY2FsY3VsYXRlSW5wdXRXaWR0aD1mdW5jdGlvbigpe3RoaXMudGFnc0lucHV0SGVscGVyLnRleHRDb250ZW50PXRoaXMudGFnc0lucHV0LnZhbHVlfHx0aGlzLnRhZ3NJbnB1dC5wbGFjZWhvbGRlcjt2YXIgdD1wYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnRhZ3NJbnB1dCkucGFkZGluZ0xlZnQpK3BhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMudGFnc0lucHV0KS5wYWRkaW5nUmlnaHQpLGU9cGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy50YWdzSW5wdXQpLmJvcmRlckxlZnRXaWR0aCkrcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy50YWdzSW5wdXQpLmJvcmRlclJpZ2h0V2lkdGgpLG49dGhpcy50YWdzSW5wdXRIZWxwZXIub2Zmc2V0V2lkdGgrdCtlLG89dGhpcy53cmFwcGVyLm9mZnNldFdpZHRoLShwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLndyYXBwZXIpLnBhZGRpbmdMZWZ0KStwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLndyYXBwZXIpLnBhZGRpbmdSaWdodCkpO3RoaXMudGFnc0lucHV0LnN0eWxlLndpZHRoPVwiXCIuY29uY2F0KE1hdGgubWluKG4sbykrMixcInB4XCIpfSxlLnByb3RvdHlwZS5hZGp1c3RJbnB1dFdpZHRoPWZ1bmN0aW9uKCl7dGhpcy5idWlsZFRhZ3NJbnB1dEhlbHBlcigpLHRoaXMuY2FsY3VsYXRlSW5wdXRXaWR0aCgpfSxlLnByb3RvdHlwZS5vblNlbGVjdE9wdGlvbj1mdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKHRoaXMuY2xlYXJTZWxlY3Rpb25zKCksdGhpcy5pc011bHRpcGxlPyh0aGlzLnZhbHVlPXRoaXMudmFsdWUuaW5jbHVkZXModCk/QXJyYXkuZnJvbSh0aGlzLnZhbHVlKS5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiBlIT09dH0pKTpzKHMoW10sQXJyYXkuZnJvbSh0aGlzLnZhbHVlKSwhMCksW3RdLCExKSx0aGlzLnNlbGVjdE11bHRpcGxlSXRlbXMoKSx0aGlzLnNldE5ld1ZhbHVlKCkpOih0aGlzLnZhbHVlPXQsdGhpcy5zZWxlY3RTaW5nbGVJdGVtKCksdGhpcy5zZXROZXdWYWx1ZSgpKSx0aGlzLmZpcmVFdmVudChcImNoYW5nZVwiLHRoaXMudmFsdWUpLCgwLGwuZGlzcGF0Y2gpKFwiY2hhbmdlLmhzLnNlbGVjdFwiLHRoaXMuZWwsdGhpcy52YWx1ZSksXCJ0YWdzXCI9PT10aGlzLm1vZGUpe3ZhciBuPXRoaXMuc2VsZWN0ZWRJdGVtcy5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiFlLnZhbHVlLmluY2x1ZGVzKHQpfSkpO24ubGVuZ3RoJiZuLmZvckVhY2goKGZ1bmN0aW9uKHQpe2Uuc2VsZWN0ZWRJdGVtcz1lLnNlbGVjdGVkSXRlbXMuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gZSE9PXR9KSksZS53cmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRhZy12YWx1ZT1cIicuY29uY2F0KHQsJ1wiXScpKS5yZW1vdmUoKX0pKSx0aGlzLnJlc2V0VGFnc0lucHV0RmllbGQoKX10aGlzLmlzTXVsdGlwbGV8fCh0aGlzLnRvZ2dsZS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaWNvbl1cIikmJnRoaXMuc2V0VG9nZ2xlSWNvbigpLHRoaXMudG9nZ2xlLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS10aXRsZV1cIikmJnRoaXMuc2V0VG9nZ2xlVGl0bGUoKSx0aGlzLmNsb3NlKCkpLHRoaXMudmFsdWUubGVuZ3RofHxcInRhZ3NcIiE9PXRoaXMubW9kZXx8dGhpcy5yZWFzc2lnblRhZ3NJbnB1dFBsYWNlaG9sZGVyKHRoaXMucGxhY2Vob2xkZXIpLHRoaXMuaXNPcGVuZWQmJlwidGFnc1wiPT09dGhpcy5tb2RlJiZ0aGlzLnRhZ3NJbnB1dCYmdGhpcy50YWdzSW5wdXQuZm9jdXMoKX0sZS5wcm90b3R5cGUuYWRkU2VsZWN0T3B0aW9uPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnNlbGVjdE9wdGlvbnM9cyhzKFtdLHRoaXMuc2VsZWN0T3B0aW9ucywhMCksW3t0aXRsZTp0LHZhbDplLG9wdGlvbnM6bn1dLCExKX0sZS5wcm90b3R5cGUucmVtb3ZlU2VsZWN0T3B0aW9uPWZ1bmN0aW9uKHQpe2lmKCEhIXRoaXMuc2VsZWN0T3B0aW9ucy5zb21lKChmdW5jdGlvbihlKXtyZXR1cm4gZS52YWw9PT10fSkpKXJldHVybiExO3RoaXMuc2VsZWN0T3B0aW9ucz10aGlzLnNlbGVjdE9wdGlvbnMuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gZS52YWwhPT10fSkpfSxlLnByb3RvdHlwZS5yZXNldFRhZ3NJbnB1dEZpZWxkPWZ1bmN0aW9uKCl7dGhpcy50YWdzSW5wdXQudmFsdWU9XCJcIix0aGlzLnJlYXNzaWduVGFnc0lucHV0UGxhY2Vob2xkZXIoXCJcIiksdGhpcy5zZWFyY2hPcHRpb25zKFwiXCIpfSxlLnByb3RvdHlwZS5jbGVhclNlbGVjdGlvbnM9ZnVuY3Rpb24oKXtBcnJheS5mcm9tKHRoaXMuZHJvcGRvd24uY2hpbGRyZW4pLmZvckVhY2goKGZ1bmN0aW9uKHQpe3QuY2xhc3NMaXN0LmNvbnRhaW5zKFwic2VsZWN0ZWRcIikmJnQuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpfSkpLEFycmF5LmZyb20odGhpcy5lbC5jaGlsZHJlbikuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5zZWxlY3RlZCYmKHQuc2VsZWN0ZWQ9ITEpfSkpfSxlLnByb3RvdHlwZS5zZXROZXdWYWx1ZT1mdW5jdGlvbigpe1widGFnc1wiPT09dGhpcy5tb2RlP3RoaXMuc2V0VGFnc0l0ZW1zKCk6dGhpcy52YWx1ZS5sZW5ndGg/dGhpcy50b2dnbGVUZXh0V3JhcHBlci5pbm5lckhUTUw9dGhpcy5zdHJpbmdGcm9tVmFsdWUoKTp0aGlzLnRvZ2dsZVRleHRXcmFwcGVyLmlubmVySFRNTD10aGlzLnBsYWNlaG9sZGVyfSxlLnByb3RvdHlwZS5zdHJpbmdGcm9tVmFsdWU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9W107cmV0dXJuIHRoaXMuc2VsZWN0T3B0aW9ucy5mb3JFYWNoKChmdW5jdGlvbihuKXt0LmlzTXVsdGlwbGU/dC52YWx1ZS5pbmNsdWRlcyhuLnZhbCkmJmUucHVzaChuLnRpdGxlKTp0LnZhbHVlPT09bi52YWwmJmUucHVzaChuLnRpdGxlKX0pKSx0aGlzLnRvZ2dsZUNvdW50VGV4dCYmXCJcIiE9PXRoaXMudG9nZ2xlQ291bnRUZXh0JiZlLmxlbmd0aD49dGhpcy50b2dnbGVDb3VudFRleHRNaW5JdGVtcz9cIlwiLmNvbmNhdChlLmxlbmd0aCxcIiBcIikuY29uY2F0KHRoaXMudG9nZ2xlQ291bnRUZXh0KTplLmpvaW4oXCIsIFwiKX0sZS5wcm90b3R5cGUuc2VsZWN0U2luZ2xlSXRlbT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7QXJyYXkuZnJvbSh0aGlzLmVsLmNoaWxkcmVuKS5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gdC52YWx1ZT09PWUudmFsdWV9KSkuc2VsZWN0ZWQ9ITAsQXJyYXkuZnJvbSh0aGlzLmRyb3Bkb3duLmNoaWxkcmVuKS5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gdC52YWx1ZT09PWUuZ2V0QXR0cmlidXRlKFwiZGF0YS12YWx1ZVwiKX0pKS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIil9LGUucHJvdG90eXBlLnNlbGVjdE11bHRpcGxlSXRlbXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO0FycmF5LmZyb20odGhpcy5kcm9wZG93bi5jaGlsZHJlbikuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gdC52YWx1ZS5pbmNsdWRlcyhlLmdldEF0dHJpYnV0ZShcImRhdGEtdmFsdWVcIikpfSkpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKX0pKSxBcnJheS5mcm9tKHRoaXMuZWwuY2hpbGRyZW4pLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIHQudmFsdWUuaW5jbHVkZXMoZS52YWx1ZSl9KSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2VsZWN0ZWQ9ITB9KSl9LGUucHJvdG90eXBlLnVuc2VsZWN0TXVsdGlwbGVJdGVtcz1mdW5jdGlvbigpe0FycmF5LmZyb20odGhpcy5kcm9wZG93bi5jaGlsZHJlbikuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpfSkpLEFycmF5LmZyb20odGhpcy5lbC5jaGlsZHJlbikuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2VsZWN0ZWQ9ITF9KSl9LGUucHJvdG90eXBlLnNlYXJjaE9wdGlvbnM9ZnVuY3Rpb24odCl7dGhpcy5zZWFyY2hOb1Jlc3VsdCYmKHRoaXMuc2VhcmNoTm9SZXN1bHQucmVtb3ZlKCksdGhpcy5zZWFyY2hOb1Jlc3VsdD1udWxsKSx0aGlzLnNlYXJjaE5vUmVzdWx0PSgwLGwuaHRtbFRvRWxlbWVudCkoXCI8c3Bhbj48L3NwYW4+XCIpLHRoaXMuc2VhcmNoTm9SZXN1bHQuaW5uZXJUZXh0PXRoaXMuc2VhcmNoTm9SZXN1bHRUZXh0LCgwLGwuY2xhc3NUb0NsYXNzTGlzdCkodGhpcy5zZWFyY2hOb1Jlc3VsdENsYXNzZXMsdGhpcy5zZWFyY2hOb1Jlc3VsdCk7dmFyIGU9dGhpcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdmFsdWVdXCIpLG49ITE7ZS5mb3JFYWNoKChmdW5jdGlvbihlKXtlLmdldEF0dHJpYnV0ZShcImRhdGEtdGl0bGUtdmFsdWVcIikudG9Mb2NhbGVMb3dlckNhc2UoKS5pbmNsdWRlcyh0LnRvTG9jYWxlTG93ZXJDYXNlKCkpPyhlLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIiksbj0hMCk6ZS5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpfSkpLG58fHRoaXMuZHJvcGRvd24uYXBwZW5kKHRoaXMuc2VhcmNoTm9SZXN1bHQpfSxlLnByb3RvdHlwZS5lcmFzZVRvZ2dsZUljb249ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnRvZ2dsZS5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaWNvbl1cIik7dCYmKHQuaW5uZXJIVE1MPW51bGwsdC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpKX0sZS5wcm90b3R5cGUuZXJhc2VUb2dnbGVUaXRsZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMudG9nZ2xlLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS10aXRsZV1cIik7dD90LmlubmVySFRNTD10aGlzLnBsYWNlaG9sZGVyOnRoaXMudG9nZ2xlVGV4dFdyYXBwZXIuaW5uZXJIVE1MPXRoaXMucGxhY2Vob2xkZXJ9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDt0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIiksdGhpcy5lbC5zdHlsZS5kaXNwbGF5PVwiXCIsdC5wcmVwZW5kKHRoaXMuZWwpLHQucXVlcnlTZWxlY3RvcihcIi5ocy1zZWxlY3RcIikucmVtb3ZlKCksdGhpcy53cmFwcGVyPW51bGx9LGUucHJvdG90eXBlLm9wZW49ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzKXJldHVybiExO3RoaXMuYW5pbWF0aW9uSW5Qcm9jZXNzPSEwLHRoaXMuZHJvcGRvd24uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKSx0aGlzLnJlY2FsY3VsYXRlRGlyZWN0aW9uKCksc2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LndyYXBwZXIuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKSx0LmRyb3Bkb3duLmNsYXNzTGlzdC5hZGQoXCJvcGVuZWRcIiksdC5oYXNTZWFyY2gmJiF0LnByZXZlbnRTZWFyY2hGb2N1cyYmdC5zZWFyY2guZm9jdXMoKSx0LmFuaW1hdGlvbkluUHJvY2Vzcz0hMX0pKSx0aGlzLmlzT3BlbmVkPSEwfSxlLnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbigpe3ZhciB0LGUsbixvPXRoaXM7aWYodGhpcy5hbmltYXRpb25JblByb2Nlc3MpcmV0dXJuITE7dGhpcy5hbmltYXRpb25JblByb2Nlc3M9ITAsdGhpcy53cmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIiksdGhpcy5kcm9wZG93bi5jbGFzc0xpc3QucmVtb3ZlKFwib3BlbmVkXCIsXCJib3R0b20tZnVsbFwiLFwidG9wLWZ1bGxcIiksKG51bGw9PT0odD10aGlzLmRyb3Bkb3duRGlyZWN0aW9uQ2xhc3Nlcyl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuYm90dG9tKSYmdGhpcy5kcm9wZG93bi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzLmJvdHRvbSksKG51bGw9PT0oZT10aGlzLmRyb3Bkb3duRGlyZWN0aW9uQ2xhc3Nlcyl8fHZvaWQgMD09PWU/dm9pZCAwOmUudG9wKSYmdGhpcy5kcm9wZG93bi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzLnRvcCksdGhpcy5kcm9wZG93bi5zdHlsZS5tYXJnaW5Ub3A9XCJcIix0aGlzLmRyb3Bkb3duLnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiLCgwLGwuYWZ0ZXJUcmFuc2l0aW9uKSh0aGlzLmRyb3Bkb3duLChmdW5jdGlvbigpe28uZHJvcGRvd24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKSxvLmhhc1NlYXJjaCYmKG8uc2VhcmNoLnZhbHVlPVwiXCIsby5zZWFyY2guZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJpbnB1dFwiLHtidWJibGVzOiEwfSkpLG8uc2VhcmNoLmJsdXIoKSksby5hbmltYXRpb25JblByb2Nlc3M9ITF9KSksbnVsbD09PShuPXRoaXMuZHJvcGRvd24ucXVlcnlTZWxlY3RvcihcIi5ocy1zZWxlY3Qtb3B0aW9uLWhpZ2hsaWdodGVkXCIpKXx8dm9pZCAwPT09bnx8bi5jbGFzc0xpc3QucmVtb3ZlKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKSx0aGlzLmlzT3BlbmVkPSExfSxlLnByb3RvdHlwZS5hZGRPcHRpb249ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVwiXCIuY29uY2F0KHRoaXMuc2VsZWN0T3B0aW9ucy5sZW5ndGgpLG89ZnVuY3Rpb24odCl7dmFyIG89dC50aXRsZSxpPXQudmFsLHI9dC5vcHRpb25zOyEhZS5zZWxlY3RPcHRpb25zLnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbD09PWl9KSl8fChlLmFkZFNlbGVjdE9wdGlvbihvLGksciksZS5idWlsZE9wdGlvbihvLGkscixuKSxlLmJ1aWxkT3JpZ2luYWxPcHRpb24obyxpLHIpKX07QXJyYXkuaXNBcnJheSh0KT90LmZvckVhY2goKGZ1bmN0aW9uKHQpe28odCl9KSk6byh0KX0sZS5wcm90b3R5cGUucmVtb3ZlT3B0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1mdW5jdGlvbih0KXshIWUuc2VsZWN0T3B0aW9ucy5zb21lKChmdW5jdGlvbihlKXtyZXR1cm4gZS52YWw9PT10fSkpJiYoZS5yZW1vdmVTZWxlY3RPcHRpb24odCksZS5kZXN0cm95T3B0aW9uKHQpLGUuZGVzdHJveU9yaWdpbmFsT3B0aW9uKHQpLGUudmFsdWU9PT10JiYoZS52YWx1ZT1udWxsLGUuZXJhc2VUb2dnbGVUaXRsZSgpLGUuZXJhc2VUb2dnbGVJY29uKCkpKX07QXJyYXkuaXNBcnJheSh0KT90LmZvckVhY2goKGZ1bmN0aW9uKHQpe24odCl9KSk6bih0KX0sZS5wcm90b3R5cGUucmVjYWxjdWxhdGVEaXJlY3Rpb249ZnVuY3Rpb24oKXt2YXIgdCxlLG4sbzsoMCxsLmlzRW5vdWdoU3BhY2UpKHRoaXMuZHJvcGRvd24sdGhpcy50b2dnbGV8fHRoaXMudGFnc0lucHV0LFwiYm90dG9tXCIsdGhpcy5kcm9wZG93blNwYWNlLHRoaXMudmlld3BvcnQpPyh0aGlzLmRyb3Bkb3duLmNsYXNzTGlzdC5yZW1vdmUoXCJib3R0b20tZnVsbFwiKSwobnVsbD09PSh0PXRoaXMuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzKXx8dm9pZCAwPT09dD92b2lkIDA6dC5ib3R0b20pJiZ0aGlzLmRyb3Bkb3duLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5kcm9wZG93bkRpcmVjdGlvbkNsYXNzZXMuYm90dG9tKSx0aGlzLmRyb3Bkb3duLnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiLHRoaXMuZHJvcGRvd24uY2xhc3NMaXN0LmFkZChcInRvcC1mdWxsXCIpLChudWxsPT09KGU9dGhpcy5kcm9wZG93bkRpcmVjdGlvbkNsYXNzZXMpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLnRvcCkmJnRoaXMuZHJvcGRvd24uY2xhc3NMaXN0LmFkZCh0aGlzLmRyb3Bkb3duRGlyZWN0aW9uQ2xhc3Nlcy50b3ApLHRoaXMuZHJvcGRvd24uc3R5bGUubWFyZ2luVG9wPVwiXCIuY29uY2F0KHRoaXMuZHJvcGRvd25TcGFjZSxcInB4XCIpKToodGhpcy5kcm9wZG93bi5jbGFzc0xpc3QucmVtb3ZlKFwidG9wLWZ1bGxcIiksKG51bGw9PT0obj10aGlzLmRyb3Bkb3duRGlyZWN0aW9uQ2xhc3Nlcyl8fHZvaWQgMD09PW4/dm9pZCAwOm4udG9wKSYmdGhpcy5kcm9wZG93bi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzLnRvcCksdGhpcy5kcm9wZG93bi5zdHlsZS5tYXJnaW5Ub3A9XCJcIix0aGlzLmRyb3Bkb3duLmNsYXNzTGlzdC5hZGQoXCJib3R0b20tZnVsbFwiKSwobnVsbD09PShvPXRoaXMuZHJvcGRvd25EaXJlY3Rpb25DbGFzc2VzKXx8dm9pZCAwPT09bz92b2lkIDA6by5ib3R0b20pJiZ0aGlzLmRyb3Bkb3duLmNsYXNzTGlzdC5hZGQodGhpcy5kcm9wZG93bkRpcmVjdGlvbkNsYXNzZXMuYm90dG9tKSx0aGlzLmRyb3Bkb3duLnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiLmNvbmNhdCh0aGlzLmRyb3Bkb3duU3BhY2UsXCJweFwiKSl9LGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj13aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb258fCh3aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbj1bXSksZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLXNlbGVjdF06bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXtpZighd2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSkpe3ZhciBuPXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zZWxlY3RcIiksbz1uP0pTT04ucGFyc2Uobik6e307bmV3IGUodCxvKX19KSksd2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb24mJih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKHQpe3ZhciBuPXQudGFyZ2V0O2UuY2xvc2VDdXJyZW50bHlPcGVuZWQobil9KSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwoZnVuY3Rpb24odCl7cmV0dXJuIGUuYWNjZXNzaWJpbGl0eSh0KX0pKSl9LGUuY2xvc2U9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpO2UmJmUuZWxlbWVudC5pc09wZW5lZCYmZS5lbGVtZW50LmNsb3NlKCl9LGUuY2xvc2VDdXJyZW50bHlPcGVuZWQ9ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dCYmKHQ9bnVsbCksIXQuY2xvc2VzdChcIi5ocy1zZWxlY3QuYWN0aXZlXCIpKXt2YXIgZT13aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSl8fG51bGw7ZSYmZS5mb3JFYWNoKChmdW5jdGlvbih0KXt0LmVsZW1lbnQuY2xvc2UoKX0pKX19LGUuYWNjZXNzaWJpbGl0eT1mdW5jdGlvbih0KXtpZih3aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmlzT3BlbmVkfSkpJiZjLlNFTEVDVF9BQ0NFU1NJQklMSVRZX0tFWV9TRVQuaW5jbHVkZXModC5jb2RlKSYmIXQubWV0YUtleSlzd2l0Y2godC5jb2RlKXtjYXNlXCJFc2NhcGVcIjp0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkVzY2FwZSgpO2JyZWFrO2Nhc2VcIkFycm93VXBcIjp0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vbkFycm93KCk7YnJlYWs7Y2FzZVwiQXJyb3dEb3duXCI6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25BcnJvdyghMSk7YnJlYWs7Y2FzZVwiVGFiXCI6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMub25UYWIodC5zaGlmdEtleSk7YnJlYWs7Y2FzZVwiSG9tZVwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uU3RhcnRFbmQoKTticmVhaztjYXNlXCJFbmRcIjp0LnByZXZlbnREZWZhdWx0KCksdGhpcy5vblN0YXJ0RW5kKCExKTticmVhaztjYXNlXCJFbnRlclwiOnQucHJldmVudERlZmF1bHQoKSx0aGlzLm9uRW50ZXIodCl9fSxlLm9uRXNjYXBlPWZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5pc09wZW5lZH0pKTt0JiZ0LmVsZW1lbnQuY2xvc2UoKX0sZS5vbkFycm93PWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSEwKTt2YXIgZT13aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmlzT3BlbmVkfSkpO2lmKGUpe3ZhciBuPWUuZWxlbWVudC5kcm9wZG93bjtpZighbilyZXR1cm4hMTt2YXIgbz0odD9BcnJheS5mcm9tKG4ucXVlcnlTZWxlY3RvckFsbChcIjpzY29wZSA+ICo6bm90KC5oaWRkZW4pXCIpKS5yZXZlcnNlKCk6QXJyYXkuZnJvbShuLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6c2NvcGUgPiAqOm5vdCguaGlkZGVuKVwiKSkpLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZGlzYWJsZWRcIil9KSksaT1uLnF1ZXJ5U2VsZWN0b3IoXCIuaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKTtpfHxvWzBdLmNsYXNzTGlzdC5hZGQoXCJocy1zZWxlY3Qtb3B0aW9uLWhpZ2hsaWdodGVkXCIpO3ZhciByPW8uZmluZEluZGV4KChmdW5jdGlvbih0KXtyZXR1cm4gdD09PWl9KSk7cisxPG8ubGVuZ3RoJiZyKyssb1tyXS5mb2N1cygpLGkmJmkuY2xhc3NMaXN0LnJlbW92ZShcImhzLXNlbGVjdC1vcHRpb24taGlnaGxpZ2h0ZWRcIiksb1tyXS5jbGFzc0xpc3QuYWRkKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKX19LGUub25UYWI9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9ITApO3ZhciBlPXdpbmRvdy4kaHNTZWxlY3RDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSk7aWYoZSl7dmFyIG49ZS5lbGVtZW50LmRyb3Bkb3duO2lmKCFuKXJldHVybiExO3ZhciBvPSh0P0FycmF5LmZyb20obi5xdWVyeVNlbGVjdG9yQWxsKFwiOnNjb3BlID4gICo6bm90KC5oaWRkZW4pXCIpKS5yZXZlcnNlKCk6QXJyYXkuZnJvbShuLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6c2NvcGUgPiAgKjpub3QoLmhpZGRlbilcIikpKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiF0LmNsYXNzTGlzdC5jb250YWlucyhcImRpc2FibGVkXCIpfSkpLGk9bi5xdWVyeVNlbGVjdG9yKFwiLmhzLXNlbGVjdC1vcHRpb24taGlnaGxpZ2h0ZWRcIik7aXx8b1swXS5jbGFzc0xpc3QuYWRkKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKTt2YXIgcj1vLmZpbmRJbmRleCgoZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1pfSkpO2lmKCEocisxPG8ubGVuZ3RoKSlyZXR1cm4gaSYmaS5jbGFzc0xpc3QucmVtb3ZlKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKSxlLmVsZW1lbnQuY2xvc2UoKSxlLmVsZW1lbnQudG9nZ2xlLmZvY3VzKCksITE7b1srK3JdLmZvY3VzKCksaSYmaS5jbGFzc0xpc3QucmVtb3ZlKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKSxvW3JdLmNsYXNzTGlzdC5hZGQoXCJocy1zZWxlY3Qtb3B0aW9uLWhpZ2hsaWdodGVkXCIpfX0sZS5vblN0YXJ0RW5kPWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSEwKTt2YXIgZT13aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmlzT3BlbmVkfSkpO2lmKGUpe3ZhciBuPWUuZWxlbWVudC5kcm9wZG93bjtpZighbilyZXR1cm4hMTt2YXIgbz0odD9BcnJheS5mcm9tKG4ucXVlcnlTZWxlY3RvckFsbChcIjpzY29wZSA+ICAqOm5vdCguaGlkZGVuKVwiKSk6QXJyYXkuZnJvbShuLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6c2NvcGUgPiAgKjpub3QoLmhpZGRlbilcIikpLnJldmVyc2UoKSkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hdC5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNhYmxlZFwiKX0pKSxpPW4ucXVlcnlTZWxlY3RvcihcIi5ocy1zZWxlY3Qtb3B0aW9uLWhpZ2hsaWdodGVkXCIpO28ubGVuZ3RoJiYob1swXS5mb2N1cygpLGkmJmkuY2xhc3NMaXN0LnJlbW92ZShcImhzLXNlbGVjdC1vcHRpb24taGlnaGxpZ2h0ZWRcIiksb1swXS5jbGFzc0xpc3QuYWRkKFwiaHMtc2VsZWN0LW9wdGlvbi1oaWdobGlnaHRlZFwiKSl9fSxlLm9uRW50ZXI9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQucHJldmlvdXNTaWJsaW5nO2lmKHdpbmRvdy4kaHNTZWxlY3RDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWw9PT1lfSkpKXt2YXIgbj13aW5kb3cuJGhzU2VsZWN0Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5lbGVtZW50LmlzT3BlbmVkfSkpLG89d2luZG93LiRoc1NlbGVjdENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbD09PWV9KSk7bi5lbGVtZW50LmNsb3NlKCksby5lbGVtZW50Lm9wZW4oKX1lbHNleyhvPXdpbmRvdy4kaHNTZWxlY3RDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSkpJiZvLmVsZW1lbnQub25TZWxlY3RPcHRpb24odC50YXJnZXQuZGF0YXNldC52YWx1ZXx8XCJcIil9fSxlfShhLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe3UuYXV0b0luaXQoKX0pKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsKGZ1bmN0aW9uKCl7aWYoIXdpbmRvdy4kaHNTZWxlY3RDb2xsZWN0aW9uKXJldHVybiExO3ZhciB0PXdpbmRvdy4kaHNTZWxlY3RDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSk7dCYmdC5lbGVtZW50LnJlY2FsY3VsYXRlRGlyZWN0aW9uKCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1NlbGVjdD11KSxlLmRlZmF1bHQ9dX0sOTU3OmZ1bmN0aW9uKHQsZSxuKXtcbi8qXG4gKiBIU1N0ZXBwZXJcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1uKDk2OSksbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcyxpPWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zdGVwcGVyXCIpLHM9aT9KU09OLnBhcnNlKGkpOnt9LGw9cihyKHt9LHMpLG4pO3JldHVybiBvLmN1cnJlbnRJbmRleD0obnVsbD09bD92b2lkIDA6bC5jdXJyZW50SW5kZXgpfHwxLG8ubW9kZT0obnVsbD09bD92b2lkIDA6bC5tb2RlKXx8XCJsaW5lYXJcIixvLmlzQ29tcGxldGVkPXZvaWQgMCE9PShudWxsPT1sP3ZvaWQgMDpsLmlzQ29tcGxldGVkKSYmKG51bGw9PWw/dm9pZCAwOmwuaXNDb21wbGV0ZWQpLG8udG90YWxTdGVwcz0xLG8ubmF2SXRlbXM9W10sby5jb250ZW50SXRlbXM9W10sby5pbml0KCksb31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc1N0ZXBwZXJDb2xsZWN0aW9uLHRoaXMpLHRoaXMuYnVpbGROYXYoKSx0aGlzLmJ1aWxkQ29udGVudCgpLHRoaXMuYnVpbGRCdXR0b25zKCksdGhpcy5zZXRUb3RhbFN0ZXBzKCl9LGUucHJvdG90eXBlLmdldFVuY29tcGxldGVkU3RlcHM9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PSExKSx0aGlzLm5hdkl0ZW1zLmZpbHRlcigoZnVuY3Rpb24oZSl7dmFyIG49ZS5pc0NvbXBsZXRlZCxvPWUuaXNTa2lwO3JldHVybiB0PyFufHxvOiFuJiYhb30pKX0sZS5wcm90b3R5cGUuc2V0VG90YWxTdGVwcz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5uYXZJdGVtcy5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbj1lLmluZGV4O24+dC50b3RhbFN0ZXBzJiYodC50b3RhbFN0ZXBzPW4pfSkpfSxlLnByb3RvdHlwZS5idWlsZE5hdj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtc3RlcHBlci1uYXYtaXRlbV1cIikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWRkTmF2SXRlbShlKX0pKSx0aGlzLm5hdkl0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiB0LmJ1aWxkTmF2SXRlbShlKX0pKX0sZS5wcm90b3R5cGUuYnVpbGROYXZJdGVtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LmluZGV4LG89dC5pc0Rpc2FibGVkLGk9dC5lbDtuPT09dGhpcy5jdXJyZW50SW5kZXgmJnRoaXMuc2V0Q3VycmVudE5hdkl0ZW0oKSwoXCJsaW5lYXJcIiE9PXRoaXMubW9kZXx8bykmJmkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGUuaGFuZGxlTmF2SXRlbUNsaWNrKHQpfSkpfSxlLnByb3RvdHlwZS5hZGROYXZJdGVtPWZ1bmN0aW9uKHQpe3ZhciBlPUpTT04ucGFyc2UodC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXN0ZXBwZXItbmF2LWl0ZW1cIikpLG49ZS5pbmRleCxvPWUuaXNGaW5hbCxpPXZvaWQgMCE9PW8mJm8scj1lLmlzQ29tcGxldGVkLHM9dm9pZCAwIT09ciYmcixsPWUuaXNTa2lwLGE9dm9pZCAwIT09bCYmbCxjPWUuaXNPcHRpb25hbCx1PXZvaWQgMCE9PWMmJmMsZD1lLmlzRGlzYWJsZWQscD12b2lkIDAhPT1kJiZkLGg9ZS5pc1Byb2Nlc3NlZCxmPXZvaWQgMCE9PWgmJmgsbT1lLmhhc0Vycm9yLHY9dm9pZCAwIT09bSYmbTtzJiZ0LmNsYXNzTGlzdC5hZGQoXCJzdWNjZXNzXCIpLGEmJnQuY2xhc3NMaXN0LmFkZChcInNraXBwZWRcIikscCYmKFwiQlVUVE9OXCIhPT10LnRhZ05hbWUmJlwiSU5QVVRcIiE9PXQudGFnTmFtZXx8dC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLFwiZGlzYWJsZWRcIiksdC5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIikpLHYmJnQuY2xhc3NMaXN0LmFkZChcImVycm9yXCIpLHRoaXMubmF2SXRlbXMucHVzaCh7aW5kZXg6bixpc0ZpbmFsOmksaXNDb21wbGV0ZWQ6cyxpc1NraXA6YSxpc09wdGlvbmFsOnUsaXNEaXNhYmxlZDpwLGlzUHJvY2Vzc2VkOmYsaGFzRXJyb3I6dixlbDp0fSl9LGUucHJvdG90eXBlLnNldEN1cnJlbnROYXZJdGVtPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLm5hdkl0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBuPWUuaW5kZXgsbz1lLmVsO249PT10LmN1cnJlbnRJbmRleD90LnNldEN1cnJlbnROYXZJdGVtQWN0aW9ucyhvKTp0LnVuc2V0Q3VycmVudE5hdkl0ZW1BY3Rpb25zKG8pfSkpfSxlLnByb3RvdHlwZS5zZXRDdXJyZW50TmF2SXRlbUFjdGlvbnM9ZnVuY3Rpb24odCl7dC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpLHRoaXMuZmlyZUV2ZW50KFwiYWN0aXZlXCIsdGhpcy5jdXJyZW50SW5kZXgpLCgwLHMuZGlzcGF0Y2gpKFwiYWN0aXZlLmhzLnN0ZXBwZXJcIix0aGlzLmVsLHRoaXMuY3VycmVudEluZGV4KX0sZS5wcm90b3R5cGUuZ2V0TmF2SXRlbT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9dGhpcy5jdXJyZW50SW5kZXgpLHRoaXMubmF2SXRlbXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW5kZXg9PT10fSkpfSxlLnByb3RvdHlwZS5zZXRQcm9jZXNzZWROYXZJdGVtQWN0aW9ucz1mdW5jdGlvbih0KXt0LmlzUHJvY2Vzc2VkPSEwLHQuZWwuY2xhc3NMaXN0LmFkZChcInByb2Nlc3NlZFwiKX0sZS5wcm90b3R5cGUuc2V0RXJyb3JOYXZJdGVtQWN0aW9ucz1mdW5jdGlvbih0KXt0Lmhhc0Vycm9yPSEwLHQuZWwuY2xhc3NMaXN0LmFkZChcImVycm9yXCIpfSxlLnByb3RvdHlwZS51bnNldEN1cnJlbnROYXZJdGVtQWN0aW9ucz1mdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIil9LGUucHJvdG90eXBlLmhhbmRsZU5hdkl0ZW1DbGljaz1mdW5jdGlvbih0KXt2YXIgZT10LmluZGV4O3RoaXMuY3VycmVudEluZGV4PWUsdGhpcy5zZXRDdXJyZW50TmF2SXRlbSgpLHRoaXMuc2V0Q3VycmVudENvbnRlbnRJdGVtKCksdGhpcy5jaGVja0ZvclRoZUZpcnN0U3RlcCgpfSxlLnByb3RvdHlwZS5idWlsZENvbnRlbnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZWwucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWhzLXN0ZXBwZXItY29udGVudC1pdGVtXVwiKS5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gdC5hZGRDb250ZW50SXRlbShlKX0pKSx0aGlzLm5hdkl0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiB0LmJ1aWxkQ29udGVudEl0ZW0oZSl9KSl9LGUucHJvdG90eXBlLmJ1aWxkQ29udGVudEl0ZW09ZnVuY3Rpb24odCl7dC5pbmRleD09PXRoaXMuY3VycmVudEluZGV4JiZ0aGlzLnNldEN1cnJlbnRDb250ZW50SXRlbSgpfSxlLnByb3RvdHlwZS5hZGRDb250ZW50SXRlbT1mdW5jdGlvbih0KXt2YXIgZT1KU09OLnBhcnNlKHQuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zdGVwcGVyLWNvbnRlbnQtaXRlbVwiKSksbj1lLmluZGV4LG89ZS5pc0ZpbmFsLGk9dm9pZCAwIT09byYmbyxyPWUuaXNDb21wbGV0ZWQscz12b2lkIDAhPT1yJiZyLGw9ZS5pc1NraXAsYT12b2lkIDAhPT1sJiZsO3MmJnQuY2xhc3NMaXN0LmFkZChcInN1Y2Nlc3NcIiksYSYmdC5jbGFzc0xpc3QuYWRkKFwic2tpcHBlZFwiKSx0aGlzLmNvbnRlbnRJdGVtcy5wdXNoKHtpbmRleDpuLGlzRmluYWw6aSxpc0NvbXBsZXRlZDpzLGlzU2tpcDphLGVsOnR9KX0sZS5wcm90b3R5cGUuc2V0Q3VycmVudENvbnRlbnRJdGVtPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmlzQ29tcGxldGVkKXt2YXIgZT10aGlzLmNvbnRlbnRJdGVtcy5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0ZpbmFsfSkpLG49dGhpcy5jb250ZW50SXRlbXMuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hdC5pc0ZpbmFsfSkpO3JldHVybiBlLmVsLnN0eWxlLmRpc3BsYXk9XCJcIixuLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSksITF9dGhpcy5jb250ZW50SXRlbXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5pbmRleCxvPWUuZWw7bj09PXQuY3VycmVudEluZGV4P3Quc2V0Q3VycmVudENvbnRlbnRJdGVtQWN0aW9ucyhvKTp0LnVuc2V0Q3VycmVudENvbnRlbnRJdGVtQWN0aW9ucyhvKX0pKX0sZS5wcm90b3R5cGUuaGlkZUFsbENvbnRlbnRJdGVtcz1mdW5jdGlvbigpe3RoaXMuY29udGVudEl0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSl9LGUucHJvdG90eXBlLnNldEN1cnJlbnRDb250ZW50SXRlbUFjdGlvbnM9ZnVuY3Rpb24odCl7dC5zdHlsZS5kaXNwbGF5PVwiXCJ9LGUucHJvdG90eXBlLnVuc2V0Q3VycmVudENvbnRlbnRJdGVtQWN0aW9ucz1mdW5jdGlvbih0KXt0LnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9LGUucHJvdG90eXBlLmRpc2FibGVBbGw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldE5hdkl0ZW0odGhpcy5jdXJyZW50SW5kZXgpO3QuaGFzRXJyb3I9ITEsdC5pc0NvbXBsZXRlZD0hMSx0LmlzRGlzYWJsZWQ9ITEsdC5lbC5jbGFzc0xpc3QucmVtb3ZlKFwiZXJyb3JcIixcInN1Y2Nlc3NcIiksdGhpcy5kaXNhYmxlQnV0dG9ucygpfSxlLnByb3RvdHlwZS5kaXNhYmxlTmF2SXRlbUFjdGlvbnM9ZnVuY3Rpb24odCl7dC5pc0Rpc2FibGVkPSEwLHQuZWwuY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpfSxlLnByb3RvdHlwZS5lbmFibGVOYXZJdGVtQWN0aW9ucz1mdW5jdGlvbih0KXt0LmlzRGlzYWJsZWQ9ITEsdC5lbC5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIil9LGUucHJvdG90eXBlLmJ1aWxkQnV0dG9ucz1mdW5jdGlvbigpe3RoaXMuYmFja0J0bj10aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1zdGVwcGVyLWJhY2stYnRuXVwiKSx0aGlzLm5leHRCdG49dGhpcy5lbC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtaHMtc3RlcHBlci1uZXh0LWJ0bl1cIiksdGhpcy5za2lwQnRuPXRoaXMuZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXN0ZXBwZXItc2tpcC1idG5dXCIpLHRoaXMuY29tcGxldGVTdGVwQnRuPXRoaXMuZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXN0ZXBwZXItY29tcGxldGUtc3RlcC1idG5dXCIpLHRoaXMuZmluaXNoQnRuPXRoaXMuZWwucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXN0ZXBwZXItZmluaXNoLWJ0bl1cIiksdGhpcy5yZXNldEJ0bj10aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy1zdGVwcGVyLXJlc2V0LWJ0bl1cIiksdGhpcy5idWlsZEJhY2tCdXR0b24oKSx0aGlzLmJ1aWxkTmV4dEJ1dHRvbigpLHRoaXMuYnVpbGRTa2lwQnV0dG9uKCksdGhpcy5idWlsZENvbXBsZXRlU3RlcEJ1dHRvbigpLHRoaXMuYnVpbGRGaW5pc2hCdXR0b24oKSx0aGlzLmJ1aWxkUmVzZXRCdXR0b24oKX0sZS5wcm90b3R5cGUuYnVpbGRCYWNrQnV0dG9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmJhY2tCdG4mJih0aGlzLmNoZWNrRm9yVGhlRmlyc3RTdGVwKCksdGhpcy5iYWNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe2lmKHQuaGFuZGxlQmFja0J1dHRvbkNsaWNrKCksXCJsaW5lYXJcIj09PXQubW9kZSl7dmFyIGU9dC5uYXZJdGVtcy5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5pbmRleD09PXQuY3VycmVudEluZGV4fSkpLG49dC5jb250ZW50SXRlbXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW5kZXg9PT10LmN1cnJlbnRJbmRleH0pKTtpZighZXx8IW4pcmV0dXJuO2UuaXNDb21wbGV0ZWQmJihlLmlzQ29tcGxldGVkPSExLGUuaXNTa2lwPSExLGUuZWwuY2xhc3NMaXN0LnJlbW92ZShcInN1Y2Nlc3NcIixcInNraXBwZWRcIikpLG4uaXNDb21wbGV0ZWQmJihuLmlzQ29tcGxldGVkPSExLG4uaXNTa2lwPSExLG4uZWwuY2xhc3NMaXN0LnJlbW92ZShcInN1Y2Nlc3NcIixcInNraXBwZWRcIikpLFwibGluZWFyXCI9PT10Lm1vZGUmJnQuY3VycmVudEluZGV4IT09dC50b3RhbFN0ZXBzJiYodC5uZXh0QnRuJiYodC5uZXh0QnRuLnN0eWxlLmRpc3BsYXk9XCJcIiksdC5jb21wbGV0ZVN0ZXBCdG4mJih0LmNvbXBsZXRlU3RlcEJ0bi5zdHlsZS5kaXNwbGF5PVwiXCIpKSx0LnNob3dTa2lwQnV0dG9uKCksdC5zaG93RmluaXNoQnV0dG9uKCksdC5zaG93Q29tcGxldGVTdGVwQnV0dG9uKCl9fSkpKX0sZS5wcm90b3R5cGUuaGFuZGxlQmFja0J1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7MSE9PXRoaXMuY3VycmVudEluZGV4JiYoXCJsaW5lYXJcIj09PXRoaXMubW9kZSYmdGhpcy5yZW1vdmVPcHRpb25hbENsYXNzZXMoKSx0aGlzLmN1cnJlbnRJbmRleC0tLFwibGluZWFyXCI9PT10aGlzLm1vZGUmJnRoaXMucmVtb3ZlT3B0aW9uYWxDbGFzc2VzKCksdGhpcy5zZXRDdXJyZW50TmF2SXRlbSgpLHRoaXMuc2V0Q3VycmVudENvbnRlbnRJdGVtKCksdGhpcy5jaGVja0ZvclRoZUZpcnN0U3RlcCgpLHRoaXMuY29tcGxldGVTdGVwQnRuJiZ0aGlzLmNoYW5nZVRleHRBbmREaXNhYmxlQ29tcGxldGVCdXR0b25JZlN0ZXBDb21wbGV0ZWQoKSx0aGlzLmZpcmVFdmVudChcImJhY2tcIix0aGlzLmN1cnJlbnRJbmRleCksKDAscy5kaXNwYXRjaCkoXCJiYWNrLmhzLnN0ZXBwZXJcIix0aGlzLmVsLHRoaXMuY3VycmVudEluZGV4KSl9LGUucHJvdG90eXBlLmNoZWNrRm9yVGhlRmlyc3RTdGVwPWZ1bmN0aW9uKCl7MT09PXRoaXMuY3VycmVudEluZGV4P3RoaXMuc2V0VG9EaXNhYmxlZCh0aGlzLmJhY2tCdG4pOnRoaXMuc2V0VG9Ob25EaXNhYmxlZCh0aGlzLmJhY2tCdG4pfSxlLnByb3RvdHlwZS5zZXRUb0Rpc2FibGVkPWZ1bmN0aW9uKHQpe1wiQlVUVE9OXCIhPT10LnRhZ05hbWUmJlwiSU5QVVRcIiE9PXQudGFnTmFtZXx8dC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLFwiZGlzYWJsZWRcIiksdC5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIil9LGUucHJvdG90eXBlLnNldFRvTm9uRGlzYWJsZWQ9ZnVuY3Rpb24odCl7XCJCVVRUT05cIiE9PXQudGFnTmFtZSYmXCJJTlBVVFwiIT09dC50YWdOYW1lfHx0LnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpLHQuY2xhc3NMaXN0LnJlbW92ZShcImRpc2FibGVkXCIpfSxlLnByb3RvdHlwZS5idWlsZE5leHRCdXR0b249ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMubmV4dEJ0biYmdGhpcy5uZXh0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe3ZhciBlO2lmKHQuZmlyZUV2ZW50KFwiYmVmb3JlTmV4dFwiLHQuY3VycmVudEluZGV4KSwoMCxzLmRpc3BhdGNoKShcImJlZm9yZU5leHQuaHMuc3RlcHBlclwiLHQuZWwsdC5jdXJyZW50SW5kZXgpLG51bGw9PT0oZT10LmdldE5hdkl0ZW0odC5jdXJyZW50SW5kZXgpKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5pc1Byb2Nlc3NlZClyZXR1cm4gdC5kaXNhYmxlQWxsKCksITE7dC5nb1RvTmV4dCgpfSkpfSxlLnByb3RvdHlwZS51bnNldFByb2Nlc3NlZE5hdkl0ZW1BY3Rpb25zPWZ1bmN0aW9uKHQpe3QuaXNQcm9jZXNzZWQ9ITEsdC5lbC5jbGFzc0xpc3QucmVtb3ZlKFwicHJvY2Vzc2VkXCIpfSxlLnByb3RvdHlwZS5oYW5kbGVOZXh0QnV0dG9uQ2xpY2s9ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dCYmKHQ9ITApLHQpdGhpcy5jdXJyZW50SW5kZXg9PT10aGlzLnRvdGFsU3RlcHM/dGhpcy5jdXJyZW50SW5kZXg9MTp0aGlzLmN1cnJlbnRJbmRleCsrO2Vsc2V7dmFyIGU9dGhpcy5nZXRVbmNvbXBsZXRlZFN0ZXBzKCk7aWYoMT09PWUubGVuZ3RoKXt2YXIgbj1lWzBdLmluZGV4O3RoaXMuY3VycmVudEluZGV4PW59ZWxzZXtpZih0aGlzLmN1cnJlbnRJbmRleD09PXRoaXMudG90YWxTdGVwcylyZXR1cm47dGhpcy5jdXJyZW50SW5kZXgrK319XCJsaW5lYXJcIj09PXRoaXMubW9kZSYmdGhpcy5yZW1vdmVPcHRpb25hbENsYXNzZXMoKSx0aGlzLnNldEN1cnJlbnROYXZJdGVtKCksdGhpcy5zZXRDdXJyZW50Q29udGVudEl0ZW0oKSx0aGlzLmNoZWNrRm9yVGhlRmlyc3RTdGVwKCksdGhpcy5jb21wbGV0ZVN0ZXBCdG4mJnRoaXMuY2hhbmdlVGV4dEFuZERpc2FibGVDb21wbGV0ZUJ1dHRvbklmU3RlcENvbXBsZXRlZCgpLHRoaXMuc2hvd1NraXBCdXR0b24oKSx0aGlzLnNob3dGaW5pc2hCdXR0b24oKSx0aGlzLnNob3dDb21wbGV0ZVN0ZXBCdXR0b24oKSx0aGlzLmZpcmVFdmVudChcIm5leHRcIix0aGlzLmN1cnJlbnRJbmRleCksKDAscy5kaXNwYXRjaCkoXCJuZXh0LmhzLnN0ZXBwZXJcIix0aGlzLmVsLHRoaXMuY3VycmVudEluZGV4KX0sZS5wcm90b3R5cGUucmVtb3ZlT3B0aW9uYWxDbGFzc2VzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMubmF2SXRlbXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW5kZXg9PT10LmN1cnJlbnRJbmRleH0pKSxuPXRoaXMuY29udGVudEl0ZW1zLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmluZGV4PT09dC5jdXJyZW50SW5kZXh9KSk7ZS5pc1NraXA9ITEsZS5oYXNFcnJvcj0hMSxlLmlzRGlzYWJsZWQ9ITEsbi5pc1NraXA9ITEsZS5lbC5jbGFzc0xpc3QucmVtb3ZlKFwic2tpcHBlZFwiLFwic3VjY2Vzc1wiLFwiZXJyb3JcIiksbi5lbC5jbGFzc0xpc3QucmVtb3ZlKFwic2tpcHBlZFwiLFwic3VjY2Vzc1wiLFwiZXJyb3JcIil9LGUucHJvdG90eXBlLmJ1aWxkU2tpcEJ1dHRvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5za2lwQnRuJiYodGhpcy5zaG93U2tpcEJ1dHRvbigpLHRoaXMuc2tpcEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXt0LmhhbmRsZVNraXBCdXR0b25DbGljaygpLFwibGluZWFyXCI9PT10Lm1vZGUmJnQuY3VycmVudEluZGV4PT09dC50b3RhbFN0ZXBzJiYodC5uZXh0QnRuJiYodC5uZXh0QnRuLnN0eWxlLmRpc3BsYXk9XCJub25lXCIpLHQuY29tcGxldGVTdGVwQnRuJiYodC5jb21wbGV0ZVN0ZXBCdG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksdC5maW5pc2hCdG4mJih0LmZpbmlzaEJ0bi5zdHlsZS5kaXNwbGF5PVwiXCIpKX0pKSl9LGUucHJvdG90eXBlLnNldFNraXBJdGVtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLm5hdkl0ZW1zLmZpbmQoKGZ1bmN0aW9uKG4pe3JldHVybiBuLmluZGV4PT09KHR8fGUuY3VycmVudEluZGV4KX0pKSxvPXRoaXMuY29udGVudEl0ZW1zLmZpbmQoKGZ1bmN0aW9uKG4pe3JldHVybiBuLmluZGV4PT09KHR8fGUuY3VycmVudEluZGV4KX0pKTtuJiZvJiYodGhpcy5zZXRTa2lwSXRlbUFjdGlvbnMobiksdGhpcy5zZXRTa2lwSXRlbUFjdGlvbnMobykpfSxlLnByb3RvdHlwZS5zZXRTa2lwSXRlbUFjdGlvbnM9ZnVuY3Rpb24odCl7dC5pc1NraXA9ITAsdC5lbC5jbGFzc0xpc3QuYWRkKFwic2tpcHBlZFwiKX0sZS5wcm90b3R5cGUuc2hvd1NraXBCdXR0b249ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuc2tpcEJ0bil7dmFyIGU9dGhpcy5uYXZJdGVtcy5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5pbmRleD09PXQuY3VycmVudEluZGV4fSkpLmlzT3B0aW9uYWw7dGhpcy5za2lwQnRuLnN0eWxlLmRpc3BsYXk9ZT9cIlwiOlwibm9uZVwifX0sZS5wcm90b3R5cGUuaGFuZGxlU2tpcEJ1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7dGhpcy5zZXRTa2lwSXRlbSgpLHRoaXMuaGFuZGxlTmV4dEJ1dHRvbkNsaWNrKCksdGhpcy5maXJlRXZlbnQoXCJza2lwXCIsdGhpcy5jdXJyZW50SW5kZXgpLCgwLHMuZGlzcGF0Y2gpKFwic2tpcC5ocy5zdGVwcGVyXCIsdGhpcy5lbCx0aGlzLmN1cnJlbnRJbmRleCl9LGUucHJvdG90eXBlLmJ1aWxkQ29tcGxldGVTdGVwQnV0dG9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNvbXBsZXRlU3RlcEJ0biYmKHRoaXMuY29tcGxldGVTdGVwQnRuRGVmYXVsdFRleHQ9dGhpcy5jb21wbGV0ZVN0ZXBCdG4uaW5uZXJUZXh0LHRoaXMuY29tcGxldGVTdGVwQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe3JldHVybiB0LmhhbmRsZUNvbXBsZXRlU3RlcEJ1dHRvbkNsaWNrKCl9KSkpfSxlLnByb3RvdHlwZS5jaGFuZ2VUZXh0QW5kRGlzYWJsZUNvbXBsZXRlQnV0dG9uSWZTdGVwQ29tcGxldGVkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMubmF2SXRlbXMuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW5kZXg9PT10LmN1cnJlbnRJbmRleH0pKSxuPUpTT04ucGFyc2UodGhpcy5jb21wbGV0ZVN0ZXBCdG4uZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zdGVwcGVyLWNvbXBsZXRlLXN0ZXAtYnRuXCIpKS5jb21wbGV0ZWRUZXh0O2UmJihlLmlzQ29tcGxldGVkPyh0aGlzLmNvbXBsZXRlU3RlcEJ0bi5pbm5lclRleHQ9bnx8dGhpcy5jb21wbGV0ZVN0ZXBCdG5EZWZhdWx0VGV4dCx0aGlzLmNvbXBsZXRlU3RlcEJ0bi5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLFwiZGlzYWJsZWRcIiksdGhpcy5jb21wbGV0ZVN0ZXBCdG4uY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpKToodGhpcy5jb21wbGV0ZVN0ZXBCdG4uaW5uZXJUZXh0PXRoaXMuY29tcGxldGVTdGVwQnRuRGVmYXVsdFRleHQsdGhpcy5jb21wbGV0ZVN0ZXBCdG4ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIiksdGhpcy5jb21wbGV0ZVN0ZXBCdG4uY2xhc3NMaXN0LnJlbW92ZShcImRpc2FibGVkXCIpKSl9LGUucHJvdG90eXBlLnNldENvbXBsZXRlSXRlbT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcy5uYXZJdGVtcy5maW5kKChmdW5jdGlvbihuKXtyZXR1cm4gbi5pbmRleD09PSh0fHxlLmN1cnJlbnRJbmRleCl9KSksbz10aGlzLmNvbnRlbnRJdGVtcy5maW5kKChmdW5jdGlvbihuKXtyZXR1cm4gbi5pbmRleD09PSh0fHxlLmN1cnJlbnRJbmRleCl9KSk7biYmbyYmKHRoaXMuc2V0Q29tcGxldGVJdGVtQWN0aW9ucyhuKSx0aGlzLnNldENvbXBsZXRlSXRlbUFjdGlvbnMobykpfSxlLnByb3RvdHlwZS5zZXRDb21wbGV0ZUl0ZW1BY3Rpb25zPWZ1bmN0aW9uKHQpe3QuaXNDb21wbGV0ZWQ9ITAsdC5lbC5jbGFzc0xpc3QuYWRkKFwic3VjY2Vzc1wiKX0sZS5wcm90b3R5cGUuc2hvd0NvbXBsZXRlU3RlcEJ1dHRvbj1mdW5jdGlvbigpe3RoaXMuY29tcGxldGVTdGVwQnRuJiYoMT09PXRoaXMuZ2V0VW5jb21wbGV0ZWRTdGVwcygpLmxlbmd0aD90aGlzLmNvbXBsZXRlU3RlcEJ0bi5zdHlsZS5kaXNwbGF5PVwibm9uZVwiOnRoaXMuY29tcGxldGVTdGVwQnRuLnN0eWxlLmRpc3BsYXk9XCJcIil9LGUucHJvdG90eXBlLmhhbmRsZUNvbXBsZXRlU3RlcEJ1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7dGhpcy5zZXRDb21wbGV0ZUl0ZW0oKSx0aGlzLmZpcmVFdmVudChcImNvbXBsZXRlXCIsdGhpcy5jdXJyZW50SW5kZXgpLCgwLHMuZGlzcGF0Y2gpKFwiY29tcGxldGUuaHMuc3RlcHBlclwiLHRoaXMuZWwsdGhpcy5jdXJyZW50SW5kZXgpLHRoaXMuaGFuZGxlTmV4dEJ1dHRvbkNsaWNrKCExKSx0aGlzLnNob3dGaW5pc2hCdXR0b24oKSx0aGlzLnNob3dDb21wbGV0ZVN0ZXBCdXR0b24oKSx0aGlzLmNoZWNrRm9yVGhlRmlyc3RTdGVwKCksdGhpcy5jb21wbGV0ZVN0ZXBCdG4mJnRoaXMuY2hhbmdlVGV4dEFuZERpc2FibGVDb21wbGV0ZUJ1dHRvbklmU3RlcENvbXBsZXRlZCgpLHRoaXMuc2hvd1NraXBCdXR0b24oKX0sZS5wcm90b3R5cGUuYnVpbGRGaW5pc2hCdXR0b249ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZmluaXNoQnRuJiYodGhpcy5pc0NvbXBsZXRlZCYmdGhpcy5zZXRDb21wbGV0ZWQoKSx0aGlzLmZpbmlzaEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5oYW5kbGVGaW5pc2hCdXR0b25DbGljaygpfSkpKX0sZS5wcm90b3R5cGUuc2V0Q29tcGxldGVkPWZ1bmN0aW9uKCl7dGhpcy5lbC5jbGFzc0xpc3QuYWRkKFwiY29tcGxldGVkXCIpfSxlLnByb3RvdHlwZS51bnNldENvbXBsZXRlZD1mdW5jdGlvbigpe3RoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcImNvbXBsZXRlZFwiKX0sZS5wcm90b3R5cGUuc2hvd0ZpbmlzaEJ1dHRvbj1mdW5jdGlvbigpe3RoaXMuZmluaXNoQnRuJiYoMT09PXRoaXMuZ2V0VW5jb21wbGV0ZWRTdGVwcygpLmxlbmd0aD90aGlzLmZpbmlzaEJ0bi5zdHlsZS5kaXNwbGF5PVwiXCI6dGhpcy5maW5pc2hCdG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIil9LGUucHJvdG90eXBlLmhhbmRsZUZpbmlzaEJ1dHRvbkNsaWNrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuZ2V0VW5jb21wbGV0ZWRTdGVwcygpLG49dGhpcy5nZXRVbmNvbXBsZXRlZFN0ZXBzKCEwKSxvPXRoaXMuY29udGVudEl0ZW1zLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlzRmluYWx9KSkuZWw7ZS5sZW5ndGgmJmUuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5pbmRleDtyZXR1cm4gdC5zZXRDb21wbGV0ZUl0ZW0obil9KSksdGhpcy5jdXJyZW50SW5kZXg9dGhpcy50b3RhbFN0ZXBzLHRoaXMuc2V0Q3VycmVudE5hdkl0ZW0oKSx0aGlzLmhpZGVBbGxDb250ZW50SXRlbXMoKTt2YXIgaT10aGlzLm5hdkl0ZW1zLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmluZGV4PT09dC5jdXJyZW50SW5kZXh9KSk7KGk/aS5lbDpudWxsKS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLG8uc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsdGhpcy5iYWNrQnRuJiYodGhpcy5iYWNrQnRuLnN0eWxlLmRpc3BsYXk9XCJub25lXCIpLHRoaXMubmV4dEJ0biYmKHRoaXMubmV4dEJ0bi5zdHlsZS5kaXNwbGF5PVwibm9uZVwiKSx0aGlzLnNraXBCdG4mJih0aGlzLnNraXBCdG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksdGhpcy5jb21wbGV0ZVN0ZXBCdG4mJih0aGlzLmNvbXBsZXRlU3RlcEJ0bi5zdHlsZS5kaXNwbGF5PVwibm9uZVwiKSx0aGlzLmZpbmlzaEJ0biYmKHRoaXMuZmluaXNoQnRuLnN0eWxlLmRpc3BsYXk9XCJub25lXCIpLHRoaXMucmVzZXRCdG4mJih0aGlzLnJlc2V0QnRuLnN0eWxlLmRpc3BsYXk9XCJcIiksbi5sZW5ndGg8PTEmJih0aGlzLmlzQ29tcGxldGVkPSEwLHRoaXMuc2V0Q29tcGxldGVkKCkpLHRoaXMuZmlyZUV2ZW50KFwiZmluaXNoXCIsdGhpcy5jdXJyZW50SW5kZXgpLCgwLHMuZGlzcGF0Y2gpKFwiZmluaXNoLmhzLnN0ZXBwZXJcIix0aGlzLmVsLHRoaXMuY3VycmVudEluZGV4KX0sZS5wcm90b3R5cGUuYnVpbGRSZXNldEJ1dHRvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5yZXNldEJ0biYmdGhpcy5yZXNldEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5oYW5kbGVSZXNldEJ1dHRvbkNsaWNrKCl9KSl9LGUucHJvdG90eXBlLmhhbmRsZVJlc2V0QnV0dG9uQ2xpY2s9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYmFja0J0biYmKHRoaXMuYmFja0J0bi5zdHlsZS5kaXNwbGF5PVwiXCIpLHRoaXMubmV4dEJ0biYmKHRoaXMubmV4dEJ0bi5zdHlsZS5kaXNwbGF5PVwiXCIpLHRoaXMuY29tcGxldGVTdGVwQnRuJiYodGhpcy5jb21wbGV0ZVN0ZXBCdG4uc3R5bGUuZGlzcGxheT1cIlwiLHRoaXMuY29tcGxldGVTdGVwQnRuLmlubmVyVGV4dD10aGlzLmNvbXBsZXRlU3RlcEJ0bkRlZmF1bHRUZXh0LHRoaXMuY29tcGxldGVTdGVwQnRuLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpLHRoaXMuY29tcGxldGVTdGVwQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKSksdGhpcy5yZXNldEJ0biYmKHRoaXMucmVzZXRCdG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksdGhpcy5uYXZJdGVtcy5mb3JFYWNoKChmdW5jdGlvbihlKXt2YXIgbj1lLmVsO2UuaXNTa2lwPSExLGUuaXNDb21wbGV0ZWQ9ITEsdC51bnNldEN1cnJlbnROYXZJdGVtQWN0aW9ucyhuKSxuLmNsYXNzTGlzdC5yZW1vdmUoXCJzdWNjZXNzXCIsXCJza2lwcGVkXCIpfSkpLHRoaXMuY29udGVudEl0ZW1zLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBuPWUuZWw7ZS5pc1NraXA9ITEsZS5pc0NvbXBsZXRlZD0hMSx0LnVuc2V0Q3VycmVudENvbnRlbnRJdGVtQWN0aW9ucyhuKSxuLmNsYXNzTGlzdC5yZW1vdmUoXCJzdWNjZXNzXCIsXCJza2lwcGVkXCIpfSkpLHRoaXMuY3VycmVudEluZGV4PTEsdGhpcy5zZXRDdXJyZW50TmF2SXRlbSgpLHRoaXMuc2V0Q3VycmVudENvbnRlbnRJdGVtKCksdGhpcy5zaG93RmluaXNoQnV0dG9uKCksdGhpcy5zaG93Q29tcGxldGVTdGVwQnV0dG9uKCksdGhpcy5jaGVja0ZvclRoZUZpcnN0U3RlcCgpLHRoaXMudW5zZXRDb21wbGV0ZWQoKSx0aGlzLmlzQ29tcGxldGVkPSExLHRoaXMuZmlyZUV2ZW50KFwicmVzZXRcIix0aGlzLmN1cnJlbnRJbmRleCksKDAscy5kaXNwYXRjaCkoXCJyZXNldC5ocy5zdGVwcGVyXCIsdGhpcy5lbCx0aGlzLmN1cnJlbnRJbmRleCl9LGUucHJvdG90eXBlLnNldFByb2Nlc3NlZE5hdkl0ZW09ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXROYXZJdGVtKHQpO2UmJnRoaXMuc2V0UHJvY2Vzc2VkTmF2SXRlbUFjdGlvbnMoZSl9LGUucHJvdG90eXBlLnVuc2V0UHJvY2Vzc2VkTmF2SXRlbT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldE5hdkl0ZW0odCk7ZSYmdGhpcy51bnNldFByb2Nlc3NlZE5hdkl0ZW1BY3Rpb25zKGUpfSxlLnByb3RvdHlwZS5nb1RvTmV4dD1mdW5jdGlvbigpe1wibGluZWFyXCI9PT10aGlzLm1vZGUmJnRoaXMuc2V0Q29tcGxldGVJdGVtKCksdGhpcy5oYW5kbGVOZXh0QnV0dG9uQ2xpY2soXCJsaW5lYXJcIiE9PXRoaXMubW9kZSksXCJsaW5lYXJcIj09PXRoaXMubW9kZSYmdGhpcy5jdXJyZW50SW5kZXg9PT10aGlzLnRvdGFsU3RlcHMmJih0aGlzLm5leHRCdG4mJih0aGlzLm5leHRCdG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksdGhpcy5jb21wbGV0ZVN0ZXBCdG4mJih0aGlzLmNvbXBsZXRlU3RlcEJ0bi5zdHlsZS5kaXNwbGF5PVwibm9uZVwiKSl9LGUucHJvdG90eXBlLmRpc2FibGVCdXR0b25zPWZ1bmN0aW9uKCl7dGhpcy5iYWNrQnRuJiZ0aGlzLnNldFRvRGlzYWJsZWQodGhpcy5iYWNrQnRuKSx0aGlzLm5leHRCdG4mJnRoaXMuc2V0VG9EaXNhYmxlZCh0aGlzLm5leHRCdG4pfSxlLnByb3RvdHlwZS5lbmFibGVCdXR0b25zPWZ1bmN0aW9uKCl7dGhpcy5iYWNrQnRuJiZ0aGlzLnNldFRvTm9uRGlzYWJsZWQodGhpcy5iYWNrQnRuKSx0aGlzLm5leHRCdG4mJnRoaXMuc2V0VG9Ob25EaXNhYmxlZCh0aGlzLm5leHRCdG4pfSxlLnByb3RvdHlwZS5zZXRFcnJvck5hdkl0ZW09ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXROYXZJdGVtKHQpO2UmJnRoaXMuc2V0RXJyb3JOYXZJdGVtQWN0aW9ucyhlKX0sZS5nZXRJbnN0YW5jZT1mdW5jdGlvbih0LGUpe3ZhciBuPXdpbmRvdy4kaHNTdGVwcGVyQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1N0ZXBwZXJDb2xsZWN0aW9ufHwod2luZG93LiRoc1N0ZXBwZXJDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtc3RlcHBlcl06bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbih0KXt3aW5kb3cuJGhzU3RlcHBlckNvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuKG51bGw9PT0obj1udWxsPT1lP3ZvaWQgMDplLmVsZW1lbnQpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmVsKT09PXR9KSl8fG5ldyBlKHQpfSkpfSxlfShuKDczNykuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7bC5hdXRvSW5pdCgpfSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuSFNTdGVwcGVyPWwpLGUuZGVmYXVsdD1sfSw5ODM6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTU3Ryb25nUGFzc3dvcmRcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1uKDk2OSksbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcztvLmlzT3BlbmVkPSExLG8uc3RyZW5ndGg9MCxvLnBhc3NlZFJ1bGVzPW5ldyBTZXQ7dmFyIGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXN0cm9uZy1wYXNzd29yZFwiKSxzPWk/SlNPTi5wYXJzZShpKTp7fSxsPXIocih7fSxzKSxuKTtyZXR1cm4gby50YXJnZXQ9KG51bGw9PWw/dm9pZCAwOmwudGFyZ2V0KT9cInN0cmluZ1wiPT10eXBlb2YobnVsbD09bD92b2lkIDA6bC50YXJnZXQpP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobC50YXJnZXQpOmwudGFyZ2V0Om51bGwsby5oaW50cz0obnVsbD09bD92b2lkIDA6bC5oaW50cyk/XCJzdHJpbmdcIj09dHlwZW9mKG51bGw9PWw/dm9pZCAwOmwuaGludHMpP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobC5oaW50cyk6bC5oaW50czpudWxsLG8uc3RyaXBDbGFzc2VzPShudWxsPT1sP3ZvaWQgMDpsLnN0cmlwQ2xhc3Nlcyl8fG51bGwsby5taW5MZW5ndGg9KG51bGw9PWw/dm9pZCAwOmwubWluTGVuZ3RoKXx8NixvLm1vZGU9KG51bGw9PWw/dm9pZCAwOmwubW9kZSl8fFwiZGVmYXVsdFwiLG8ucG9wb3ZlclNwYWNlPShudWxsPT1sP3ZvaWQgMDpsLnBvcG92ZXJTcGFjZSl8fDEwLG8uY2hlY2tzRXhjbHVkZT0obnVsbD09bD92b2lkIDA6bC5jaGVja3NFeGNsdWRlKXx8W10sby5hdmFpbGFibGVDaGVja3M9W1wibG93ZXJjYXNlXCIsXCJ1cHBlcmNhc2VcIixcIm51bWJlcnNcIixcInNwZWNpYWwtY2hhcmFjdGVyc1wiLFwibWluLWxlbmd0aFwiXS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiFvLmNoZWNrc0V4Y2x1ZGUuaW5jbHVkZXModCl9KSksby5zcGVjaWFsQ2hhcmFjdGVyc1NldD0obnVsbD09bD92b2lkIDA6bC5zcGVjaWFsQ2hhcmFjdGVyc1NldCl8fFwiIVxcXCIjJCUmJygpKissLS4vOjs8PT4/QFtcXFxcXFxcXFxcXFxdXl9ge3x9flwiLG8udGFyZ2V0JiZvLmluaXQoKSxvfXJldHVybiBpKGUsdCksZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzU3Ryb25nUGFzc3dvcmRDb2xsZWN0aW9uLHRoaXMpLHRoaXMuYXZhaWxhYmxlQ2hlY2tzLmxlbmd0aCYmdGhpcy5idWlsZCgpfSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5idWlsZFN0cmlwcygpLHRoaXMuaGludHMmJnRoaXMuYnVpbGRIaW50cygpLHRoaXMuc2V0U3RyZW5ndGgodGhpcy50YXJnZXQudmFsdWUpLHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLChmdW5jdGlvbihlKXt0LnNldFN0cmVuZ3RoKGUudGFyZ2V0LnZhbHVlKX0pKX0sZS5wcm90b3R5cGUuYnVpbGRTdHJpcHM9ZnVuY3Rpb24oKXtpZih0aGlzLmVsLmlubmVySFRNTD1cIlwiLHRoaXMuc3RyaXBDbGFzc2VzKWZvcih2YXIgdD0wO3Q8dGhpcy5hdmFpbGFibGVDaGVja3MubGVuZ3RoO3QrKyl7dmFyIGU9KDAscy5odG1sVG9FbGVtZW50KShcIjxkaXY+PC9kaXY+XCIpOygwLHMuY2xhc3NUb0NsYXNzTGlzdCkodGhpcy5zdHJpcENsYXNzZXMsZSksdGhpcy5lbC5hcHBlbmQoZSl9fSxlLnByb3RvdHlwZS5idWlsZEhpbnRzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLndlYWtuZXNzPXRoaXMuaGludHMucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXN0cm9uZy1wYXNzd29yZC1oaW50cy13ZWFrbmVzcy10ZXh0XVwiKXx8bnVsbCx0aGlzLnJ1bGVzPUFycmF5LmZyb20odGhpcy5oaW50cy5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtc3Ryb25nLXBhc3N3b3JkLWhpbnRzLXJ1bGUtdGV4dF1cIikpfHxudWxsLHRoaXMucnVsZXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG4sbz1lLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtc3Ryb25nLXBhc3N3b3JkLWhpbnRzLXJ1bGUtdGV4dFwiKTsobnVsbD09PShuPXQuY2hlY2tzRXhjbHVkZSl8fHZvaWQgMD09PW4/dm9pZCAwOm4uaW5jbHVkZXMobykpJiZlLnJlbW92ZSgpfSkpLHRoaXMud2Vha25lc3MmJnRoaXMuYnVpbGRXZWFrbmVzcygpLHRoaXMucnVsZXMmJnRoaXMuYnVpbGRSdWxlcygpLFwicG9wb3ZlclwiPT09dGhpcy5tb2RlJiYodGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsKGZ1bmN0aW9uKCl7dC5pc09wZW5lZD0hMCx0LmhpbnRzLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIiksdC5oaW50cy5jbGFzc0xpc3QuYWRkKFwiYmxvY2tcIiksdC5yZWNhbGN1bGF0ZURpcmVjdGlvbigpfSkpLHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsKGZ1bmN0aW9uKCl7dC5pc09wZW5lZD0hMSx0LmhpbnRzLmNsYXNzTGlzdC5yZW1vdmUoXCJibG9ja1wiLFwiYm90dG9tLWZ1bGxcIixcInRvcC1mdWxsXCIpLHQuaGludHMuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKSx0LmhpbnRzLnN0eWxlLm1hcmdpblRvcD1cIlwiLHQuaGludHMuc3R5bGUubWFyZ2luQm90dG9tPVwiXCJ9KSkpfSxlLnByb3RvdHlwZS5idWlsZFdlYWtuZXNzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNoZWNrU3RyZW5ndGgodGhpcy50YXJnZXQudmFsdWUpLHRoaXMuc2V0V2Vha25lc3NUZXh0KCksdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2V0V2Vha25lc3NUZXh0KCl9KSl9KSl9LGUucHJvdG90eXBlLmJ1aWxkUnVsZXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuc2V0UnVsZXNUZXh0KCksdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2V0UnVsZXNUZXh0KCl9KSl9KSl9LGUucHJvdG90eXBlLnNldFdlYWtuZXNzVGV4dD1mdW5jdGlvbigpe3ZhciB0PXRoaXMud2Vha25lc3MuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy1zdHJvbmctcGFzc3dvcmQtaGludHMtd2Vha25lc3MtdGV4dFwiKSxlPUpTT04ucGFyc2UodCk7dGhpcy53ZWFrbmVzcy50ZXh0Q29udGVudD1lW3RoaXMuc3RyZW5ndGhdfSxlLnByb3RvdHlwZS5zZXRSdWxlc1RleHQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMucnVsZXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXN0cm9uZy1wYXNzd29yZC1oaW50cy1ydWxlLXRleHRcIik7dC5jaGVja0lmUGFzc2VkKGUsdC5wYXNzZWRSdWxlcy5oYXMobikpfSkpfSxlLnByb3RvdHlwZS50b2dnbGVQb3BvdmVyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbC5xdWVyeVNlbGVjdG9yKFwiLnBvcG92ZXJcIik7dCYmdC5jbGFzc0xpc3QudG9nZ2xlKFwic2hvd1wiKX0sZS5wcm90b3R5cGUuY2hlY2tTdHJlbmd0aD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgU2V0LG49e2xvd2VyY2FzZTovW2Etel0rLyx1cHBlcmNhc2U6L1tBLVpdKy8sbnVtYmVyczovWzAtOV0rLyxcInNwZWNpYWwtY2hhcmFjdGVyc1wiOm5ldyBSZWdFeHAoXCJbXCIuY29uY2F0KHRoaXMuc3BlY2lhbENoYXJhY3RlcnNTZXQsXCJdXCIpKX0sbz0wO3JldHVybiB0aGlzLmF2YWlsYWJsZUNoZWNrcy5pbmNsdWRlcyhcImxvd2VyY2FzZVwiKSYmdC5tYXRjaChuLmxvd2VyY2FzZSkmJihvKz0xLGUuYWRkKFwibG93ZXJjYXNlXCIpKSx0aGlzLmF2YWlsYWJsZUNoZWNrcy5pbmNsdWRlcyhcInVwcGVyY2FzZVwiKSYmdC5tYXRjaChuLnVwcGVyY2FzZSkmJihvKz0xLGUuYWRkKFwidXBwZXJjYXNlXCIpKSx0aGlzLmF2YWlsYWJsZUNoZWNrcy5pbmNsdWRlcyhcIm51bWJlcnNcIikmJnQubWF0Y2gobi5udW1iZXJzKSYmKG8rPTEsZS5hZGQoXCJudW1iZXJzXCIpKSx0aGlzLmF2YWlsYWJsZUNoZWNrcy5pbmNsdWRlcyhcInNwZWNpYWwtY2hhcmFjdGVyc1wiKSYmdC5tYXRjaChuW1wic3BlY2lhbC1jaGFyYWN0ZXJzXCJdKSYmKG8rPTEsZS5hZGQoXCJzcGVjaWFsLWNoYXJhY3RlcnNcIikpLHRoaXMuYXZhaWxhYmxlQ2hlY2tzLmluY2x1ZGVzKFwibWluLWxlbmd0aFwiKSYmdC5sZW5ndGg+PXRoaXMubWluTGVuZ3RoJiYobys9MSxlLmFkZChcIm1pbi1sZW5ndGhcIikpLHQubGVuZ3RofHwobz0wKSxvPT09dGhpcy5hdmFpbGFibGVDaGVja3MubGVuZ3RoP3RoaXMuZWwuY2xhc3NMaXN0LmFkZChcImFjY2VwdGVkXCIpOnRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcImFjY2VwdGVkXCIpLHRoaXMuc3RyZW5ndGg9byx0aGlzLnBhc3NlZFJ1bGVzPWUse3N0cmVuZ3RoOnRoaXMuc3RyZW5ndGgscnVsZXM6dGhpcy5wYXNzZWRSdWxlc319LGUucHJvdG90eXBlLmNoZWNrSWZQYXNzZWQ9ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0hMSk7dmFyIG49dC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtY2hlY2tdXCIpLG89dC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtdW5jaGVja11cIik7ZT8odC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpLG4uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKSxvLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIikpOih0LmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIiksbi5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpLG8uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKSl9LGUucHJvdG90eXBlLnNldFN0cmVuZ3RoPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hlY2tTdHJlbmd0aCh0KSxuPWUuc3RyZW5ndGgsbz17c3RyZW5ndGg6bixydWxlczplLnJ1bGVzfTt0aGlzLmhpZGVTdHJpcHMobiksdGhpcy5maXJlRXZlbnQoXCJjaGFuZ2VcIixvKSwoMCxzLmRpc3BhdGNoKShcImNoYW5nZS5ocy5zdHJvbmdQYXNzd29yZFwiLHRoaXMuZWwsbyl9LGUucHJvdG90eXBlLmhpZGVTdHJpcHM9ZnVuY3Rpb24odCl7QXJyYXkuZnJvbSh0aGlzLmVsLmNoaWxkcmVuKS5mb3JFYWNoKChmdW5jdGlvbihlLG4pe248dD9lLmNsYXNzTGlzdC5hZGQoXCJwYXNzZWRcIik6ZS5jbGFzc0xpc3QucmVtb3ZlKFwicGFzc2VkXCIpfSkpfSxlLnByb3RvdHlwZS5yZWNhbGN1bGF0ZURpcmVjdGlvbj1mdW5jdGlvbigpeygwLHMuaXNFbm91Z2hTcGFjZSkodGhpcy5oaW50cyx0aGlzLnRhcmdldCxcImJvdHRvbVwiLHRoaXMucG9wb3ZlclNwYWNlKT8odGhpcy5oaW50cy5jbGFzc0xpc3QucmVtb3ZlKFwiYm90dG9tLWZ1bGxcIiksdGhpcy5oaW50cy5jbGFzc0xpc3QuYWRkKFwidG9wLWZ1bGxcIiksdGhpcy5oaW50cy5zdHlsZS5tYXJnaW5Cb3R0b209XCJcIix0aGlzLmhpbnRzLnN0eWxlLm1hcmdpblRvcD1cIlwiLmNvbmNhdCh0aGlzLnBvcG92ZXJTcGFjZSxcInB4XCIpKToodGhpcy5oaW50cy5jbGFzc0xpc3QucmVtb3ZlKFwidG9wLWZ1bGxcIiksdGhpcy5oaW50cy5jbGFzc0xpc3QuYWRkKFwiYm90dG9tLWZ1bGxcIiksdGhpcy5oaW50cy5zdHlsZS5tYXJnaW5Ub3A9XCJcIix0aGlzLmhpbnRzLnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiLmNvbmNhdCh0aGlzLnBvcG92ZXJTcGFjZSxcInB4XCIpKX0sZS5nZXRJbnN0YW5jZT1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cuJGhzU3Ryb25nUGFzc3dvcmRDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtyZXR1cm4gZT9lLmVsZW1lbnQ6bnVsbH0sZS5hdXRvSW5pdD1mdW5jdGlvbigpe3dpbmRvdy4kaHNTdHJvbmdQYXNzd29yZENvbGxlY3Rpb258fCh3aW5kb3cuJGhzU3Ryb25nUGFzc3dvcmRDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtc3Ryb25nLXBhc3N3b3JkXTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2lmKCF3aW5kb3cuJGhzU3Ryb25nUGFzc3dvcmRDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpKXt2YXIgbj10LmdldEF0dHJpYnV0ZShcImRhdGEtaHMtc3Ryb25nLXBhc3N3b3JkXCIpLG89bj9KU09OLnBhcnNlKG4pOnt9O25ldyBlKHQsbyl9fSkpfSxlfShuKDczNykuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7bC5hdXRvSW5pdCgpfSkpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwoZnVuY3Rpb24oKXtpZighd2luZG93LiRoc1N0cm9uZ1Bhc3N3b3JkQ29sbGVjdGlvbilyZXR1cm4hMTt2YXIgdD13aW5kb3cuJGhzU3Ryb25nUGFzc3dvcmRDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuaXNPcGVuZWR9KSk7dCYmdC5lbGVtZW50LnJlY2FsY3VsYXRlRGlyZWN0aW9uKCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1N0cm9uZ1Bhc3N3b3JkPWwpLGUuZGVmYXVsdD1sfSw5NDk6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTVGFic1xuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHI9big5NjkpLHM9big3MzcpLGw9bigxOTApLGE9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4sbyl7dmFyIGk9dC5jYWxsKHRoaXMsZSxuLG8pfHx0aGlzO3JldHVybiBpLnRvZ2dsZXM9aS5lbC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtdGFiXVwiKSxpLmV4dHJhVG9nZ2xlSWQ9aS5lbC5nZXRBdHRyaWJ1dGUoXCJocy1kYXRhLXRhYi1zZWxlY3RcIiksaS5leHRyYVRvZ2dsZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGkuZXh0cmFUb2dnbGVJZCksaS5jdXJyZW50PUFycmF5LmZyb20oaS50b2dnbGVzKS5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdC5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIil9KSksaS5jdXJyZW50Q29udGVudElkPWkuY3VycmVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXRhYlwiKSxpLmN1cnJlbnRDb250ZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaS5jdXJyZW50Q29udGVudElkKSxpLnByZXY9bnVsbCxpLnByZXZDb250ZW50SWQ9bnVsbCxpLnByZXZDb250ZW50PW51bGwsaS5pbml0KCksaX1yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzVGFic0NvbGxlY3Rpb24sdGhpcyksdGhpcy50b2dnbGVzLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQub3BlbihlKX0pKX0pKSx0aGlzLmV4dHJhVG9nZ2xlJiZ0aGlzLmV4dHJhVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwoZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2hhbmdlKGUpfSkpfSxlLnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKHQpe3RoaXMucHJldj10aGlzLmN1cnJlbnQsdGhpcy5wcmV2Q29udGVudElkPXRoaXMuY3VycmVudENvbnRlbnRJZCx0aGlzLnByZXZDb250ZW50PXRoaXMuY3VycmVudENvbnRlbnQsdGhpcy5jdXJyZW50PXQsdGhpcy5jdXJyZW50Q29udGVudElkPXRoaXMuY3VycmVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXRhYlwiKSx0aGlzLmN1cnJlbnRDb250ZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5jdXJyZW50Q29udGVudElkKSx0aGlzLnByZXYuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSx0aGlzLnByZXZDb250ZW50LmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIiksdGhpcy5jdXJyZW50LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIiksdGhpcy5jdXJyZW50Q29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpLHRoaXMuZmlyZUV2ZW50KFwiY2hhbmdlXCIse2VsOnQscHJldjp0aGlzLnByZXZDb250ZW50SWQsY3VycmVudDp0aGlzLmN1cnJlbnRDb250ZW50SWR9KSwoMCxyLmRpc3BhdGNoKShcImNoYW5nZS5ocy50YWJcIix0LHtlbDp0LHByZXY6dGhpcy5wcmV2Q29udGVudElkLGN1cnJlbnQ6dGhpcy5jdXJyZW50Q29udGVudElkfSl9LGUucHJvdG90eXBlLmNoYW5nZT1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1ocy10YWI9XCInLmNvbmNhdCh0LnRhcmdldC52YWx1ZSwnXCJdJykpO2UmJmUuY2xpY2soKX0sZS5nZXRJbnN0YW5jZT1mdW5jdGlvbih0LGUpe3ZhciBuPXdpbmRvdy4kaHNUYWJzQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1RhYnNDb2xsZWN0aW9ufHwod2luZG93LiRoc1RhYnNDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbcm9sZT1cInRhYmxpc3RcIl06bm90KHNlbGVjdCk6bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KScpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3dpbmRvdy4kaHNUYWJzQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSksd2luZG93LiRoc1RhYnNDb2xsZWN0aW9uJiZkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5hY2Nlc3NpYmlsaXR5KHQpfSkpfSxlLm9wZW49ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc1RhYnNDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBBcnJheS5mcm9tKGUuZWxlbWVudC50b2dnbGVzKS5pbmNsdWRlcyhcInN0cmluZ1wiPT10eXBlb2YgdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpOnQpfSkpLG49QXJyYXkuZnJvbShlLmVsZW1lbnQudG9nZ2xlcykuZmluZCgoZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtuJiYhbi5jbGFzc0xpc3QuY29udGFpbnMoXCJhY3RpdmVcIikmJmUuZWxlbWVudC5vcGVuKG4pfSxlLmFjY2Vzc2liaWxpdHk9ZnVuY3Rpb24odCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXRhYl06Zm9jdXNcIik7aWYoZSYmbC5UQUJTX0FDQ0VTU0lCSUxJVFlfS0VZX1NFVC5pbmNsdWRlcyh0LmNvZGUpJiYhdC5tZXRhS2V5KXt2YXIgbj1lLmNsb3Nlc3QoJ1tyb2xlPVwidGFibGlzdFwiXScpLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtdGFicy12ZXJ0aWNhbFwiKTtzd2l0Y2godC5wcmV2ZW50RGVmYXVsdCgpLHQuY29kZSl7Y2FzZVwidHJ1ZVwiPT09bj9cIkFycm93VXBcIjpcIkFycm93TGVmdFwiOnRoaXMub25BcnJvdygpO2JyZWFrO2Nhc2VcInRydWVcIj09PW4/XCJBcnJvd0Rvd25cIjpcIkFycm93UmlnaHRcIjp0aGlzLm9uQXJyb3coITEpO2JyZWFrO2Nhc2VcIkhvbWVcIjp0aGlzLm9uU3RhcnRFbmQoKTticmVhaztjYXNlXCJFbmRcIjp0aGlzLm9uU3RhcnRFbmQoITEpfX19LGUub25BcnJvdz1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0hMCk7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWhzLXRhYl06Zm9jdXNcIikuY2xvc2VzdCgnW3JvbGU9XCJ0YWJsaXN0XCJdJyksbj13aW5kb3cuJGhzVGFic0NvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbD09PWV9KSk7aWYobil7dmFyIG89dD9BcnJheS5mcm9tKG4uZWxlbWVudC50b2dnbGVzKS5yZXZlcnNlKCk6QXJyYXkuZnJvbShuLmVsZW1lbnQudG9nZ2xlcyksaT1vLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50PT09dH0pKSxyPW8uZmluZEluZGV4KChmdW5jdGlvbih0KXtyZXR1cm4gdD09PWl9KSk7b1tyPXIrMTxvLmxlbmd0aD9yKzE6MF0uZm9jdXMoKSxvW3JdLmNsaWNrKCl9fSxlLm9uU3RhcnRFbmQ9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9ITApO3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1ocy10YWJdOmZvY3VzXCIpLmNsb3Nlc3QoJ1tyb2xlPVwidGFibGlzdFwiXScpLG49d2luZG93LiRoc1RhYnNDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVsZW1lbnQuZWw9PT1lfSkpO2lmKG4pe3ZhciBvPXQ/QXJyYXkuZnJvbShuLmVsZW1lbnQudG9nZ2xlcyk6QXJyYXkuZnJvbShuLmVsZW1lbnQudG9nZ2xlcykucmV2ZXJzZSgpO28ubGVuZ3RoJiYob1swXS5mb2N1cygpLG9bMF0uY2xpY2soKSl9fSxlLm9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz13aW5kb3cuJGhzVGFic0NvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIEFycmF5LmZyb20odC5lbGVtZW50LnRvZ2dsZXMpLmluY2x1ZGVzKFwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZSl9KSk7byYmKG8uZWxlbWVudC5ldmVudHNbdF09bil9LGV9KHMuZGVmYXVsdCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7YS5hdXRvSW5pdCgpfSkpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3cuSFNUYWJzPWEpLGUuZGVmYXVsdD1hfSw1NTc6ZnVuY3Rpb24odCxlLG4pe3ZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbz10LmNhbGwodGhpcyxlLG4pfHx0aGlzLGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXRoZW1lLXN3aXRjaFwiKSxzPWk/SlNPTi5wYXJzZShpKTp7fSxsPXIocih7fSxzKSxuKTtyZXR1cm4gby50aGVtZT0obnVsbD09bD92b2lkIDA6bC50aGVtZSl8fGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiaHNfdGhlbWVcIil8fFwiZGVmYXVsdFwiLG8udGhlbWVTZXQ9W1wibGlnaHRcIixcImRhcmtcIixcImRlZmF1bHRcIl0sby5pbml0KCksb31yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc1RoZW1lU3dpdGNoQ29sbGVjdGlvbix0aGlzKSxcImRlZmF1bHRcIiE9PXRoaXMudGhlbWUmJnRoaXMuc2V0QXBwZWFyYW5jZSgpfSxlLnByb3RvdHlwZS5zZXRSZXNldFN0eWxlcz1mdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtyZXR1cm4gdC5pbm5lclRleHQ9XCIqe3RyYW5zaXRpb246IHVuc2V0ICFpbXBvcnRhbnQ7fVwiLHQuc2V0QXR0cmlidXRlKFwiZGF0YS1ocy1hcHBlYXJhbmNlLW9ubG9hZC1zdHlsZXNcIixcIlwiKSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHQpLHR9LGUucHJvdG90eXBlLmFkZFN5c3RlbVRoZW1lT2JzZXJ2ZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3dpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsKGZ1bmN0aW9uKGUpe2UubWF0Y2hlcz90LnNldEFwcGVhcmFuY2UoXCJkYXJrXCIsITEpOnQuc2V0QXBwZWFyYW5jZShcImRlZmF1bHRcIiwhMSl9KSl9LGUucHJvdG90eXBlLnJlbW92ZVN5c3RlbVRoZW1lT2JzZXJ2ZXI9ZnVuY3Rpb24oKXt3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikucmVtb3ZlRXZlbnRMaXN0ZW5lcn0sZS5wcm90b3R5cGUuc2V0QXBwZWFyYW5jZT1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09dCYmKHQ9dGhpcy50aGVtZSksdm9pZCAwPT09ZSYmKGU9ITApLHZvaWQgMD09PW4mJihuPSEwKTt2YXIgbz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaHRtbFwiKSxpPXRoaXMuc2V0UmVzZXRTdHlsZXMoKTtlJiZsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImhzX3RoZW1lXCIsdCksXCJhdXRvXCI9PT10JiYodD13aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikubWF0Y2hlcz9cImRhcmtcIjpcImRlZmF1bHRcIiksby5jbGFzc0xpc3QucmVtb3ZlKFwibGlnaHRcIixcImRhcmtcIixcImRlZmF1bHRcIixcImF1dG9cIiksby5jbGFzc0xpc3QuYWRkKHQpLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7cmV0dXJuIGkucmVtb3ZlKCl9KSksbiYmd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwib24taHMtYXBwZWFyYW5jZS1jaGFuZ2VcIix7ZGV0YWlsOnR9KSl9LGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc1RoZW1lU3dpdGNoQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIGU/ZS5lbGVtZW50Om51bGx9LGUuYXV0b0luaXQ9ZnVuY3Rpb24oKXt3aW5kb3cuJGhzVGhlbWVTd2l0Y2hDb2xsZWN0aW9ufHwod2luZG93LiRoc1RoZW1lU3dpdGNoQ29sbGVjdGlvbj1bXSk7dmFyIHQ9ZnVuY3Rpb24odCl7XCJhdXRvXCI9PT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImhzX3RoZW1lXCIpP3QuYWRkU3lzdGVtVGhlbWVPYnNlcnZlcigpOnQucmVtb3ZlU3lzdGVtVGhlbWVPYnNlcnZlcigpfTtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtaHMtdGhlbWUtc3dpdGNoXTpub3QoLi0tcHJldmVudC1vbi1sb2FkLWluaXQpXCIpLmZvckVhY2goKGZ1bmN0aW9uKG4pe2lmKCF3aW5kb3cuJGhzVGhlbWVTd2l0Y2hDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybihudWxsPT09KGU9bnVsbD09dD92b2lkIDA6dC5lbGVtZW50KXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5lbCk9PT1ufSkpKXt2YXIgbz1uZXcgZShuKTtvLmVsLmNoZWNrZWQ9XCJkYXJrXCI9PT1vLnRoZW1lLHQobyksby5lbC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsKGZ1bmN0aW9uKGUpe3ZhciBuPWUudGFyZ2V0LmNoZWNrZWQ/XCJkYXJrXCI6XCJkZWZhdWx0XCI7by5zZXRBcHBlYXJhbmNlKG4pLHQobyl9KSl9fSkpLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy10aGVtZS1jbGljay12YWx1ZV06bm90KC4tLXByZXZlbnQtb24tbG9hZC1pbml0KVwiKS5mb3JFYWNoKChmdW5jdGlvbihuKXt2YXIgbz1uLmdldEF0dHJpYnV0ZShcImRhdGEtaHMtdGhlbWUtY2xpY2stdmFsdWVcIiksaT1uZXcgZShuKTt0KGkpLGkuZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7aS5zZXRBcHBlYXJhbmNlKG8pLHQoaSl9KSl9KSl9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtzLmF1dG9Jbml0KCl9KSksd2luZG93LiRoc1RoZW1lU3dpdGNoQ29sbGVjdGlvbiYmd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbi1ocy1hcHBlYXJhbmNlLWNoYW5nZVwiLChmdW5jdGlvbih0KXt3aW5kb3cuJGhzVGhlbWVTd2l0Y2hDb2xsZWN0aW9uLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UuZWxlbWVudC5lbC5jaGVja2VkPVwiZGFya1wiPT09dC5kZXRhaWx9KSl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1RoZW1lU3dpdGNoPXMpLGUuZGVmYXVsdD1zfSw4NzpmdW5jdGlvbih0LGUsbil7XG4vKlxuICogSFNUb2dnbGVDb3VudFxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgbz10LmNhbGwodGhpcyxlLG4pfHx0aGlzLGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWhzLXRvZ2dsZS1jb3VudFwiKSxzPWk/SlNPTi5wYXJzZShpKTp7fSxsPXIocih7fSxzKSxuKTtyZXR1cm4gby50YXJnZXQ9KG51bGw9PWw/dm9pZCAwOmwudGFyZ2V0KT9cInN0cmluZ1wiPT10eXBlb2YobnVsbD09bD92b2lkIDA6bC50YXJnZXQpP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobC50YXJnZXQpOmwudGFyZ2V0Om51bGwsby5taW49KG51bGw9PWw/dm9pZCAwOmwubWluKXx8MCxvLm1heD0obnVsbD09bD92b2lkIDA6bC5tYXgpfHwwLG8uZHVyYXRpb249KG51bGw9PWw/dm9pZCAwOmwuZHVyYXRpb24pfHw3MDAsby5pc0NoZWNrZWQ9by50YXJnZXQuY2hlY2tlZHx8ITEsby50YXJnZXQmJm8uaW5pdCgpLG99cmV0dXJuIGkoZSx0KSxlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNyZWF0ZUNvbGxlY3Rpb24od2luZG93LiRoc1RvZ2dsZUNvdW50Q29sbGVjdGlvbix0aGlzKSx0aGlzLmlzQ2hlY2tlZCYmKHRoaXMuZWwuaW5uZXJUZXh0PVN0cmluZyh0aGlzLm1heCkpLHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwoZnVuY3Rpb24oKXt0LmlzQ2hlY2tlZD0hdC5pc0NoZWNrZWQsdC50b2dnbGUoKX0pKX0sZS5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKCl7dGhpcy5pc0NoZWNrZWQ/dGhpcy5jb3VudFVwKCk6dGhpcy5jb3VudERvd24oKX0sZS5wcm90b3R5cGUuYW5pbWF0ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsbz0wLGk9ZnVuY3Rpb24ocil7b3x8KG89cik7dmFyIHM9TWF0aC5taW4oKHItbykvbi5kdXJhdGlvbiwxKTtuLmVsLmlubmVyVGV4dD1TdHJpbmcoTWF0aC5mbG9vcihzKihlLXQpK3QpKSxzPDEmJndpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoaSl9O3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoaSl9LGUucHJvdG90eXBlLmNvdW50VXA9ZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGUodGhpcy5taW4sdGhpcy5tYXgpfSxlLnByb3RvdHlwZS5jb3VudERvd249ZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGUodGhpcy5tYXgsdGhpcy5taW4pfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc1RvZ2dsZUNvdW50Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1RvZ2dsZUNvdW50Q29sbGVjdGlvbnx8KHdpbmRvdy4kaHNUb2dnbGVDb3VudENvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy10b2dnbGUtY291bnRdOm5vdCguLS1wcmV2ZW50LW9uLWxvYWQtaW5pdClcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7d2luZG93LiRoc1RvZ2dsZUNvdW50Q29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSl9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtzLmF1dG9Jbml0KCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1RvZ2dsZUNvdW50PXMpLGUuZGVmYXVsdD1zfSwzNjY6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTVG9nZ2xlUGFzc3dvcmRcbiAqIEB2ZXJzaW9uOiAyLjEuMFxuICogQGF1dGhvcjogSFRNTFN0cmVhbVxuICogQGxpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9wcmVsaW5lLmNvL2RvY3MvbGljZW5zZS5odG1sKVxuICogQ29weXJpZ2h0IDIwMjMgSFRNTFN0cmVhbVxuICovXG52YXIgbyxpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobz1mdW5jdGlvbih0LGUpe3JldHVybiBvPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0sbyh0LGUpfSxmdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiK1N0cmluZyhlKStcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9byh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX0pLHI9dGhpcyYmdGhpcy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gcj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIGUsbj0xLG89YXJndW1lbnRzLmxlbmd0aDtuPG87bisrKWZvcih2YXIgaSBpbiBlPWFyZ3VtZW50c1tuXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxpKSYmKHRbaV09ZVtpXSk7cmV0dXJuIHR9LHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcz1uKDk2OSksbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIG89dC5jYWxsKHRoaXMsZSxuKXx8dGhpcyxpPWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1ocy10b2dnbGUtcGFzc3dvcmRcIiksbD1pP0pTT04ucGFyc2UoaSk6e30sYT1yKHIoe30sbCksbiksYz1bXTsobnVsbD09YT92b2lkIDA6YS50YXJnZXQpJiZcInN0cmluZ1wiPT10eXBlb2YobnVsbD09YT92b2lkIDA6YS50YXJnZXQpPyhudWxsPT1hP3ZvaWQgMDphLnRhcmdldC5zcGxpdChcIixcIikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe2MucHVzaChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHQpKX0pKToobnVsbD09YT92b2lkIDA6YS50YXJnZXQpJiZcIm9iamVjdFwiPT10eXBlb2YobnVsbD09YT92b2lkIDA6YS50YXJnZXQpP2EudGFyZ2V0LmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiBjLnB1c2goZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KSl9KSk6YS50YXJnZXQuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGMucHVzaCh0KX0pKTtyZXR1cm4gby50YXJnZXQ9YyxvLmlzU2hvd249ISFvLmVsLmhhc0F0dHJpYnV0ZShcInR5cGVcIikmJm8uZWwuY2hlY2tlZCxvLmV2ZW50VHlwZT0oMCxzLmlzRm9ybUVsZW1lbnQpKG8uZWwpP1wiY2hhbmdlXCI6XCJjbGlja1wiLG8uaXNNdWx0aXBsZT1vLnRhcmdldC5sZW5ndGg+MSYmISFvLmVsLmNsb3Nlc3QoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmQtZ3JvdXBdXCIpLG8udGFyZ2V0JiZvLmluaXQoKSxvfXJldHVybiBpKGUsdCksZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5jcmVhdGVDb2xsZWN0aW9uKHdpbmRvdy4kaHNUb2dnbGVQYXNzd29yZENvbGxlY3Rpb24sdGhpcyksdGhpcy5pc1Nob3duP3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpLHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLmV2ZW50VHlwZSwoZnVuY3Rpb24oKXt0LmlzU2hvd24/dC5oaWRlKCk6dC5zaG93KCksdC5maXJlRXZlbnQoXCJ0b2dnbGVcIix0LnRhcmdldCksKDAscy5kaXNwYXRjaCkoXCJ0b2dnbGUuaHMudG9nZ2xlLXNlbGVjdFwiLHQuZWwsdC50YXJnZXQpfSkpfSxlLnByb3RvdHlwZS5nZXRNdWx0aXBsZVRvZ2dsZXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLmNsb3Nlc3QoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmQtZ3JvdXBdXCIpLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmRdXCIpLG49W107cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7bi5wdXNoKGUuZ2V0SW5zdGFuY2UodCkpfSkpLG59LGUucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXt0aGlzLmlzTXVsdGlwbGU/KHRoaXMuZ2V0TXVsdGlwbGVUb2dnbGVzKCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuISF0JiYodC5pc1Nob3duPSEwKX0pKSx0aGlzLmVsLmNsb3Nlc3QoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmQtZ3JvdXBdXCIpLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIikpOih0aGlzLmlzU2hvd249ITAsdGhpcy5lbC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpKTt0aGlzLnRhcmdldC5mb3JFYWNoKChmdW5jdGlvbih0KXt0LnR5cGU9XCJ0ZXh0XCJ9KSl9LGUucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oKXt0aGlzLmlzTXVsdGlwbGU/KHRoaXMuZ2V0TXVsdGlwbGVUb2dnbGVzKCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuISF0JiYodC5pc1Nob3duPSExKX0pKSx0aGlzLmVsLmNsb3Nlc3QoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmQtZ3JvdXBdXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIikpOih0aGlzLmlzU2hvd249ITEsdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpKTt0aGlzLnRhcmdldC5mb3JFYWNoKChmdW5jdGlvbih0KXt0LnR5cGU9XCJwYXNzd29yZFwifSkpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49d2luZG93LiRoc1RvZ2dsZVBhc3N3b3JkQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1RvZ2dsZVBhc3N3b3JkQ29sbGVjdGlvbnx8KHdpbmRvdy4kaHNUb2dnbGVQYXNzd29yZENvbGxlY3Rpb249W10pLGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1ocy10b2dnbGUtcGFzc3dvcmRdOm5vdCguLS1wcmV2ZW50LW9uLWxvYWQtaW5pdClcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7d2luZG93LiRoc1RvZ2dsZVBhc3N3b3JkQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4obnVsbD09PShuPW51bGw9PWU/dm9pZCAwOmUuZWxlbWVudCl8fHZvaWQgMD09PW4/dm9pZCAwOm4uZWwpPT09dH0pKXx8bmV3IGUodCl9KSl9LGV9KG4oNzM3KS5kZWZhdWx0KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtsLmF1dG9Jbml0KCl9KSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1RvZ2dsZVBhc3N3b3JkPWwpLGUuZGVmYXVsdD1sfSw2Nzk6ZnVuY3Rpb24odCxlLG4pe1xuLypcbiAqIEhTVG9vbHRpcFxuICogQHZlcnNpb246IDIuMS4wXG4gKiBAYXV0aG9yOiBIVE1MU3RyZWFtXG4gKiBAbGljZW5zZTogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL3ByZWxpbmUuY28vZG9jcy9saWNlbnNlLmh0bWwpXG4gKiBDb3B5cmlnaHQgMjAyMyBIVE1MU3RyZWFtXG4gKi9cbnZhciBvLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsbikmJih0W25dPWVbbl0pfSxvKHQsZSl9LGZ1bmN0aW9uKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfSkscj10aGlzJiZ0aGlzLl9fYXNzaWdufHxmdW5jdGlvbigpe3JldHVybiByPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEsbz1hcmd1bWVudHMubGVuZ3RoO248bztuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH0sci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHM9dGhpcyYmdGhpcy5fX3NwcmVhZEFycmF5fHxmdW5jdGlvbih0LGUsbil7aWYobnx8Mj09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKHZhciBvLGk9MCxyPWUubGVuZ3RoO2k8cjtpKyspIW8mJmkgaW4gZXx8KG98fChvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsMCxpKSksb1tpXT1lW2ldKTtyZXR1cm4gdC5jb25jYXQob3x8QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbD1uKDQ5MiksYT1uKDk2OSksYz1uKDczNyksdT1uKDE5MCksZD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbixvKXt2YXIgaT10LmNhbGwodGhpcyxlLG4sbyl8fHRoaXM7cmV0dXJuIGkuZWwmJihpLnRvZ2dsZT1pLmVsLnF1ZXJ5U2VsZWN0b3IoXCIuaHMtdG9vbHRpcC10b2dnbGVcIil8fGkuZWwsaS5jb250ZW50PWkuZWwucXVlcnlTZWxlY3RvcihcIi5ocy10b29sdGlwLWNvbnRlbnRcIiksaS5ldmVudE1vZGU9KDAsYS5nZXRDbGFzc1Byb3BlcnR5KShpLmVsLFwiLS10cmlnZ2VyXCIpfHxcImhvdmVyXCIsaS5wcmV2ZW50UG9wcGVyPSgwLGEuZ2V0Q2xhc3NQcm9wZXJ0eSkoaS5lbCxcIi0tcHJldmVudC1wb3BwZXJcIixcImZhbHNlXCIpLGkucGxhY2VtZW50PSgwLGEuZ2V0Q2xhc3NQcm9wZXJ0eSkoaS5lbCxcIi0tcGxhY2VtZW50XCIpLGkuc3RyYXRlZ3k9KDAsYS5nZXRDbGFzc1Byb3BlcnR5KShpLmVsLFwiLS1zdHJhdGVneVwiKSksaS5lbCYmaS50b2dnbGUmJmkuY29udGVudCYmaS5pbml0KCksaX1yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY3JlYXRlQ29sbGVjdGlvbih3aW5kb3cuJGhzVG9vbHRpcENvbGxlY3Rpb24sdGhpcyksXCJjbGlja1wiPT09dGhpcy5ldmVudE1vZGU/dGhpcy50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuY2xpY2soKX0pKTpcImZvY3VzXCI9PT10aGlzLmV2ZW50TW9kZT90aGlzLnRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5mb2N1cygpfSkpOlwiaG92ZXJcIj09PXRoaXMuZXZlbnRNb2RlJiYodGhpcy50b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5lbnRlcigpfSkpLHRoaXMudG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQubGVhdmUoKX0pKSksXCJmYWxzZVwiPT09dGhpcy5wcmV2ZW50UG9wcGVyJiZ0aGlzLmJ1aWxkUG9wcGVyKCl9LGUucHJvdG90eXBlLmVudGVyPWZ1bmN0aW9uKCl7dGhpcy5zaG93KCl9LGUucHJvdG90eXBlLmxlYXZlPWZ1bmN0aW9uKCl7dGhpcy5oaWRlKCl9LGUucHJvdG90eXBlLmNsaWNrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmVsLmNsYXNzTGlzdC5jb250YWlucyhcInNob3dcIikpcmV0dXJuITE7dGhpcy5zaG93KCk7dmFyIGU9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuaGlkZSgpLHQudG9nZ2xlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGUsITApLHQudG9nZ2xlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJibHVyXCIsZSwhMCl9KSl9O3RoaXMudG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGUsITApLHRoaXMudG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsZSwhMCl9LGUucHJvdG90eXBlLmZvY3VzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLnNob3coKTt2YXIgZT1mdW5jdGlvbigpe3QuaGlkZSgpLHQudG9nZ2xlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJibHVyXCIsZSwhMCl9O3RoaXMudG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsZSwhMCl9LGUucHJvdG90eXBlLmJ1aWxkUG9wcGVyPWZ1bmN0aW9uKCl7dGhpcy5wb3BwZXJJbnN0YW5jZT0oMCxsLmNyZWF0ZVBvcHBlcikodGhpcy50b2dnbGUsdGhpcy5jb250ZW50LHtwbGFjZW1lbnQ6dS5QT1NJVElPTlNbdGhpcy5wbGFjZW1lbnRdfHxcInRvcFwiLHN0cmF0ZWd5OnRoaXMuc3RyYXRlZ3l8fFwiZml4ZWRcIixtb2RpZmllcnM6W3tuYW1lOlwib2Zmc2V0XCIsb3B0aW9uczp7b2Zmc2V0OlswLDVdfX1dfSl9LGUucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpLFwiZmFsc2VcIj09PXRoaXMucHJldmVudFBvcHBlciYmKHRoaXMucG9wcGVySW5zdGFuY2Uuc2V0T3B0aW9ucygoZnVuY3Rpb24odCl7cmV0dXJuIHIocih7fSx0KSx7bW9kaWZpZXJzOnMocyhbXSx0Lm1vZGlmaWVycywhMCksW3tuYW1lOlwiZXZlbnRMaXN0ZW5lcnNcIixlbmFibGVkOiEwfV0sITEpfSl9KSksdGhpcy5wb3BwZXJJbnN0YW5jZS51cGRhdGUoKSksc2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LmVsLmNsYXNzTGlzdC5hZGQoXCJzaG93XCIpLHQuZmlyZUV2ZW50KFwic2hvd1wiLHQuZWwpLCgwLGEuZGlzcGF0Y2gpKFwic2hvdy5ocy50b29sdGlwXCIsdC5lbCx0LmVsKX0pKX0sZS5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKSxcImZhbHNlXCI9PT10aGlzLnByZXZlbnRQb3BwZXImJnRoaXMucG9wcGVySW5zdGFuY2Uuc2V0T3B0aW9ucygoZnVuY3Rpb24odCl7cmV0dXJuIHIocih7fSx0KSx7bW9kaWZpZXJzOnMocyhbXSx0Lm1vZGlmaWVycywhMCksW3tuYW1lOlwiZXZlbnRMaXN0ZW5lcnNcIixlbmFibGVkOiExfV0sITEpfSl9KSksdGhpcy5maXJlRXZlbnQoXCJoaWRlXCIsdGhpcy5lbCksKDAsYS5kaXNwYXRjaCkoXCJoaWRlLmhzLnRvb2x0aXBcIix0aGlzLmVsLHRoaXMuZWwpLCgwLGEuYWZ0ZXJUcmFuc2l0aW9uKSh0aGlzLmNvbnRlbnQsKGZ1bmN0aW9uKCl7aWYodC5lbC5jbGFzc0xpc3QuY29udGFpbnMoXCJzaG93XCIpKXJldHVybiExO3QuY29udGVudC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpfSkpfSxlLmdldEluc3RhbmNlPWZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9ITEpO3ZhciBuPXdpbmRvdy4kaHNUb29sdGlwQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7cmV0dXJuIG4/ZT9uOm4uZWxlbWVudC5lbDpudWxsfSxlLmF1dG9Jbml0PWZ1bmN0aW9uKCl7d2luZG93LiRoc1Rvb2x0aXBDb2xsZWN0aW9ufHwod2luZG93LiRoc1Rvb2x0aXBDb2xsZWN0aW9uPVtdKSxkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmhzLXRvb2x0aXBcIikuZm9yRWFjaCgoZnVuY3Rpb24odCl7d2luZG93LiRoc1Rvb2x0aXBDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybihudWxsPT09KG49bnVsbD09ZT92b2lkIDA6ZS5lbGVtZW50KXx8dm9pZCAwPT09bj92b2lkIDA6bi5lbCk9PT10fSkpfHxuZXcgZSh0KX0pKX0sZS5zaG93PWZ1bmN0aW9uKHQpe3ZhciBlPXdpbmRvdy4kaHNUb29sdGlwQ29sbGVjdGlvbi5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5lbGVtZW50LmVsPT09KFwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCl9KSk7aWYoZSlzd2l0Y2goZS5lbGVtZW50LmV2ZW50TW9kZSl7Y2FzZVwiY2xpY2tcIjplLmVsZW1lbnQuY2xpY2soKTticmVhaztjYXNlXCJmb2N1c1wiOmUuZWxlbWVudC5mb2N1cygpO2JyZWFrO2RlZmF1bHQ6ZS5lbGVtZW50LmVudGVyKCl9fSxlLmhpZGU9ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LiRoc1Rvb2x0aXBDb2xsZWN0aW9uLmZpbmQoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsZW1lbnQuZWw9PT0oXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0KX0pKTtlJiZlLmVsZW1lbnQuaGlkZSgpfSxlLm9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbz13aW5kb3cuJGhzVG9vbHRpcENvbGxlY3Rpb24uZmluZCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuZWxlbWVudC5lbD09PShcInN0cmluZ1wiPT10eXBlb2YgZT9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpOmUpfSkpO28mJihvLmVsZW1lbnQuZXZlbnRzW3RdPW4pfSxlfShjLmRlZmF1bHQpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2QuYXV0b0luaXQoKX0pKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkhTVG9vbHRpcD1kKSxlLmRlZmF1bHQ9ZH0sMzYyOih0LGUsbik9PntPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxlLkNPTExFQ1RJT05TPXZvaWQgMDt2YXIgbz1uKDQxMyksaT1uKDQ2MCkscj1uKDYyOSkscz1uKDY1MiksbD1uKDIzKSxhPW4oNjEwKSxjPW4oMzcxKSx1PW4oNzcwKSxkPW4oNjU5KSxwPW4oMTM5KSxoPW4oNTkxKSxmPW4oMjMzKSxtPW4oOTU3KSx2PW4oOTgzKSx5PW4oOTQ5KSxnPW4oODcpLHc9bigzNjYpLGI9big2NzkpO2UuQ09MTEVDVElPTlM9W3trZXk6XCJjb3B5LW1hcmt1cFwiLGZuOm8uZGVmYXVsdH0se2tleTpcImFjY29yZGlvblwiLGZuOmkuZGVmYXVsdH0se2tleTpcImNhcm91c2VsXCIsZm46ci5kZWZhdWx0fSx7a2V5OlwiY29sbGFwc2VcIixmbjpzLmRlZmF1bHR9LHtrZXk6XCJjb21ib2JveFwiLGZuOmwuZGVmYXVsdH0se2tleTpcImRyb3Bkb3duXCIsZm46YS5kZWZhdWx0fSx7a2V5OlwiaW5wdXQtbnVtYmVyXCIsZm46Yy5kZWZhdWx0fSx7a2V5Olwib3ZlcmxheVwiLGZuOnUuZGVmYXVsdH0se2tleTpcInBpbi1pbnB1dFwiLGZuOmQuZGVmYXVsdH0se2tleTpcInJlbW92ZS1lbGVtZW50XCIsZm46cC5kZWZhdWx0fSx7a2V5Olwic2Nyb2xsc3B5XCIsZm46aC5kZWZhdWx0fSx7a2V5Olwic2VsZWN0XCIsZm46Zi5kZWZhdWx0fSx7a2V5Olwic3RlcHBlclwiLGZuOm0uZGVmYXVsdH0se2tleTpcInN0cm9uZy1wYXNzd29yZFwiLGZuOnYuZGVmYXVsdH0se2tleTpcInRhYnNcIixmbjp5LmRlZmF1bHR9LHtrZXk6XCJ0b2dnbGUtY291bnRcIixmbjpnLmRlZmF1bHR9LHtrZXk6XCJ0b2dnbGUtcGFzc3dvcmRcIixmbjp3LmRlZmF1bHR9LHtrZXk6XCJ0b29sdGlwXCIsZm46Yi5kZWZhdWx0fV19LDMxMzoodCxlLG4pPT57XG4vKlxuICogSFNTdGF0aWNNZXRob2RzXG4gKiBAdmVyc2lvbjogMi4xLjBcbiAqIEBhdXRob3I6IEhUTUxTdHJlYW1cbiAqIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vcHJlbGluZS5jby9kb2NzL2xpY2Vuc2UuaHRtbClcbiAqIENvcHlyaWdodCAyMDIzIEhUTUxTdHJlYW1cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG89big5NjkpLGk9bigzNjIpLHI9e2dldENsYXNzUHJvcGVydHk6by5nZXRDbGFzc1Byb3BlcnR5LGFmdGVyVHJhbnNpdGlvbjpvLmFmdGVyVHJhbnNpdGlvbixhdXRvSW5pdDpmdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD1cImFsbFwiKSxcImFsbFwiPT09dD9pLkNPTExFQ1RJT05TLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZhciBlPXQuZm47bnVsbD09ZXx8ZS5hdXRvSW5pdCgpfSkpOmkuQ09MTEVDVElPTlMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49ZS5rZXksbz1lLmZuO3QuaW5jbHVkZXMobikmJihudWxsPT1vfHxvLmF1dG9Jbml0KCkpfSkpfX07XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5IU1N0YXRpY01ldGhvZHM9ciksZS5kZWZhdWx0PXJ9LDk2OTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZS5tZW51U2VhcmNoSGlzdG9yeT1lLmNsYXNzVG9DbGFzc0xpc3Q9ZS5odG1sVG9FbGVtZW50PWUuYWZ0ZXJUcmFuc2l0aW9uPWUuZGlzcGF0Y2g9ZS5kZWJvdW5jZT1lLmlzRm9ybUVsZW1lbnQ9ZS5pc1BhcmVudE9yRWxlbWVudEhpZGRlbj1lLmlzRW5vdWdoU3BhY2U9ZS5pc0lwYWRPUz1lLmlzSU9TPWUuZ2V0Q2xhc3NQcm9wZXJ0eUFsdD1lLmdldENsYXNzUHJvcGVydHk9ZS5zdHJpbmdUb0Jvb2xlYW49dm9pZCAwO2Uuc3RyaW5nVG9Cb29sZWFuPWZ1bmN0aW9uKHQpe3JldHVyblwidHJ1ZVwiPT09dH07ZS5nZXRDbGFzc1Byb3BlcnR5PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49XCJcIiksKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpLmdldFByb3BlcnR5VmFsdWUoZSl8fG4pLnJlcGxhY2UoXCIgXCIsXCJcIil9O2UuZ2V0Q2xhc3NQcm9wZXJ0eUFsdD1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49XCJcIik7dmFyIG89XCJcIjtyZXR1cm4gdC5jbGFzc0xpc3QuZm9yRWFjaCgoZnVuY3Rpb24odCl7dC5pbmNsdWRlcyhlKSYmKG89dCl9KSksby5tYXRjaCgvOiguKildLyk/by5tYXRjaCgvOiguKildLylbMV06bn07ZS5pc0lPUz1mdW5jdGlvbigpe3JldHVybiEhL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKXx8bmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzJiZuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHM+MiYmL01hY0ludGVsLy50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSl9O2UuaXNJcGFkT1M9ZnVuY3Rpb24oKXtyZXR1cm4gbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzJiZuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHM+MiYmL01hY0ludGVsLy50ZXN0KG5hdmlnYXRvci5wbGF0Zm9ybSl9O2UuaXNFbm91Z2hTcGFjZT1mdW5jdGlvbih0LGUsbixvLGkpe3ZvaWQgMD09PW4mJihuPVwiYXV0b1wiKSx2b2lkIDA9PT1vJiYobz0xMCksdm9pZCAwPT09aSYmKGk9bnVsbCk7dmFyIHI9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxzPWk/aS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTpudWxsLGw9d2luZG93LmlubmVySGVpZ2h0LGE9cz9yLnRvcC1zLnRvcDpyLnRvcCxjPShpP3MuYm90dG9tOmwpLXIuYm90dG9tLHU9dC5jbGllbnRIZWlnaHQrbztyZXR1cm5cImJvdHRvbVwiPT09bj9jPj11OlwidG9wXCI9PT1uP2E+PXU6YT49dXx8Yz49dX07ZS5pc0Zvcm1FbGVtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudHx8dCBpbnN0YW5jZW9mIEhUTUxUZXh0QXJlYUVsZW1lbnR8fHQgaW5zdGFuY2VvZiBIVE1MU2VsZWN0RWxlbWVudH07dmFyIG89ZnVuY3Rpb24odCl7cmV0dXJuISF0JiYoXCJub25lXCI9PT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KS5kaXNwbGF5fHxvKHQucGFyZW50RWxlbWVudCkpfTtlLmlzUGFyZW50T3JFbGVtZW50SGlkZGVuPW87ZS5kZWJvdW5jZT1mdW5jdGlvbih0LGUpe3ZhciBvO3JldHVybiB2b2lkIDA9PT1lJiYoZT0yMDApLGZ1bmN0aW9uKCl7Zm9yKHZhciBpPVtdLHI9MDtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKWlbcl09YXJndW1lbnRzW3JdO2NsZWFyVGltZW91dChvKSxvPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5hcHBseShuLGkpfSksZSl9fTtlLmRpc3BhdGNoPWZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj1udWxsKTt2YXIgbz1uZXcgQ3VzdG9tRXZlbnQodCx7ZGV0YWlsOntwYXlsb2FkOm59LGJ1YmJsZXM6ITAsY2FuY2VsYWJsZTohMCxjb21wb3NlZDohMX0pO2UuZGlzcGF0Y2hFdmVudChvKX07ZS5hZnRlclRyYW5zaXRpb249ZnVuY3Rpb24odCxlKXt2YXIgbj1mdW5jdGlvbigpe2UoKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsbiwhMCl9O3dpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcInRyYW5zaXRpb25cIikhPT0obmF2aWdhdG9yLnVzZXJBZ2VudC5pbmNsdWRlcyhcIkZpcmVmb3hcIik/XCJhbGxcIjpcImFsbCAwcyBlYXNlIDBzXCIpP3QuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIixuLCEwKTplKCl9O2UuaHRtbFRvRWxlbWVudD1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7cmV0dXJuIHQ9dC50cmltKCksZS5pbm5lckhUTUw9dCxlLmNvbnRlbnQuZmlyc3RDaGlsZH07ZS5jbGFzc1RvQ2xhc3NMaXN0PWZ1bmN0aW9uKHQsZSxuLG8pe3ZvaWQgMD09PW4mJihuPVwiIFwiKSx2b2lkIDA9PT1vJiYobz1cImFkZFwiKSx0LnNwbGl0KG4pLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVyblwiYWRkXCI9PT1vP2UuY2xhc3NMaXN0LmFkZCh0KTplLmNsYXNzTGlzdC5yZW1vdmUodCl9KSl9O2UubWVudVNlYXJjaEhpc3Rvcnk9e2hpc3RvcnlJbmRleDotMSxhZGRIaXN0b3J5OmZ1bmN0aW9uKHQpe3RoaXMuaGlzdG9yeUluZGV4PXR9LGV4aXN0c0luSGlzdG9yeTpmdW5jdGlvbih0KXtyZXR1cm4gdD50aGlzLmhpc3RvcnlJbmRleH0sY2xlYXJIaXN0b3J5OmZ1bmN0aW9uKCl7dGhpcy5oaXN0b3J5SW5kZXg9LTF9fX19LGU9e307ZnVuY3Rpb24gbihvKXt2YXIgaT1lW29dO2lmKHZvaWQgMCE9PWkpcmV0dXJuIGkuZXhwb3J0czt2YXIgcj1lW29dPXtleHBvcnRzOnt9fTtyZXR1cm4gdFtvXS5jYWxsKHIuZXhwb3J0cyxyLHIuZXhwb3J0cyxuKSxyLmV4cG9ydHN9bi5kPSh0LGUpPT57Zm9yKHZhciBvIGluIGUpbi5vKGUsbykmJiFuLm8odCxvKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbyx7ZW51bWVyYWJsZTohMCxnZXQ6ZVtvXX0pfSxuLm89KHQsZSk9Pk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpLG4ucj10PT57XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLnRvU3RyaW5nVGFnJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxTeW1ib2wudG9TdHJpbmdUYWcse3ZhbHVlOlwiTW9kdWxlXCJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KX07dmFyIG89e307cmV0dXJuKCgpPT57dmFyIHQ9bztPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkhTU3RhdGljTWV0aG9kcz10LkhTVG9vbHRpcD10LkhTVG9nZ2xlUGFzc3dvcmQ9dC5IU1RvZ2dsZUNvdW50PXQuSFNUaGVtZVN3aXRjaD10LkhTVGFicz10LkhTU3Ryb25nUGFzc3dvcmQ9dC5IU1N0ZXBwZXI9dC5IU1NlbGVjdD10LkhTU2Nyb2xsc3B5PXQuSFNTZWFyY2hCeUpzb249dC5IU1JlbW92ZUVsZW1lbnQ9dC5IU1BpbklucHV0PXQuSFNPdmVybGF5PXQuSFNJbnB1dE51bWJlcj10LkhTRHJvcGRvd249dC5IU0NvbWJvQm94PXQuSFNDb2xsYXBzZT10LkhTQ2Fyb3VzZWw9dC5IU0FjY29yZGlvbj10LkhTQ29weU1hcmt1cD12b2lkIDA7dmFyIGU9big0MTMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNDb3B5TWFya3VwXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH19KTt2YXIgaT1uKDQ2MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU0FjY29yZGlvblwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBpLmRlZmF1bHR9fSk7dmFyIHI9big2MjkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNDYXJvdXNlbFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiByLmRlZmF1bHR9fSk7dmFyIHM9big2NTIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNDb2xsYXBzZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBzLmRlZmF1bHR9fSk7dmFyIGw9bigyMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU0NvbWJvQm94XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGwuZGVmYXVsdH19KTt2YXIgYT1uKDYxMCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU0Ryb3Bkb3duXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEuZGVmYXVsdH19KTt2YXIgYz1uKDM3MSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU0lucHV0TnVtYmVyXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGMuZGVmYXVsdH19KTt2YXIgdT1uKDc3MCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU092ZXJsYXlcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdS5kZWZhdWx0fX0pO3ZhciBkPW4oNjU5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkhTUGluSW5wdXRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZC5kZWZhdWx0fX0pO3ZhciBwPW4oMTM5KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkhTUmVtb3ZlRWxlbWVudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBwLmRlZmF1bHR9fSk7dmFyIGg9big5NjEpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNTZWFyY2hCeUpzb25cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaC5kZWZhdWx0fX0pO3ZhciBmPW4oNTkxKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkhTU2Nyb2xsc3B5XCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGYuZGVmYXVsdH19KTt2YXIgbT1uKDIzMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU1NlbGVjdFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBtLmRlZmF1bHR9fSk7dmFyIHY9big5NTcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNTdGVwcGVyXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHYuZGVmYXVsdH19KTt2YXIgeT1uKDk4Myk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU1N0cm9uZ1Bhc3N3b3JkXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHkuZGVmYXVsdH19KTt2YXIgZz1uKDk0OSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU1RhYnNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZy5kZWZhdWx0fX0pO3ZhciB3PW4oNTU3KTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIkhTVGhlbWVTd2l0Y2hcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdy5kZWZhdWx0fX0pO3ZhciBiPW4oODcpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNUb2dnbGVDb3VudFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBiLmRlZmF1bHR9fSk7dmFyIEM9bigzNjYpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNUb2dnbGVQYXNzd29yZFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBDLmRlZmF1bHR9fSk7dmFyIFM9big2NzkpO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiSFNUb29sdGlwXCIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFMuZGVmYXVsdH19KTt2YXIgeD1uKDMxMyk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJIU1N0YXRpY01ldGhvZHNcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4geC5kZWZhdWx0fX0pfSkoKSxvfSkoKSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==